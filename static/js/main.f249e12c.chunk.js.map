{"version":3,"sources":["store/actions/actionTypes.js","store/actions/flash.js","base.js","store/actions/auth.js","store/actions/comments.js","store/actions/posts.js","store/actions/topics.js","store/actions/sidebar.js","components/ScrollToTop.js","components/helpers/Nav.js","components/functions/dateSince.js","components/helpers/Votes.js","components/Home.js","components/Register.js","components/Login.js","components/NewPost.js","components/NewTopic.js","components/TopicPosts.js","components/helpers/AuthCreator.js","components/helpers/AuthShow.js","components/helpers/Comment.js","components/Post.js","components/Topics.js","components/helpers/AuthHide.js","components/helpers/Sidebar.js","components/SearchPosts.js","components/helpers/FlashError.js","components/helpers/FlashSuccess.js","components/helpers/FlashLoading.js","components/UserPosts.js","components/NewLinkPost.js","components/PageNotFound.js","App.js","store/reducers/auth.js","store/reducers/posts.js","store/reducers/topics.js","store/reducers/sidebar.js","store/reducers/comments.js","store/reducers/flash.js","index.js"],"names":["AUTHORIZE","DEAUTHORIZE","TOGGLE_REGISTER_MODAL","TOGGLE_LOGIN_MODAL","LOAD_POSTS","SET_SINGLE_POST","TOGGLE_EDIT_POST","EDIT_POST_INPUT","SET_POST_VOTE","SET_SINGLE_POST_VOTE","ADD_COMMENT","TOGGLE_REPLY_FORM","REPLY_INPUT","RESET_REPLY_INPUT","SET_DELETED_COMMENT","TOGGLE_EDIT_COMMENT","EDIT_COMMENT_INPUT","TOGGLE_SHOW_COMMENT","SET_SINGLE_POST_COMMENTS","SET_TOPICS","SET_ADDED_TOPIC","SET_SIDEBAR","TOGGLE_SIDEBAR","SET_ERROR","SET_SUCCESS","SET_LOADING","SET_TIMEOUT","setError","error","type","actionTypes","setSuccess","success","setLoading","loading","setTimeout","timeout","base","authorize","user_id","userLogout","dispatch","localStorage","removeItem","toggleRegisterModal","toggleLoginModal","addComment","comment","toggleReplyForm","comment_id","commentReply","text","post_id","parent","token","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","response","json","data","console","log","Error","message","catch","deleteComment","setDeletedComment","toggleEditComment","canceled","newPost","postForm","history","topic","split","join","toLowerCase","push","loadPosts","posts","page","setSinglePost","post","getSinglePost","query","jwt_decode","sub","comments","toggleEditPost","postVote","vote","single_post","setSinglePostVote","setPostVote","getTopics","topics","addTopic","setAddedTopic","setSidebar","isHome","name","description","toggleSidebar","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","connect","state","isAuth","auth","sidebar","sidebarShow","show","onToggleSidebar","actions","props","className","to","onClick","aria-label","xmlns","viewBox","d","fillRule","dateSince","date","duration","Date","now","toFixed","onSetError","onPostVote","user_vote","votes","flash","onGetPosts","onSetSidebar","length","postsDisplay","map","index","title","time","username","onUserRegister","registerForm","setItem","expires","Number","expiresIn","decoded","goBack","onToggleRegisterModal","useState","password","confirmPassword","setRegisterForm","useHistory","handleInput","e","target","value","currentTarget","onSubmit","preventDefault","htmlFor","onChange","required","minLength","disabled","onUserLogin","loginForm","credentials","onToggleLoginModal","setLoginForm","onNewPost","setPostForm","location","onNewTopic","topicForm","setTopicForm","maxLength","onGetTopicPosts","onAddTopic","useParams","topicIndex","findIndex","topicState","creator_id","Fragment","children","onToggleReplyForm","onCommentReply","onReplyInput","onDeleteComment","onToggleEditComment","onEditCommentInput","onEditComment","onToggleShowComment","Comment","replies","allComments","filter","commentContent","editing","id","data-index","AuthCreator","showReply","reply","placeholder","onSetSinglePost","onGetSinglePost","onNewComment","commentForm","onDeletePost","onToggleEditPost","onEditPostInput","onEditPost","replace","postDisplay","postContentDisplay","imgPattern","includes","link","test","match","start","src","frameBorder","allow","allowFullScreen","alt","href","toString","setCommentForm","commentsDisplay","onGetTopics","topicsDisplay","topic_id","onUserLogout","search","setSearch","stopPropagation","onGetSearchPosts","q","URLSearchParams","get","onSetTimeout","errorDisplay","clearTimeout","onSetSuccess","successDisplay","onGetUserPosts","PageNotFound","registerModal","loginModal","onAuthorize","expiration","isLoggedIn","path","exact","initialState","action","deauthorize","reducer","original","editPostInput","previousVote","setTopics","duplicateComments","duplicate","setSinglePostComments","replyInput","resetReplyInput","editCommentInput","toggleShowComment","messages","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f249e12c.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const TOGGLE_REGISTER_MODAL = \"TOGGLE_REGISTER_MODAL\";\nexport const TOGGLE_LOGIN_MODAL = \"TOGGLE_LOGIN_MODAL\";\n\nexport const LOAD_POSTS = \"LOAD_POSTS\";\nexport const SET_SINGLE_POST = \"SET_SINGLE_POST\";\nexport const TOGGLE_EDIT_POST = \"TOGGLE_EDIT_POST\";\nexport const EDIT_POST_INPUT = \"EDIT_POST_INPUT\";\nexport const SET_POST_VOTE = \"SET_POST_VOTE\";\nexport const SET_SINGLE_POST_VOTE = \"SET_SINGLE_POST_VOTE\";\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const TOGGLE_REPLY_FORM = \"TOGGLE_REPLY_FORM\";\nexport const COMMENT_REPLY = \"COMMENT_REPLY\";\nexport const REPLY_INPUT = \"REPLY_INPUT\";\nexport const RESET_REPLY_INPUT = \"RESET_REPLY_INPUT\";\nexport const SET_DELETED_COMMENT = \"SET_DELETED_COMMENT\";\nexport const TOGGLE_EDIT_COMMENT = \"TOGGLE_EDIT_COMMENT\";\nexport const EDIT_COMMENT_INPUT = \"EDIT_COMMENT_INPUT\";\nexport const TOGGLE_SHOW_COMMENT = \"TOGGLE_SHOW_COMMENT\";\nexport const SET_SINGLE_POST_COMMENTS = \"SET_SINGLE_POST_COMMENTS\";\n\nexport const SET_TOPICS = \"SET_TOPICS\";\nexport const SET_ADDED_TOPIC = \"SET_ADDED_TOPIC\";\n\nexport const SET_SIDEBAR = \"SET_SIDEBAR\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\n\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_SUCCESS = \"SET_SUCCESS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const setError = (error) => {\n  return {\n    type: actionTypes.SET_ERROR,\n    error,\n  };\n};\n\nexport const setSuccess = (success) => {\n  return {\n    type: actionTypes.SET_SUCCESS,\n    success,\n  };\n};\n\nexport const setLoading = (loading) => {\n  return {\n    type: actionTypes.SET_LOADING,\n    loading,\n  }\n}\n\nexport const setTimeout = (timeout) => {\n  return {\n    type: actionTypes.SET_TIMEOUT,\n    timeout\n  }\n}","const base = \"http://10.0.0.6:3000\";\n// const base = \"https://sheltered-lake-91716.herokuapp.com\";\n\nexport default base;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport { setError, setLoading, setSuccess } from \"./flash\";\nimport base from \"../../base\";\n\n// Authorize user\nexport const authorize = (user_id) => {\n  return {\n    type: actionTypes.AUTHORIZE,\n    user_id,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expires\");\n\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Logout user\nexport const userLogout = () => {\n  return (dispatch) => {\n    dispatch(deauthorize());\n    dispatch(setSuccess(\"Logged out\"));\n  };\n};\n\n// Toggle register modal\nexport const toggleRegisterModal = () => {\n  return {\n    type: actionTypes.TOGGLE_REGISTER_MODAL,\n  };\n};\n\n// Toggle register modal\nexport const toggleLoginModal = () => {\n  return {\n    type: actionTypes.TOGGLE_LOGIN_MODAL,\n  };\n};\n\n// Handle register user submission to backend\nexport const userRegister = (registerForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/register`, {\n      method: \"POST\",\n      body: JSON.stringify(registerForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        // Close modal on success\n        dispatch(toggleRegisterModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Handle login submission to backend\nexport const userLogin = (loginForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    fetch(`${base}/login`, {\n      method: \"POST\",\n      body: JSON.stringify(loginForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n    })\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        // localStorage.setItem(\"token\", data.token);\n        // const expires = Date.now() + Number(data.expiresIn);\n        // localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        // const decoded = jwt_decode(data.token);\n        // dispatch(authorize(decoded.sub));\n        dispatch(authorize(data.user_id));\n        localStorage.setItem(\"user_id\", data.user_id);\n\n        dispatch(toggleLoginModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport {setError, setSuccess, setLoading} from \"./flash\";\n\n// Add comment to post\nexport const addComment = (comment) => {\n  return {\n    type: actionTypes.ADD_COMMENT,\n    comment,\n  };\n};\n\n// Submit new comment\nexport const newComment = (commentForm, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ ...commentForm, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Set comments of one post\nexport const setSinglePostComments = (comments) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_COMMENTS,\n    comments,\n  };\n};\n\n// Toggle display of comment reply form\nexport const toggleReplyForm = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_REPLY_FORM,\n    comment_id,\n  };\n};\n\n// Reset submitted comment reply's input and close input form\nexport const resetReplyInput = (comment_id) => {\n  return {\n    type: actionTypes.RESET_REPLY_INPUT,\n    comment_id,\n  };\n};\n\n// Submit comment to backend\nexport const commentReply = (text, post_id, parent) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ text, post_id, parent }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        // Reset input\n        dispatch(resetReplyInput(parent));\n\n        // Close input form\n        dispatch(toggleReplyForm(parent));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Handle input of comment reply\nexport const replyInput = (value, comment_id) => {\n  return {\n    type: actionTypes.REPLY_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Set comment to deleted in state\nexport const setDeletedComment = (comment_id) => {\n  return {\n    type: actionTypes.SET_DELETED_COMMENT,\n    comment_id,\n  };\n};\n\n// Delete comment from database\nexport const deleteComment = (comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Remove from state\n        dispatch(setDeletedComment(comment_id));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditComment = (comment_id, canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_COMMENT,\n    comment_id,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editCommentInput = (value, comment_id) => {\n  return {\n    type: actionTypes.EDIT_COMMENT_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Submit edited comment to backend\nexport const editComment = (text, comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditComment(comment_id));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle showing of comment and its' children\nexport const toggleShowComment = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_COMMENT,\n    comment_id,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setSinglePostComments } from \"./comments\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\nimport jwt_decode from \"jwt-decode\";\n\n// Submit new post\nexport const newPost = (postForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    postForm.topic = postForm.topic.split(\" \").join(\"\").toLowerCase();\n    console.log(postForm);\n    fetch(`${base}/posts/new`, {\n      method: \"POST\",\n      body: JSON.stringify(postForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${postForm.topic}/${data.post_id}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Load posts\nexport const loadPosts = (posts, page) => {\n  return {\n    type: actionTypes.LOAD_POSTS,\n    posts,\n    page,\n  };\n};\n\n// Get posts\nexport const getPosts = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query = `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts, \"home\"));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts for a single topic\nexport const getTopicPosts = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/topics/${topic}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts, topic));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Set single post\nexport const setSinglePost = (post) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST,\n    post,\n  };\n};\n\n// Get single post\nexport const getSinglePost = (post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/${post_id}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add posts to state\n        dispatch(setSinglePost(data.post));\n\n        // Add comments to state\n        dispatch(setSinglePostComments(data.comments));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Delete a post\nexport const deletePost = (post_id, history, topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${topic}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditPost = (canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_POST,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editPostInput = (value, post_id) => {\n  return {\n    type: actionTypes.EDIT_POST_INPUT,\n    value,\n    post_id,\n  };\n};\n\n// Submit edited post to backend\nexport const editPost = (text, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditPost());\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getSearchPosts = (query) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]));\n    const q = query;\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/search?q=${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts, \"SEARCH: \" + q));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getUserPosts = (username) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query = `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/user/${username}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts, \"USERNAME: \" + username));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\nexport const setPostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\nexport const setSinglePostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\n// Vote on a post\nexport const postVote = (vote, post_id, single_post) => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n\n    fetch(`${base}/posts/${post_id}/vote`, {\n      method: \"POST\",\n      body: JSON.stringify({ post_id, vote }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set single post vote if on single post page\n        if (single_post) {\n          dispatch(setSinglePostVote(vote, post_id));\n        } else {\n          dispatch(setPostVote(vote, post_id));\n        }\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\n\n// Submit new topic\nexport const newTopic = (topicForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    const token = localStorage.getItem(\"token\");\n\n    // Remove spaces from topic name and make lowercase\n    topicForm.name = topicForm.name.split(\" \").join(\"\").toLowerCase();\n\n    fetch(`${base}/newtopic`, {\n      method: \"POST\",\n      body: JSON.stringify(topicForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n\n        // Redirect\n        history.push(`/topics/${topicForm.name}`);\n\n        // Set loading and success message\n        dispatch(setLoading(true));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set topics in state\nexport const setTopics = (topics) => {\n  return {\n    type: actionTypes.SET_TOPICS,\n    topics,\n  };\n};\n\n// Get list of topics\nexport const getTopics = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    // dispatch(setTopics([]));\n\n    fetch(`${base}/posts/topics`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(setTopics(data.topics));\n\n        // Stop loading\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set added topic in state\nexport const setAddedTopic = (topic) => {\n  return {\n    type: actionTypes.SET_ADDED_TOPIC,\n    topic,\n  };\n};\n\n// Fetch topic information\nexport const addTopic = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/posts/singletopic`, {\n      method: \"POST\",\n      body: JSON.stringify({ topic }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        dispatch(setAddedTopic(data.topic));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Set sidebar content\nexport const setSidebar = (isHome, name, description) => {\n  return {\n    type: actionTypes.SET_SIDEBAR,\n    isHome,\n    name,\n    description,\n  };\n};\n\n// Toggle sidebar showing\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR\n  }\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\n\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"nav-logo\"\n            onClick={props.sidebarShow ? props.onToggleSidebar : null}\n          >\n            Sayit\n          </Link>\n        </li>\n        <button\n          className=\"menu-button\"\n          onClick={props.onToggleSidebar}\n          aria-label=\"toggle-sidebar\"\n        >\n          {props.sidebarShow ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          )}\n        </button>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    sidebar: state.sidebar.sidebar,\n    sidebarShow: state.sidebar.show,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","const dateSince = (date) => {\n  const duration = (Date.now() - new Date(date)) / 1000;\n  if (duration < 60) {\n    return `${duration.toFixed(0)} seconds ago`;\n  } else if (duration < 60 * 60) {\n    return `${(duration / 60).toFixed(0)} minutes ago`;\n  } else if (duration < 60 * 60 * 24) {\n    return `${(duration / (60 * 60)).toFixed(0)} hours ago`;\n  } else if (duration < 60 * 60 * 24 * 365) {\n    return `${(duration / (60 * 60 * 24)).toFixed(0)} days ago`;\n  } else {\n    return `${(duration / (60 * 60 * 24 * 365)).toFixed(0)} years ago`;\n  }\n}\n\nexport default dateSince;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst Votes = (props) => {\n  const voteUp = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === 1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(1, props.post_id, props.single_post);\n  };\n\n  const voteDown = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === -1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(-1, props.post_id, props.single_post);\n  };\n\n  return (\n    <div className=\"post-votes\">\n      <svg\n        onClick={voteUp}\n        className={props.user_id && props.user_vote === 1 ? \"vote-up\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n      </svg>\n      <p>{props.votes}</p>\n      <svg\n        onClick={voteDown}\n        className={props.user_id && props.user_vote === -1 ? \"vote-down\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n      </svg>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  user_id: state.auth.user_id,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetError: (error) => {\n    dispatch(actions.setError(error));\n  },\n  onPostVote: (vote, post_id, single_post) => {\n    dispatch(actions.postVote(vote, post_id, single_post));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Votes);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\n\nconst Home = (props) => {\n  useEffect(() => {\n    // Fetch posts on first load or if from a different set of posts\n    if (\n      !props.history.length ||\n      props.history[props.history.length - 1] !== \"home\"\n    ) {\n      props.onGetPosts();\n    }\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <Votes\n          post_id={post.post_id}\n          votes={post.votes}\n          user_vote={post.user_vote}\n        />\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in{\" \"}\n            <Link className=\"post-topic\" to={`/topics/${post.topic}`}>\n              {post.topic}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history[props.history.length - 1] === \"home\" ? (\n        <ul className=\"posts-list\">{postsDisplay}</ul>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  user_id: state.auth.user_id,\n  loading: state.flash.loading,\n  history: state.posts.history,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetPosts: () => {\n      dispatch(actions.getPosts());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\n\nconst Register = (props) => {\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserRegister(registerForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleRegisterModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Register</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleRegisterModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={registerForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={registerForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={registerForm.confirmPassword}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button\n            className=\"basic-button\"\n            type=\"submit\"\n            aria-label=\"submit\"\n            disabled={props.loading ? \"disabled\" : null}\n          >\n            Register\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserRegister: (registerForm, history) => {\n      dispatch(actions.userRegister(registerForm, history));\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setLoginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserLogin(loginForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleLoginModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Login</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleLoginModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={loginForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={loginForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\" disabled={props.loading ? \"disabled\" : null}>\n            Login\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserLogin: (loginForm, history) => {\n      dispatch(actions.userLogin(loginForm, history));\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n          ></textarea>\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewTopic.css\";\n\nconst NewTopic = (props) => {\n  let history = useHistory();\n\n  useEffect(() => {\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [topicForm, setTopicForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setTopicForm({\n      ...topicForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewTopic(topicForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Topic</h1>\n      <form className=\"auth-form new-topic-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name*</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={topicForm.name}\n            onChange={handleInput}\n            required\n            maxLength=\"100\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Description*</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={topicForm.description}\n            onChange={handleInput}\n            required\n            maxLength=\"255\"\n          />\n        </div>\n        <button\n          className=\"basic-button\"\n          type=\"submit\"\n          aria-label=\"submit\"\n          disabled={props.loading ? \"disabled\" : false}\n        >\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewTopic: (topicForm, history) => {\n      dispatch(actions.newTopic(topicForm, history));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTopic);\n","import React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\n\nconst TopicPosts = (props) => {\n  let { topic } = useParams();\n  topic = topic.toLowerCase();\n\n  // Get posts on first run or if topic changes\n  useEffect(() => {\n    if (\n      !props.history.length ||\n      props.history[props.history.length - 1] !== \"TOPIC: \" + topic\n    ) {\n      props.onGetTopicPosts(topic);\n    }\n    // eslint-disable-next-line\n  }, [topic]);\n\n  useEffect(() => {\n    // Find index of topic in state\n    let topicIndex = -1;\n    if (props.topics.length) {\n      topicIndex = props.topics.findIndex(\n        (topicState) => topicState && topicState.name === topic\n      );\n    }\n\n    // If topic not in state, fetch and add it\n    if (topicIndex === -1) {\n      props.onAddTopic(topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [topic, props.topics]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {props.history[props.history.length - 1] === \"TOPIC: \" + topic ? (\n        <h1 className=\"page-title\">{topic}</h1>\n      ) : null}\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.posts,\n    topics: state.topics.topics,\n    error: state.flash.error,\n    loading: state.flash.loading,\n    history: state.posts.history,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopicPosts: (topic) => {\n      dispatch(actions.getTopicPosts(topic));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPosts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show if the user was the creator of post or comment\n  if (props.user_id === props.creator_id) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  user_id: state.auth.user_id\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show to logged in users\n  if (props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Link} from \"react-router-dom\"\nimport * as actions from \"../../store/actions/index\";\nimport AuthCreator from \"./AuthCreator\";\nimport AuthShow from \"./AuthShow\";\nimport dateSince from \"../functions/dateSince\"\n\nconst Comment = (props) => {\n  // Submit reply to a comment\n  const submitCommentReply = (e) => {\n    e.preventDefault();\n    props.onCommentReply(\n      props.comment.reply,\n      props.post_id,\n      props.comment.comment_id\n    );\n  };\n\n  // Submit comment after editing\n  const submitCommentEdit = (e) => {\n    e.preventDefault();\n    props.onEditComment(props.comment.text, props.comment.comment_id);\n  };\n\n  // Filter comments that have this comment as it's parent\n  const replies = props.allComments.filter(\n    (comment) => comment.parent === props.comment.comment_id\n  );\n\n  // Change content when hiding comment\n  let commentContent = null;\n  if (props.comment.show) {\n    commentContent = (\n      <React.Fragment>\n        {props.comment.editing ? (\n          <form className=\"edit-comment-form\" onSubmit={submitCommentEdit}>\n            <div>\n              <label htmlFor=\"editComment\" />\n              <textarea\n                name=\"text\"\n                id=\"editComment\"\n                value={props.comment.text}\n                onChange={(e) =>\n                  props.onEditCommentInput(\n                    e.target.value,\n                    props.comment.comment_id\n                  )\n                }\n                required\n              ></textarea>\n            </div>\n            <button className=\"basic-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"basic-button\"\n              type=\"button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() =>\n                props.onToggleEditComment(props.comment.comment_id, true)\n              }\n            >\n              Cancel\n            </button>\n          </form>\n        ) : (\n          <div className=\"comment-text\">\n            <p>{props.comment.text}</p>\n          </div>\n        )}\n        <AuthShow>\n          <div className=\"comment-buttons\">\n            <button\n              data-index={props.index}\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() => props.onToggleReplyForm(props.comment.comment_id)}\n            >\n              Reply\n            </button>\n            <AuthCreator creator_id={props.comment.user_id}>\n              <button\n                type=\"button\"\n                aria-label=\"delete\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeleteComment(props.comment.comment_id)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"edit\"\n                aria-label=\"edit\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleEditComment(props.comment.comment_id)\n                }\n              >\n                Edit\n              </button>\n            </AuthCreator>\n          </div>\n          {props.comment.showReply ? (\n            <form className=\"reply-form\" onSubmit={submitCommentReply}>\n              <div>\n                <label htmlFor=\"commentReply\"></label>\n                <textarea\n                  name=\"comment\"\n                  id=\"commentReply\"\n                  placeholder=\"Reply\"\n                  value={props.comment.reply}\n                  onChange={(e) =>\n                    props.onReplyInput(e.target.value, props.comment.comment_id)\n                  }\n                  required\n                ></textarea>\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n              <button\n                className=\"basic-button\"\n                type=\"button\"\n                aria-label=\"cancel\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleReplyForm(props.comment.comment_id)\n                }\n              >\n                Cancel\n              </button>\n            </form>\n          ) : null}\n        </AuthShow>\n        <ul>\n          {replies.map((comment) => {\n            return (\n              <Comment\n                allComments={props.allComments}\n                comment={comment}\n                post_id={props.post_id}\n                key={comment.comment_id}\n                loading={props.loading}\n                onToggleReplyForm={props.onToggleReplyForm}\n                onReplyInput={props.onReplyInput}\n                onCommentReply={props.onCommentReply}\n                onDeleteComment={props.onDeleteComment}\n                onToggleEditComment={props.onToggleEditComment}\n                onEditCommentInput={props.onEditCommentInput}\n                onEditComment={props.onEditComment}\n                onToggleShowComment={props.onToggleShowComment}\n              />\n            );\n          })}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <li className=\"child\" key={props.comment.comment_id}>\n      <p className=\"comment-subtitle\">\n        <button\n          onClick={() => props.onToggleShowComment(props.comment.comment_id)}\n        >\n          {props.comment.show ? \"[–]\" : \"[+]\"}\n        </button>\n        <Link className=\"post-username comment-username\" to={`/users/${props.comment.username}`}>\n              {props.comment.username}\n            </Link>\n        {dateSince(props.comment.time)}\n      </p>\n      {props.comment.show ? commentContent : null}\n    </li>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleReplyForm: (index) => {\n      dispatch(actions.toggleReplyForm(index));\n    },\n    onCommentReply: (text, post_id, parent) => {\n      dispatch(actions.commentReply(text, post_id, parent));\n    },\n    onReplyInput: (value, comment_id) => {\n      dispatch(actions.replyInput(value, comment_id));\n    },\n    onDeleteComment: (comment_id) => {\n      dispatch(actions.deleteComment(comment_id));\n    },\n    onToggleEditComment: (comment_id, canceled) => {\n      dispatch(actions.toggleEditComment(comment_id, canceled));\n    },\n    onEditCommentInput: (value, comment_id) => {\n      dispatch(actions.editCommentInput(value, comment_id));\n    },\n    onEditComment: (text, comment_id) => {\n      dispatch(actions.editComment(text, comment_id));\n    },\n    onToggleShowComment: (comment_id) => {\n      dispatch(actions.toggleShowComment(comment_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport Comment from \"./helpers/Comment\";\nimport AuthShow from \"./helpers/AuthShow\";\nimport AuthCreator from \"./helpers/AuthCreator\";\nimport dateSince from \"./functions/dateSince\";\nimport \"./Post.css\";\nimport Votes from \"./helpers/Votes\";\n\nconst Post = (props) => {\n  const { post_id, topic } = useParams();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    // Fetch only if post undefined or wrong post\n    if (!props.post.post_id || props.post.post_id !== Number(post_id)) {\n      props.onGetSinglePost(post_id, topic, history);\n    }\n\n    // If topic in url wrong redirect to correct page\n    if (\n      props.post.post_id &&\n      props.post.post_id === Number(post_id) &&\n      props.post.topic !== topic\n    ) {\n      history.replace(`/topics/${props.post.topic}/${post_id}`);\n    }\n\n    // Find index of topic in state\n    const topicIndex = props.topics.findIndex(\n      (topic) => topic.name === props.post.topic\n    );\n\n    // If post defined and topic not in state, fetch and add it\n    if (props.post.topic && topicIndex === -1) {\n      props.onAddTopic(props.post.topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (props.post.topic && topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [post_id, props.post.topic, props.topics]);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n  }, [post_id]);\n\n  // Submit post after editing\n  const submitPostEdit = (e) => {\n    e.preventDefault();\n    props.onEditPost(props.post.text, props.post.post_id);\n  };\n\n  let postDisplay = [];\n\n  // If post set and the post ids' match, display post\n  if (props.post.post_id && Number(props.post.post_id) === Number(post_id)) {\n    let postContentDisplay = null;\n    const imgPattern = /.(jpg|jpeg|png|gif|gifv|webp)$/;\n    console.log();\n\n    // Change displayed post content if has a link in it\n    if (props.post.text.includes(\"<<<Link>>>\")) {\n      const link = props.post.text.replace(\"<<<Link>>>\", \"\");\n      console.log(imgPattern.test(link));\n\n      // Parse for embedded iframe if youtube link\n      if (link.includes(\"youtube.com\") || link.includes(\"youtu.be\")) {\n        const idPattern = /[A-Za-z0-9]{11}/;\n        const id = link.match(idPattern);\n\n        const timePattern = /(t=\\d+)|(start=\\d+)/;\n        const time = link.match(timePattern);\n        let start = \"\";\n        if (time) {\n          start = time[0].split(\"=\")[1];\n        }\n        // Update if valid video\n        if (id) {\n          const src = `https://www.youtube.com/embed/${id[0]}?start=${start}`;\n          // Set iframe\n          postContentDisplay = (\n            <iframe\n              src={src}\n              title={props.post.title}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          );\n        }\n      } else if (imgPattern.test(link)) {\n        // Show img if ends with image extension\n        postContentDisplay = (\n          <img\n            src={props.post.text.replace(\"<<<Link>>>\", \"\")}\n            alt={props.post.title}\n          />\n        );\n        // Else just show link\n      } else {\n        postContentDisplay = (\n          <a href={props.post.text.replace(\"<<<Link>>>\", \"\")}>\n            {props.post.text.replace(\"<<<Link>>>\", \"\")}\n          </a>\n        );\n      }\n    } else {\n      postContentDisplay = <p>{props.post.text}</p>;\n    }\n\n    // Display of whole post\n    postDisplay = (\n      <div className=\"single-post\">\n        <div className=\"post-votes\">\n          <Votes\n            post_id={props.post.post_id}\n            votes={props.post.votes}\n            user_vote={props.post.user_vote}\n            single_post={true}\n          />\n        </div>\n        <div className=\"post-details\">\n          <div className=\"post-title\">\n            <Link to={`/topics/${props.post.topic}/${props.post.post_id}`}>\n              {props.post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(props.post.time)} by{\" \"}\n            <Link\n              className=\"props.post-username\"\n              to={`/users/${props.post.username}`}\n            >\n              {props.post.username}\n            </Link>\n          </p>\n          {props.post.editing ? (\n            <form className=\"edit-post-form\" onSubmit={submitPostEdit}>\n              <label htmlFor=\"editPost\" aria-label=\"edit post\" />\n              <textarea\n                id=\"editPost\"\n                name=\"text\"\n                value={props.post.text.toString()}\n                onChange={(e) => props.onEditPostInput(e.target.value)}\n              ></textarea>\n              <div>\n                <button\n                  className=\"basic-button\"\n                  type=\"submit\"\n                  disabled={props.loading ? \"disabled\" : false}\n                >\n                  Submit\n                </button>\n                <button\n                  className=\"basic-button\"\n                  type=\"button\"\n                  aria-label=\"cancel\"\n                  disabled={props.loading ? \"disabled\" : false}\n                  onClick={() => props.onToggleEditPost(true)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div className=\"post-text\">{postContentDisplay}</div>\n          )}\n          <AuthCreator creator_id={props.post.user_id}>\n            <div className=\"comment-buttons\">\n              <button\n                type=\"button\"\n                aria-label=\"delete post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeletePost(post_id, history, topic)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                aria-label=\"edit post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onToggleEditPost()}\n              >\n                Edit\n              </button>\n            </div>\n          </AuthCreator>\n        </div>\n      </div>\n    );\n  }\n\n  const [commentForm, setCommentForm] = useState({\n    text: \"\",\n  });\n\n  // Get comments with no parent\n  const topLevelComments = props.comments.filter((comment) => !comment.parent);\n\n  // Display comments by newest for now\n  const commentsDisplay = topLevelComments.map((comment) => {\n    return (\n      <Comment\n        allComments={props.comments}\n        comment={comment}\n        key={comment.comment_id}\n        post_id={post_id}\n      />\n    );\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setCommentForm({\n      ...commentForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewComment(commentForm, post_id);\n\n    // Reset to blank\n    setCommentForm({\n      text: \"\",\n    });\n  };\n\n  return (\n    <section>\n      {postDisplay}\n      {!props.post.post_id || props.post.post_id !== Number(post_id) ? null : (\n        <div className=\"comments-section\">\n          <h2>Comments</h2>\n          <AuthShow>\n            <form className=\"new-comment-form\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"newComment\" aria-label=\"new comment\"></label>\n                <textarea\n                  name=\"text\"\n                  id=\"newComment\"\n                  placeholder=\"New Comment\"\n                  value={commentForm.text}\n                  onChange={handleInput}\n                  required\n                />\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n            </form>\n          </AuthShow>\n          <ul>{commentsDisplay}</ul>\n        </div>\n      )}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  post: state.posts.post,\n  comments: state.comments.comments,\n  topics: state.topics.topics,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSinglePost: (post) => {\n      dispatch(actions.setSinglePost(post));\n    },\n    onGetSinglePost: (post_id) => {\n      dispatch(actions.getSinglePost(post_id));\n    },\n    onNewComment: (commentForm, post_id) => {\n      dispatch(actions.newComment(commentForm, post_id));\n    },\n    onDeletePost: (post_id, history, topic) => {\n      dispatch(actions.deletePost(post_id, history, topic));\n    },\n    onToggleEditPost: (canceled) => {\n      dispatch(actions.toggleEditPost(canceled));\n    },\n    onEditPostInput: (value) => {\n      dispatch(actions.editPostInput(value));\n    },\n    onEditPost: (text, post_id) => {\n      dispatch(actions.editPost(text, post_id));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport \"./Topics.css\";\n\nconst Topics = (props) => {\n  useEffect(() => {\n    // Get list of topics\n    props.onGetTopics();\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const topicsDisplay = props.topics.map((topic) => {\n    return (\n      <li key={topic.topic_id}>\n        <Link to={`/topics/${topic.name}`}>{topic.name}</Link>\n        <p>{topic.description}</p>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <h1 className=\"page-title\">Topics</h1>\n      <ul className=\"topics-list\">{topicsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  topics: state.topics.topics,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopics: () => {\n      dispatch(actions.getTopics());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthHide = (props) => {\n  // Only show to user that are not logged in\n  if (!props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthHide);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthShow from \"./AuthShow\";\nimport AuthHide from \"./AuthHide\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = (props) => {\n  const [search, setSearch] = useState(\"\");\n\n  // Handle input in search bar\n  const searchInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  let history = useHistory();\n\n  // Handle search bar submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n\n    history.push(`/search?q=${search}`);\n\n    setSearch(\"\");\n  };\n\n  return (\n    <aside\n      className={`sidebar ${props.show ? \"open\" : \"\"}`}\n      onClick={props.onToggleSidebar}\n    >\n      <form onSubmit={handleSearchSubmit}>\n        <div className=\"search-bar\">\n          <label htmlFor=\"search\"></label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            placeholder=\"search\"\n            value={search}\n            onChange={searchInput}\n            required\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          />\n          <button type=\"submit\" aria-label=\"search\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div className=\"sidebar-links\">\n        <Link to=\"/topics\">Topics</Link>\n        <AuthShow>\n          <Link\n            to={{ pathname: \"/newpost\", state: { topic: props.sidebar.name } }}\n          >\n            New Post\n          </Link>\n          <Link\n            to={{ pathname: \"/newlinkpost\", state: { topic: props.sidebar.name } }}\n          >\n            New Link Post\n          </Link>\n          {props.sidebar.isHome ? <Link to=\"/newtopic\">New Topic</Link> : null}\n        </AuthShow>\n      </div>\n      <ul className=\"auth-links\">\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleRegisterModal}\n              aria-label=\"register\"\n            >\n              Register\n            </button>\n          </li>\n        </AuthHide>\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleLoginModal}\n              aria-label=\"login\"\n            >\n              Login\n            </button>\n          </li>\n        </AuthHide>\n        <AuthShow>\n          <li>\n            <button\n              disabled={props.loading ? \"disabled\" : false}\n              className=\"basic-button\"\n              onClick={props.onUserLogout}\n              aria-label=\"logout\"\n            >\n              Logout\n            </button>\n          </li>\n        </AuthShow>\n      </ul>\n      <div className=\"sidebar-topic\">\n        <Link to={`/topics/${props.sidebar.name}`}>{props.sidebar.name}</Link>\n        <p>{props.sidebar.description}</p>\n      </div>\n    </aside>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sidebar: state.sidebar.sidebar,\n  show: state.sidebar.show,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n    onUserLogout: () => {\n      dispatch(actions.userLogout());\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\n\nconst SearchPosts = (props) => {\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search);\n  const query = params.get(\"q\");\n\n  useEffect(() => {\n    // Fetch posts on first load or if search changes\n    if (\n      !props.history.length ||\n      props.history[props.history.length - 1] !== \"SEARCH: \" + query\n    ) {\n      props.onGetSearchPosts(query);\n    }\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [query]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history[props.history.length - 1] === \"SEARCH: \" + query ? (\n        <h1 className=\"page-title\">Search: {query}</h1>\n      ) : null}\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  history: state.posts.history,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSearchPosts: (query) => {\n      dispatch(actions.getSearchPosts(query));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPosts);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Flash.css\";\n\nconst FlashError = (props) => {\n  let errorDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetError(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.error !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.error]);\n\n  if (props.error !== \"\") {\n    errorDisplay = (\n      <div className=\"Flash error\" onClick={() => props.onSetError(\"\")}>\n        <h1>{props.error}</h1>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.flash.error,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetError: (error) => {\n      dispatch(actions.setError(error));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashError);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst FlashSuccess = (props) => {\n  let successDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetSuccess(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.success !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.success]);\n\n  if (props.success !== \"\") {\n    successDisplay = (\n      <div className=\"Flash success\" onClick={() => props.onSetSuccess(\"\")}>\n        <h1>{props.success}</h1>\n      </div>\n    );\n  }\n  return successDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    success: state.flash.success,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSuccess: (success) => {\n      dispatch(actions.setSuccess(success));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashSuccess);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Flash.css\";\n\nconst FlashLoading = (props) => {\n  let errorDisplay = null;\n  if (props.loading) {\n    errorDisplay = (\n      <div className=\"Flash loading\">\n        <div className=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashLoading);\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\n\nconst UserPosts = (props) => {\n  const { username } = useParams();\n\n  useEffect(() => {\n    // Fetch posts on first load or if username changes\n    if (\n      !props.history.length ||\n      props.history[props.history.length - 1] !== \"USERNAME: \" + username\n    ) {\n      props.onGetUserPosts(username);\n    }\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [username]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <span className=\"post-username\">{post.username}</span> in{\" \"}\n            <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history[props.history.length - 1] === \"USERNAME: \" + username ? (\n        <h1 className=\"page-title\">{username}</h1>\n      ) : null}\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  loading: state.flash.loading,\n  history: state.posts.history,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetUserPosts: (username) => {\n      dispatch(actions.getUserPosts(username));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\n\nconst NewLinkPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postForm.text = \"<<<Link>>>\" + postForm.text;\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Link Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Link* (page, image or youtube)</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewLinkPost);\n","import React from \"react\";\nimport \"./PageNotFound.css\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found\">\n      <h1>Page Not Found</h1>\n      <Link to=\"/\">Return Home</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport * as actions from \"./store/actions/index\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Nav from \"./components/helpers/Nav\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NewPost from \"./components/NewPost\";\nimport NewTopic from \"./components/NewTopic\";\nimport TopicPosts from \"./components/TopicPosts\";\nimport Post from \"./components/Post\";\nimport Topics from \"./components/Topics\";\nimport Sidebar from \"./components/helpers/Sidebar\";\nimport SearchPosts from \"./components/SearchPosts\";\nimport FlashError from \"./components/helpers/FlashError\";\nimport FlashSuccess from \"./components/helpers/FlashSuccess\";\nimport FlashLoading from \"./components/helpers/FlashLoading\";\nimport UserPosts from \"./components/UserPosts\";\nimport NewLinkPost from \"./components/NewLinkPost\";\nimport PageNotFound from \"./components/PageNotFound\";\n\nconst App = (props) => {\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"expires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      const decoded = jwt_decode(localStorage.getItem(\"token\"));\n      props.onAuthorize(decoded.sub);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollToTop />\n      <Nav />\n      <FlashError />\n      <FlashSuccess />\n      <FlashLoading />\n      <div className=\"main-grid\">\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/newpost\">\n              <NewPost />\n            </Route>\n            <Route path=\"/newlinkpost\">\n              <NewLinkPost />\n            </Route>\n            <Route path=\"/newtopic\">\n              <NewTopic />\n            </Route>\n            <Route path=\"/search\">\n              <SearchPosts />\n            </Route>\n            <Route path=\"/users/:username\">\n              <UserPosts />\n            </Route>\n            <Route path=\"/topics\" exact>\n              <Topics />\n            </Route>\n            <Route path=\"/topics/:topic\" exact>\n              <TopicPosts />\n            </Route>\n            <Route path=\"/topics/:topic/:post_id\" exact>\n              <Post />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </main>\n        {props.registerModal ? <Register /> : null}\n        {props.loginModal ? <Login /> : null}\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    registerModal: state.auth.registerModal,\n    loginModal: state.auth.loginModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: (user_id) => {\n      dispatch(actions.authorize(user_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  user_id: null,\n  registerModal: false,\n  loginModal: false,\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n    user_id: action.user_id,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n    user_id: null,\n  };\n};\n\nconst toggleRegisterModal = (state, action) => {\n  return {\n    ...state,\n    registerModal: !state.registerModal\n  }\n}\n\nconst toggleLoginModal = (state, action) => {\n  return {\n    ...state,\n    loginModal: !state.loginModal\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.TOGGLE_REGISTER_MODAL:\n      return toggleRegisterModal(state, action);\n    case actionTypes.TOGGLE_LOGIN_MODAL:\n      return toggleLoginModal(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  post: {},\n  history: [],\n};\n\nconst loadPosts = (state, action) => {\n  return {\n    ...state,\n    posts: action.posts,\n    history: [...state.history, action.page]\n  };\n};\n\nconst setSinglePost = (state, action) => {\n  return {\n    ...state,\n    post: { ...action.post, editing: false },\n  };\n};\n\nconst toggleEditPost = (state, action) => {\n  const post = { ...state.post };\n\n  // Set post to editing\n  post.editing = !post.editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    post.text = post.original;\n  }\n\n  // Set original value so can be used if canceled\n  post.original = post.text;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst editPostInput = (state, action) => {\n  const post = { ...state.post };\n\n  post.text = action.value;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst setPostVote = (state, action) => {\n  const posts = [];\n  for (let post of state.posts) {\n    posts.push({ ...post });\n  }\n\n  const index = posts.findIndex((post) => post.post_id === action.post_id);\n\n  // Set new user vote\n  posts[index].user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.posts[index].user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    posts[index].votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    posts[index].votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    posts[index].votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    posts[index].votes += 1;\n  }\n\n  return {\n    ...state,\n    posts,\n  };\n};\n\nconst setSinglePostVote = (state, action) => {\n  const post = { ...state.post };\n\n  // Set new user vote\n  post.user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.post.user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    post.votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    post.votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    post.votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    post.votes += 1;\n  }\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_POSTS:\n      return loadPosts(state, action);\n    case actionTypes.SET_SINGLE_POST:\n      return setSinglePost(state, action);\n    case actionTypes.TOGGLE_EDIT_POST:\n      return toggleEditPost(state, action);\n    case actionTypes.EDIT_POST_INPUT:\n      return editPostInput(state, action);\n    case actionTypes.SET_POST_VOTE:\n      return setPostVote(state, action);\n    case actionTypes.SET_SINGLE_POST_VOTE:\n      return setSinglePostVote(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  topics: [],\n};\n\nconst setTopics = (state, action) => {\n  return {\n    ...state,\n    topics: action.topics,\n  };\n};\n\nconst setAddedTopic = (state, action) => {\n  const topics = [];\n  for (let topic of state.topics) {\n    topics.push({ ...topic });\n  }\n\n  return {\n    ...state,\n    topics: [...topics, action.topic],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TOPICS:\n      return setTopics(state, action);\n    case actionTypes.SET_ADDED_TOPIC:\n      return setAddedTopic(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  sidebar: {\n    isHome: true,\n    name: \"\",\n    description: \"\",\n  },\n  show: false,\n};\n\nconst setSidebar = (state, action) => {\n  return {\n    ...state,\n    sidebar: {\n      isHome: action.isHome,\n      name: action.name,\n      description: action.description,\n    },\n  };\n};\n\nconst toggleSidebar = (state, action) => {\n  return {\n    ...state,\n    show: !state.show,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SIDEBAR:\n      return setSidebar(state, action);\n    case actionTypes.TOGGLE_SIDEBAR:\n      return toggleSidebar(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  comments: [],\n};\n\n// Helper function to duplicate comments array\nconst duplicateComments = (comments) => {\n  const duplicate = [];\n  for (let comment of comments) {\n    duplicate.push({ ...comment });\n  }\n  return duplicate;\n};\n\nconst setSinglePostComments = (state, action) => {\n  const comments = action.comments;\n  for (let comment of comments) {\n    comment.reply = \"\";\n    comment.showReply = false;\n    comment.editing = false;\n    comment.show = true;\n  }\n  return {\n    ...state,\n    comments: action.comments,\n  };\n};\n\nconst addComment = (state, action) => {\n  return {\n    ...state,\n    comments: [\n      ...state.comments,\n      {\n        ...action.comment,\n        reply: \"\",\n        showReply: false,\n        editing: false,\n        show: true,\n      },\n    ],\n  };\n};\n\nconst toggleReplyForm = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].showReply = !comments[index].showReply;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst replyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst resetReplyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = \"\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst setDeletedComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set displayed comment text to deleted values\n  comments[index].text = \"[deleted]\";\n  comments[index].user_id = 11;\n  comments[index].username = \"[deleted]\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleEditComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set chosen comment to editing mode\n  comments[index].editing = !comments[index].editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    comments[index].text = comments[index].original;\n  }\n\n  // Set original value so can be used if canceled\n  comments[index].original = comments[index].text;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst editCommentInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].text = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleShowComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].show = !comments[index].show;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SINGLE_POST_COMMENTS:\n      return setSinglePostComments(state, action);\n    case actionTypes.ADD_COMMENT:\n      return addComment(state, action);\n    case actionTypes.TOGGLE_REPLY_FORM:\n      return toggleReplyForm(state, action);\n    case actionTypes.REPLY_INPUT:\n      return replyInput(state, action);\n    case actionTypes.RESET_REPLY_INPUT:\n      return resetReplyInput(state, action);\n    case actionTypes.SET_DELETED_COMMENT:\n      return setDeletedComment(state, action);\n    case actionTypes.TOGGLE_EDIT_COMMENT:\n      return toggleEditComment(state, action);\n    case actionTypes.EDIT_COMMENT_INPUT:\n      return editCommentInput(state, action);\n    case actionTypes.TOGGLE_SHOW_COMMENT:\n      return toggleShowComment(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  success: \"\",\n  error: \"\",\n  loading: false,\n  timeout: null,\n};\n\nconst setError = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    success: \"\",\n  };\n};\n\nconst setSuccess = (state, action) => {\n  return {\n    ...state,\n    success: action.success,\n    error: \"\",\n  };\n};\n\nconst setLoading = (state, action) => {\n  // Clear message if loading\n  const messages = {};\n  if (action.loading) {\n    messages.error = \"\";\n    messages.success = \"\";\n  }\n\n  return {\n    ...state,\n    ...messages,\n    loading: action.loading,\n  };\n};\n\nconst setTimeout = (state, action) => {\n  return {\n    ...state,\n    timeout: action.timeout,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ERROR:\n      return setError(state, action);\n    case actionTypes.SET_SUCCESS:\n      return setSuccess(state, action);\n    case actionTypes.SET_LOADING:\n      return setLoading(state, action);\n    case actionTypes.SET_TIMEOUT:\n      return setTimeout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport auth from \"./store/reducers/auth\";\nimport posts from \"./store/reducers/posts\"\nimport topics from \"./store/reducers/topics\"\nimport sidebar from \"./store/reducers/sidebar\"\nimport comments from \"./store/reducers/comments\"\nimport flash from \"./store/reducers/flash\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  posts: posts,\n  comments: comments,\n  topics: topics,\n  sidebar: sidebar,\n  flash: flash,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}