{"version":3,"sources":["store/actions/actionTypes.js","store/actions/flash.js","base.js","store/actions/auth.js","store/actions/comments.js","store/actions/posts.js","store/actions/topics.js","store/actions/sidebar.js","components/helpers/Nav.js","components/functions/dateSince.js","components/helpers/Votes.js","components/helpers/PostsOptions.js","components/Home.js","components/Register.js","components/Login.js","components/NewPost.js","components/NewTopic.js","components/TopicPosts.js","components/helpers/AuthCreator.js","components/helpers/AuthShow.js","components/helpers/Comment.js","components/Post.js","components/Topics.js","components/helpers/AuthHide.js","components/helpers/Sidebar.js","components/SearchPosts.js","components/helpers/FlashError.js","components/helpers/FlashSuccess.js","components/helpers/FlashLoading.js","components/UserPosts.js","components/NewLinkPost.js","components/PageNotFound.js","App.js","store/reducers/auth.js","store/reducers/posts.js","store/reducers/topics.js","store/reducers/sidebar.js","store/reducers/comments.js","store/reducers/flash.js","index.js"],"names":["AUTHORIZE","DEAUTHORIZE","TOGGLE_REGISTER_MODAL","TOGGLE_LOGIN_MODAL","RESET_HISTORY","LOAD_POSTS","LOAD_MORE_POSTS","SET_SINGLE_POST","TOGGLE_EDIT_POST","EDIT_POST_INPUT","SET_POST_VOTE","SET_SINGLE_POST_VOTE","CHANGE_ORDER","CHANGE_FILTER","SORT_POSTS","ADD_COMMENT","TOGGLE_REPLY_FORM","REPLY_INPUT","RESET_REPLY_INPUT","SET_DELETED_COMMENT","TOGGLE_EDIT_COMMENT","EDIT_COMMENT_INPUT","TOGGLE_SHOW_COMMENT","SET_SINGLE_POST_COMMENTS","SET_TOPICS","SET_ADDED_TOPIC","SET_SIDEBAR","TOGGLE_SIDEBAR","SET_ERROR","SET_SUCCESS","SET_LOADING","SET_TIMEOUT","setError","error","type","actionTypes","setSuccess","success","setLoading","loading","setTimeout","timeout","base","authorize","user_id","userLogout","dispatch","localStorage","removeItem","toggleRegisterModal","toggleLoginModal","addComment","comment","toggleReplyForm","comment_id","commentReply","text","post_id","parent","token","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","response","json","data","Error","message","catch","deleteComment","setDeletedComment","toggleEditComment","canceled","newPost","postForm","history","topic","split","join","toLowerCase","push","loadPosts","posts","pageName","loadMorePosts","setSinglePost","post","getSinglePost","query","jwt_decode","sub","comments","toggleEditPost","postVote","vote","single_post","setSinglePostVote","setPostVote","sortPosts","order","getTopics","topics","addTopic","setAddedTopic","setSidebar","isHome","name","description","toggleSidebar","connect","state","isAuth","auth","sidebar","sidebarShow","show","onToggleSidebar","actions","props","className","to","onClick","aria-label","xmlns","viewBox","d","fillRule","dateSince","date","duration","Date","now","toFixed","onSetError","onPostVote","user_vote","votes","filter","onChangeOrder","onChangeFilter","htmlFor","id","value","onChange","e","target","flash","page","onGetPosts","console","log","onSetSidebar","onSortPosts","useState","loaded","setLoaded","useEffect","length","postsDisplay","map","index","title","time","username","Fragment","onUserRegister","registerForm","setItem","expires","Number","expiresIn","decoded","goBack","onToggleRegisterModal","password","confirmPassword","setRegisterForm","useHistory","handleInput","currentTarget","onSubmit","preventDefault","required","minLength","disabled","onUserLogin","loginForm","onToggleLoginModal","setLoginForm","onNewPost","setPostForm","location","onNewTopic","topicForm","setTopicForm","maxLength","onGetTopicPosts","onAddTopic","useParams","topicIndex","findIndex","topicState","creator_id","children","onToggleReplyForm","onCommentReply","onReplyInput","onDeleteComment","onToggleEditComment","onEditCommentInput","onEditComment","onToggleShowComment","Comment","replies","allComments","commentContent","editing","data-index","AuthCreator","showReply","reply","placeholder","onSetSinglePost","onGetSinglePost","onNewComment","commentForm","onDeletePost","onToggleEditPost","onEditPostInput","onEditPost","window","scrollTo","replace","postDisplay","postContentDisplay","includes","link","match","start","src","frameBorder","allow","allowFullScreen","test","alt","href","toString","setCommentForm","commentsDisplay","onGetTopics","topicsDisplay","topic_id","onUserLogout","search","setSearch","stopPropagation","pathname","onGetSearchPosts","q","useLocation","URLSearchParams","get","onSetTimeout","errorDisplay","clearTimeout","onSetSuccess","successDisplay","onGetUserPosts","PageNotFound","registerModal","loginModal","onAuthorize","expiration","isLoggedIn","path","exact","initialState","action","deauthorize","reducer","resetHistory","original","editPostInput","previousVote","changeOrder","changeFilter","sort","a","b","setTopics","duplicateComments","duplicate","setSinglePostComments","replyInput","resetReplyInput","editCommentInput","toggleShowComment","messages","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8af9406.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const TOGGLE_REGISTER_MODAL = \"TOGGLE_REGISTER_MODAL\";\nexport const TOGGLE_LOGIN_MODAL = \"TOGGLE_LOGIN_MODAL\";\n\nexport const RESET_HISTORY = \"RESET_HISTORY\";\nexport const LOAD_POSTS = \"LOAD_POSTS\";\nexport const LOAD_MORE_POSTS = \"LOAD_MORE_POSTS\";\nexport const SET_SINGLE_POST = \"SET_SINGLE_POST\";\nexport const TOGGLE_EDIT_POST = \"TOGGLE_EDIT_POST\";\nexport const EDIT_POST_INPUT = \"EDIT_POST_INPUT\";\nexport const SET_POST_VOTE = \"SET_POST_VOTE\";\nexport const SET_SINGLE_POST_VOTE = \"SET_SINGLE_POST_VOTE\";\nexport const CHANGE_ORDER = \"CHANGE_ORDER\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\nexport const SORT_POSTS = \"SORT_POSTS\";\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const TOGGLE_REPLY_FORM = \"TOGGLE_REPLY_FORM\";\nexport const COMMENT_REPLY = \"COMMENT_REPLY\";\nexport const REPLY_INPUT = \"REPLY_INPUT\";\nexport const RESET_REPLY_INPUT = \"RESET_REPLY_INPUT\";\nexport const SET_DELETED_COMMENT = \"SET_DELETED_COMMENT\";\nexport const TOGGLE_EDIT_COMMENT = \"TOGGLE_EDIT_COMMENT\";\nexport const EDIT_COMMENT_INPUT = \"EDIT_COMMENT_INPUT\";\nexport const TOGGLE_SHOW_COMMENT = \"TOGGLE_SHOW_COMMENT\";\nexport const SET_SINGLE_POST_COMMENTS = \"SET_SINGLE_POST_COMMENTS\";\n\nexport const SET_TOPICS = \"SET_TOPICS\";\nexport const SET_ADDED_TOPIC = \"SET_ADDED_TOPIC\";\n\nexport const SET_SIDEBAR = \"SET_SIDEBAR\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\n\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_SUCCESS = \"SET_SUCCESS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const setError = (error) => {\n  return {\n    type: actionTypes.SET_ERROR,\n    error,\n  };\n};\n\nexport const setSuccess = (success) => {\n  return {\n    type: actionTypes.SET_SUCCESS,\n    success,\n  };\n};\n\nexport const setLoading = (loading) => {\n  return {\n    type: actionTypes.SET_LOADING,\n    loading,\n  }\n}\n\nexport const setTimeout = (timeout) => {\n  return {\n    type: actionTypes.SET_TIMEOUT,\n    timeout\n  }\n}","// const base = \"http://10.0.0.6:3000\";\nconst base = \"https://sheltered-lake-91716.herokuapp.com\";\n\nexport default base;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport { setError, setLoading, setSuccess } from \"./flash\";\nimport base from \"../../base\";\n\n// Authorize user\nexport const authorize = (user_id) => {\n  return {\n    type: actionTypes.AUTHORIZE,\n    user_id,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expires\");\n\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Logout user\nexport const userLogout = () => {\n  return (dispatch) => {\n    dispatch(deauthorize());\n    dispatch(setSuccess(\"Logged out\"));\n  };\n};\n\n// Toggle register modal\nexport const toggleRegisterModal = () => {\n  return {\n    type: actionTypes.TOGGLE_REGISTER_MODAL,\n  };\n};\n\n// Toggle register modal\nexport const toggleLoginModal = () => {\n  return {\n    type: actionTypes.TOGGLE_LOGIN_MODAL,\n  };\n};\n\n// Handle register user submission to backend\nexport const userRegister = (registerForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/register`, {\n      method: \"POST\",\n      body: JSON.stringify(registerForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        // Close modal on success\n        dispatch(toggleRegisterModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Handle login submission to backend\nexport const userLogin = (loginForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    fetch(`${base}/login`, {\n      method: \"POST\",\n      body: JSON.stringify(loginForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        dispatch(toggleLoginModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport {setError, setSuccess, setLoading} from \"./flash\";\n\n// Add comment to post\nexport const addComment = (comment) => {\n  return {\n    type: actionTypes.ADD_COMMENT,\n    comment,\n  };\n};\n\n// Submit new comment\nexport const newComment = (commentForm, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ ...commentForm, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Set comments of one post\nexport const setSinglePostComments = (comments) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_COMMENTS,\n    comments,\n  };\n};\n\n// Toggle display of comment reply form\nexport const toggleReplyForm = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_REPLY_FORM,\n    comment_id,\n  };\n};\n\n// Reset submitted comment reply's input and close input form\nexport const resetReplyInput = (comment_id) => {\n  return {\n    type: actionTypes.RESET_REPLY_INPUT,\n    comment_id,\n  };\n};\n\n// Submit comment to backend\nexport const commentReply = (text, post_id, parent) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ text, post_id, parent }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        // Reset input\n        dispatch(resetReplyInput(parent));\n\n        // Close input form\n        dispatch(toggleReplyForm(parent));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Handle input of comment reply\nexport const replyInput = (value, comment_id) => {\n  return {\n    type: actionTypes.REPLY_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Set comment to deleted in state\nexport const setDeletedComment = (comment_id) => {\n  return {\n    type: actionTypes.SET_DELETED_COMMENT,\n    comment_id,\n  };\n};\n\n// Delete comment from database\nexport const deleteComment = (comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Remove from state\n        dispatch(setDeletedComment(comment_id));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditComment = (comment_id, canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_COMMENT,\n    comment_id,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editCommentInput = (value, comment_id) => {\n  return {\n    type: actionTypes.EDIT_COMMENT_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Submit edited comment to backend\nexport const editComment = (text, comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditComment(comment_id));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle showing of comment and its' children\nexport const toggleShowComment = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_COMMENT,\n    comment_id,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setSinglePostComments } from \"./comments\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const resetHistory = () => {\n  return {\n    type: actionTypes.RESET_HISTORY,\n  };\n};\n\n// Submit new post\nexport const newPost = (postForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    const token = localStorage.getItem(\"token\");\n    postForm.topic = postForm.topic.split(\" \").join(\"\").toLowerCase();\n\n    fetch(`${base}/posts/new`, {\n      method: \"POST\",\n      body: JSON.stringify(postForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Ensure that post will be included on posts reload\n        dispatch(resetHistory());\n\n        // Redirect\n        history.push(`/topics/${postForm.topic}/${data.post_id}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Load posts\nexport const loadPosts = (posts, pageName) => {\n  return {\n    type: actionTypes.LOAD_POSTS,\n    posts,\n    pageName,\n  };\n};\n\nexport const loadMorePosts = (posts, pageName) => {\n  return {\n    type: actionTypes.LOAD_MORE_POSTS,\n    posts,\n    pageName,\n  };\n};\n\n// Get posts\nexport const getPosts = (order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n\n    console.log(token);\n\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      console.log(user_id);\n      query += `&user_id=${user_id}`;\n    }\n\n    console.log(query);\n\n    fetch(`${base}/posts${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"home\"));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"home\"));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"home\"));\n        } else if (error.message === \"No more posts found\") {\n          dispatch(loadMorePosts([], \"home\"));\n        }\n\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts for a single topic\nexport const getTopicPosts = (topic, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/topics/${topic}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"TOPIC: \" + topic));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"TOPIC: \" + topic));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"TOPIC: \" + topic));\n        } else if (error.message === \"No more posts found\") {\n          dispatch(loadMorePosts([], \"TOPIC: \" + topic));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Set single post\nexport const setSinglePost = (post) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST,\n    post,\n  };\n};\n\n// Get single post\nexport const getSinglePost = (post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/${post_id}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add posts to state\n        dispatch(setSinglePost(data.post));\n\n        // Add comments to state\n        dispatch(setSinglePostComments(data.comments));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Delete a post\nexport const deletePost = (post_id, history, topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${topic}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditPost = (canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_POST,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editPostInput = (value, post_id) => {\n  return {\n    type: actionTypes.EDIT_POST_INPUT,\n    value,\n    post_id,\n  };\n};\n\n// Submit edited post to backend\nexport const editPost = (text, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditPost());\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getSearchPosts = (query, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    const q = query;\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    query += `&order=${order}&filter=${filter}&offset=${!page ? 0 : page * 25}`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/search?q=${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"SEARCH: \" + q));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"SEARCH: \" + q));\n        }\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"SEARCH: \" + q));\n        } else if (error.message === \"No more posts found\") {\n          dispatch(loadMorePosts([], \"SEARCH: \" + q));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getUserPosts = (username, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/user/${username}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"USERNAME: \" + username));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"USERNAME: \" + username));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"USERNAME: \" + username));\n        } else if (error.message === \"No more posts found\") {\n          dispatch(loadMorePosts([]), \"USERNAME: \" + username);\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\nexport const setPostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\nexport const setSinglePostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\n// Vote on a post\nexport const postVote = (vote, post_id, single_post) => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n\n    fetch(`${base}/posts/${post_id}/vote`, {\n      method: \"POST\",\n      body: JSON.stringify({ post_id, vote }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set single post vote if on single post page\n        if (single_post) {\n          dispatch(setSinglePostVote(vote, post_id));\n        } else {\n          dispatch(setPostVote(vote, post_id));\n        }\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Change posts display order\nexport const changeOrder = (order) => {\n  return {\n    type: actionTypes.CHANGE_ORDER,\n    order,\n  };\n};\n\n// Change posts time filter\nexport const changeFilter = (filter) => {\n  return {\n    type: actionTypes.CHANGE_FILTER,\n    filter,\n  };\n};\n\n// Sort posts in state\nexport const sortPosts = (order) => {\n  return {\n    type: actionTypes.SORT_POSTS,\n    order,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\n\n// Submit new topic\nexport const newTopic = (topicForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    const token = localStorage.getItem(\"token\");\n\n    // Remove spaces from topic name and make lowercase\n    topicForm.name = topicForm.name.split(\" \").join(\"\").toLowerCase();\n\n    fetch(`${base}/newtopic`, {\n      method: \"POST\",\n      body: JSON.stringify(topicForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n\n        // Redirect\n        history.push(`/topics/${topicForm.name}`);\n\n        // Set loading and success message\n        dispatch(setLoading(true));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set topics in state\nexport const setTopics = (topics) => {\n  return {\n    type: actionTypes.SET_TOPICS,\n    topics,\n  };\n};\n\n// Get list of topics\nexport const getTopics = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    // dispatch(setTopics([]));\n\n    fetch(`${base}/posts/topics`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(setTopics(data.topics));\n\n        // Stop loading\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set added topic in state\nexport const setAddedTopic = (topic) => {\n  return {\n    type: actionTypes.SET_ADDED_TOPIC,\n    topic,\n  };\n};\n\n// Fetch topic information\nexport const addTopic = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/posts/singletopic`, {\n      method: \"POST\",\n      body: JSON.stringify({ topic }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        dispatch(setAddedTopic(data.topic));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Set sidebar content\nexport const setSidebar = (isHome, name, description) => {\n  return {\n    type: actionTypes.SET_SIDEBAR,\n    isHome,\n    name,\n    description,\n  };\n};\n\n// Toggle sidebar showing\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR\n  }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\n\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"nav-logo\"\n            onClick={props.sidebarShow ? props.onToggleSidebar : null}\n          >\n            Sayit\n          </Link>\n        </li>\n        <button\n          className=\"menu-button\"\n          onClick={props.onToggleSidebar}\n          aria-label=\"toggle-sidebar\"\n        >\n          {props.sidebarShow ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          )}\n        </button>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    sidebar: state.sidebar.sidebar,\n    sidebarShow: state.sidebar.show,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","const dateSince = (date) => {\n  const duration = (Date.now() - new Date(date)) / 1000;\n  if (duration < 60) {\n    return `${duration.toFixed(0)} seconds ago`;\n  } else if (duration < 60 * 60) {\n    return `${(duration / 60).toFixed(0)} minutes ago`;\n  } else if (duration < 60 * 60 * 24) {\n    return `${(duration / (60 * 60)).toFixed(0)} hours ago`;\n  } else if (duration < 60 * 60 * 24 * 365) {\n    return `${(duration / (60 * 60 * 24)).toFixed(0)} days ago`;\n  } else {\n    return `${(duration / (60 * 60 * 24 * 365)).toFixed(0)} years ago`;\n  }\n}\n\nexport default dateSince;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst Votes = (props) => {\n  const voteUp = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === 1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(1, props.post_id, props.single_post);\n  };\n\n  const voteDown = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === -1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(-1, props.post_id, props.single_post);\n  };\n\n  return (\n    <div className=\"post-votes\">\n      <svg\n        onClick={voteUp}\n        className={props.user_id && props.user_vote === 1 ? \"vote-up\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n      </svg>\n      <p>{props.votes}</p>\n      <svg\n        onClick={voteDown}\n        className={props.user_id && props.user_vote === -1 ? \"vote-down\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n      </svg>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  user_id: state.auth.user_id,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetError: (error) => {\n    dispatch(actions.setError(error));\n  },\n  onPostVote: (vote, post_id, single_post) => {\n    dispatch(actions.postVote(vote, post_id, single_post));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Votes);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./PostsOptions.css\";\nimport * as actions from \"../../store/actions/index\";\n\nconst PostsOptions = (props) => {\n  return (\n    <div>\n      <form className=\"posts-options-form\">\n        <div>\n          <label htmlFor=\"order-select\"></label>\n          <select\n            id=\"order-select\"\n            value={props.order}\n            onChange={(e) => props.onChangeOrder(e.target.value)}\n          >\n            <option value=\"most\">Most Votes</option>\n            <option value=\"least\">Least Votes</option>\n            <option value=\"newest\">Newest</option>\n            <option value=\"oldest\">Oldest</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"filter-select\"></label>\n          <select\n            id=\"filter-select\"\n            value={props.filter}\n            onChange={(e) => props.onChangeFilter(e.target.value)}\n          >\n            <option value=\"day\">Day</option>\n            <option value=\"week\">Week</option>\n            <option value=\"month\">Month</option>\n            <option value=\"year\">Year</option>\n            <option value=\"all\">All</option>\n          </select>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    order: state.posts.order,\n    filter: state.posts.filter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChangeOrder: (order) => {\n      dispatch(actions.changeOrder(order));\n    },\n    onChangeFilter: (filter) => {\n      dispatch(actions.changeFilter(filter));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsOptions);\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst Home = (props) => {\n  const [loaded, setLoaded] = useState(false);\n\n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetPosts(props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetPosts(props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if from a different set of posts\n    if (props.history !== \"home\") {\n      props.onGetPosts(props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <Votes\n          post_id={post.post_id}\n          votes={post.votes}\n          user_vote={post.user_vote}\n        />\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in{\" \"}\n            <Link className=\"post-topic\" to={`/topics/${post.topic}`}>\n              {post.topic}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history === \"home\" ? (\n        <React.Fragment>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetPosts(props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  loading: state.flash.loading,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetPosts: (order, filter, page) => {\n      dispatch(actions.getPosts(order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\n\nconst Register = (props) => {\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserRegister(registerForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleRegisterModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Register</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleRegisterModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={registerForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={registerForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={registerForm.confirmPassword}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button\n            className=\"basic-button\"\n            type=\"submit\"\n            aria-label=\"submit\"\n            disabled={props.loading ? \"disabled\" : null}\n          >\n            Register\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserRegister: (registerForm, history) => {\n      dispatch(actions.userRegister(registerForm, history));\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setLoginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserLogin(loginForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleLoginModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Login</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleLoginModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={loginForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={loginForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\" disabled={props.loading ? \"disabled\" : null}>\n            Login\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserLogin: (loginForm, history) => {\n      dispatch(actions.userLogin(loginForm, history));\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n          ></textarea>\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewTopic.css\";\n\nconst NewTopic = (props) => {\n  let history = useHistory();\n\n  useEffect(() => {\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [topicForm, setTopicForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setTopicForm({\n      ...topicForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewTopic(topicForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Topic</h1>\n      <form className=\"auth-form new-topic-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name*</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={topicForm.name}\n            onChange={handleInput}\n            required\n            maxLength=\"100\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Description*</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={topicForm.description}\n            onChange={handleInput}\n            required\n            maxLength=\"255\"\n          />\n        </div>\n        <button\n          className=\"basic-button\"\n          type=\"submit\"\n          aria-label=\"submit\"\n          disabled={props.loading ? \"disabled\" : false}\n        >\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewTopic: (topicForm, history) => {\n      dispatch(actions.newTopic(topicForm, history));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTopic);\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst TopicPosts = (props) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetTopicPosts(topic, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetTopicPosts(topic, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  let { topic } = useParams();\n  topic = topic.toLowerCase();\n\n  // Get posts on first run or if topic changes\n  useEffect(() => {\n    if (props.history !== \"TOPIC: \" + topic) {\n      props.onGetTopicPosts(topic, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // eslint-disable-next-line\n  }, [topic]);\n\n  useEffect(() => {\n    // Find index of topic in state\n    let topicIndex = -1;\n    if (props.topics.length) {\n      topicIndex = props.topics.findIndex(\n        (topicState) => topicState && topicState.name === topic\n      );\n    }\n\n    // If topic not in state, fetch and add it\n    if (topicIndex === -1) {\n      props.onAddTopic(topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [topic, props.topics]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {props.history === \"TOPIC: \" + topic ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">{topic}</h1>\n          <PostsOptions/>\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetTopicPosts(topic, props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.posts,\n    topics: state.topics.topics,\n    error: state.flash.error,\n    loading: state.flash.loading,\n    history: state.posts.history,\n    order: state.posts.order,\n    filter: state.posts.filter,\n    page: state.posts.page,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopicPosts: (topic, order, filter, page) => {\n      dispatch(actions.getTopicPosts(topic, order, filter, page));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPosts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show if the user was the creator of post or comment\n  if (props.user_id === props.creator_id) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  user_id: state.auth.user_id\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show to logged in users\n  if (props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Link} from \"react-router-dom\"\nimport * as actions from \"../../store/actions/index\";\nimport AuthCreator from \"./AuthCreator\";\nimport AuthShow from \"./AuthShow\";\nimport dateSince from \"../functions/dateSince\"\n\nconst Comment = (props) => {\n  // Submit reply to a comment\n  const submitCommentReply = (e) => {\n    e.preventDefault();\n    props.onCommentReply(\n      props.comment.reply,\n      props.post_id,\n      props.comment.comment_id\n    );\n  };\n\n  // Submit comment after editing\n  const submitCommentEdit = (e) => {\n    e.preventDefault();\n    props.onEditComment(props.comment.text, props.comment.comment_id);\n  };\n\n  // Filter comments that have this comment as it's parent\n  const replies = props.allComments.filter(\n    (comment) => comment.parent === props.comment.comment_id\n  );\n\n  // Change content when hiding comment\n  let commentContent = null;\n  if (props.comment.show) {\n    commentContent = (\n      <React.Fragment>\n        {props.comment.editing ? (\n          <form className=\"edit-comment-form\" onSubmit={submitCommentEdit}>\n            <div>\n              <label htmlFor=\"editComment\" />\n              <textarea\n                name=\"text\"\n                id=\"editComment\"\n                value={props.comment.text}\n                onChange={(e) =>\n                  props.onEditCommentInput(\n                    e.target.value,\n                    props.comment.comment_id\n                  )\n                }\n                required\n              ></textarea>\n            </div>\n            <button className=\"basic-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"basic-button\"\n              type=\"button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() =>\n                props.onToggleEditComment(props.comment.comment_id, true)\n              }\n            >\n              Cancel\n            </button>\n          </form>\n        ) : (\n          <div className=\"comment-text\">\n            <p>{props.comment.text}</p>\n          </div>\n        )}\n        <AuthShow>\n          <div className=\"comment-buttons\">\n            <button\n              data-index={props.index}\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() => props.onToggleReplyForm(props.comment.comment_id)}\n            >\n              Reply\n            </button>\n            <AuthCreator creator_id={props.comment.user_id}>\n              <button\n                type=\"button\"\n                aria-label=\"delete\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeleteComment(props.comment.comment_id)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"edit\"\n                aria-label=\"edit\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleEditComment(props.comment.comment_id)\n                }\n              >\n                Edit\n              </button>\n            </AuthCreator>\n          </div>\n          {props.comment.showReply ? (\n            <form className=\"reply-form\" onSubmit={submitCommentReply}>\n              <div>\n                <label htmlFor=\"commentReply\"></label>\n                <textarea\n                  name=\"comment\"\n                  id=\"commentReply\"\n                  placeholder=\"Reply\"\n                  value={props.comment.reply}\n                  onChange={(e) =>\n                    props.onReplyInput(e.target.value, props.comment.comment_id)\n                  }\n                  required\n                ></textarea>\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n              <button\n                className=\"basic-button\"\n                type=\"button\"\n                aria-label=\"cancel\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleReplyForm(props.comment.comment_id)\n                }\n              >\n                Cancel\n              </button>\n            </form>\n          ) : null}\n        </AuthShow>\n        <ul>\n          {replies.map((comment) => {\n            return (\n              <Comment\n                allComments={props.allComments}\n                comment={comment}\n                post_id={props.post_id}\n                key={comment.comment_id}\n                loading={props.loading}\n                onToggleReplyForm={props.onToggleReplyForm}\n                onReplyInput={props.onReplyInput}\n                onCommentReply={props.onCommentReply}\n                onDeleteComment={props.onDeleteComment}\n                onToggleEditComment={props.onToggleEditComment}\n                onEditCommentInput={props.onEditCommentInput}\n                onEditComment={props.onEditComment}\n                onToggleShowComment={props.onToggleShowComment}\n              />\n            );\n          })}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <li className=\"child\" key={props.comment.comment_id}>\n      <p className=\"comment-subtitle\">\n        <button\n          onClick={() => props.onToggleShowComment(props.comment.comment_id)}\n        >\n          {props.comment.show ? \"[–]\" : \"[+]\"}\n        </button>\n        <Link className=\"post-username comment-username\" to={`/users/${props.comment.username}`}>\n              {props.comment.username}\n            </Link>\n        {dateSince(props.comment.time)}\n      </p>\n      {props.comment.show ? commentContent : null}\n    </li>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleReplyForm: (index) => {\n      dispatch(actions.toggleReplyForm(index));\n    },\n    onCommentReply: (text, post_id, parent) => {\n      dispatch(actions.commentReply(text, post_id, parent));\n    },\n    onReplyInput: (value, comment_id) => {\n      dispatch(actions.replyInput(value, comment_id));\n    },\n    onDeleteComment: (comment_id) => {\n      dispatch(actions.deleteComment(comment_id));\n    },\n    onToggleEditComment: (comment_id, canceled) => {\n      dispatch(actions.toggleEditComment(comment_id, canceled));\n    },\n    onEditCommentInput: (value, comment_id) => {\n      dispatch(actions.editCommentInput(value, comment_id));\n    },\n    onEditComment: (text, comment_id) => {\n      dispatch(actions.editComment(text, comment_id));\n    },\n    onToggleShowComment: (comment_id) => {\n      dispatch(actions.toggleShowComment(comment_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport Comment from \"./helpers/Comment\";\nimport AuthShow from \"./helpers/AuthShow\";\nimport AuthCreator from \"./helpers/AuthCreator\";\nimport dateSince from \"./functions/dateSince\";\nimport \"./Post.css\";\nimport Votes from \"./helpers/Votes\";\n\nconst Post = (props) => {\n  const { post_id, topic } = useParams();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    // Fetch only if post undefined or wrong post\n    if (!props.post.post_id || props.post.post_id !== Number(post_id)) {\n      props.onGetSinglePost(post_id, topic, history);\n      window.scrollTo(0, 0)\n    }\n\n    // If topic in url wrong redirect to correct page\n    if (\n      props.post.post_id &&\n      props.post.post_id === Number(post_id) &&\n      props.post.topic !== topic\n    ) {\n      history.replace(`/topics/${props.post.topic}/${post_id}`);\n    }\n\n    // Find index of topic in state\n    const topicIndex = props.topics.findIndex(\n      (topic) => topic.name === props.post.topic\n    );\n\n    // If post defined and topic not in state, fetch and add it\n    if (props.post.topic && topicIndex === -1) {\n      props.onAddTopic(props.post.topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (props.post.topic && topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [post_id, props.post.topic, props.topics]);\n\n  // Submit post after editing\n  const submitPostEdit = (e) => {\n    e.preventDefault();\n    props.onEditPost(props.post.text, props.post.post_id);\n  };\n\n  let postDisplay = [];\n\n  // If post set and the post ids' match, display post\n  if (props.post.post_id && Number(props.post.post_id) === Number(post_id)) {\n    let postContentDisplay = null;\n    const imgPattern = /.(jpg|jpeg|png|gif|gifv|webp)$/;\n\n    // Change displayed post content if has a link in it\n    if (props.post.text.includes(\"<<<Link>>>\")) {\n      const link = props.post.text.replace(\"<<<Link>>>\", \"\");\n\n      // Parse for embedded iframe if youtube link\n      if (link.includes(\"youtube.com\") || link.includes(\"youtu.be\")) {\n        const idPattern = /[A-Za-z0-9]{11}/;\n        const id = link.match(idPattern);\n\n        const timePattern = /(t=\\d+)|(start=\\d+)/;\n        const time = link.match(timePattern);\n        let start = \"\";\n        if (time) {\n          start = time[0].split(\"=\")[1];\n        }\n        // Update if valid video\n        if (id) {\n          const src = `https://www.youtube.com/embed/${id[0]}?start=${start}`;\n          // Set iframe\n          postContentDisplay = (\n            <iframe\n              src={src}\n              title={props.post.title}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          );\n        }\n      } else if (imgPattern.test(link)) {\n        // Show img if ends with image extension\n        postContentDisplay = (\n          <img\n            src={props.post.text.replace(\"<<<Link>>>\", \"\")}\n            alt={props.post.title}\n          />\n        );\n        // Else just show link\n      } else {\n        postContentDisplay = (\n          <a href={props.post.text.replace(\"<<<Link>>>\", \"\")}>\n            {props.post.text.replace(\"<<<Link>>>\", \"\")}\n          </a>\n        );\n      }\n    } else {\n      postContentDisplay = <p>{props.post.text}</p>;\n    }\n\n    // Display of whole post\n    postDisplay = (\n      <div className=\"single-post\">\n        <div className=\"post-votes\">\n          <Votes\n            post_id={props.post.post_id}\n            votes={props.post.votes}\n            user_vote={props.post.user_vote}\n            single_post={true}\n          />\n        </div>\n        <div className=\"post-details\">\n          <div className=\"post-title\">\n            <Link to={`/topics/${props.post.topic}/${props.post.post_id}`}>\n              {props.post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(props.post.time)} by{\" \"}\n            <Link\n              className=\"props.post-username\"\n              to={`/users/${props.post.username}`}\n            >\n              {props.post.username}\n            </Link>\n          </p>\n          {props.post.editing ? (\n            <form className=\"edit-post-form\" onSubmit={submitPostEdit}>\n              <label htmlFor=\"editPost\" aria-label=\"edit post\" />\n              <textarea\n                id=\"editPost\"\n                name=\"text\"\n                value={props.post.text.toString()}\n                onChange={(e) => props.onEditPostInput(e.target.value)}\n              ></textarea>\n              <div>\n                <button\n                  className=\"basic-button\"\n                  type=\"submit\"\n                  disabled={props.loading ? \"disabled\" : false}\n                >\n                  Submit\n                </button>\n                <button\n                  className=\"basic-button\"\n                  type=\"button\"\n                  aria-label=\"cancel\"\n                  disabled={props.loading ? \"disabled\" : false}\n                  onClick={() => props.onToggleEditPost(true)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div className=\"post-text\">{postContentDisplay}</div>\n          )}\n          <AuthCreator creator_id={props.post.user_id}>\n            <div className=\"comment-buttons\">\n              <button\n                type=\"button\"\n                aria-label=\"delete post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeletePost(post_id, history, topic)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                aria-label=\"edit post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onToggleEditPost()}\n              >\n                Edit\n              </button>\n            </div>\n          </AuthCreator>\n        </div>\n      </div>\n    );\n  }\n\n  const [commentForm, setCommentForm] = useState({\n    text: \"\",\n  });\n\n  // Get comments with no parent\n  const topLevelComments = props.comments.filter((comment) => !comment.parent);\n\n  // Display comments by newest for now\n  const commentsDisplay = topLevelComments.map((comment) => {\n    return (\n      <Comment\n        allComments={props.comments}\n        comment={comment}\n        key={comment.comment_id}\n        post_id={post_id}\n      />\n    );\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setCommentForm({\n      ...commentForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewComment(commentForm, post_id);\n\n    // Reset to blank\n    setCommentForm({\n      text: \"\",\n    });\n  };\n\n  return (\n    <section>\n      {postDisplay}\n      {!props.post.post_id || props.post.post_id !== Number(post_id) ? null : (\n        <div className=\"comments-section\">\n          <h2>Comments</h2>\n          <AuthShow>\n            <form className=\"new-comment-form\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"newComment\" aria-label=\"new comment\"></label>\n                <textarea\n                  name=\"text\"\n                  id=\"newComment\"\n                  placeholder=\"New Comment\"\n                  value={commentForm.text}\n                  onChange={handleInput}\n                  required\n                />\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n            </form>\n          </AuthShow>\n          <ul>{commentsDisplay}</ul>\n        </div>\n      )}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  post: state.posts.post,\n  comments: state.comments.comments,\n  topics: state.topics.topics,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSinglePost: (post) => {\n      dispatch(actions.setSinglePost(post));\n    },\n    onGetSinglePost: (post_id) => {\n      dispatch(actions.getSinglePost(post_id));\n    },\n    onNewComment: (commentForm, post_id) => {\n      dispatch(actions.newComment(commentForm, post_id));\n    },\n    onDeletePost: (post_id, history, topic) => {\n      dispatch(actions.deletePost(post_id, history, topic));\n    },\n    onToggleEditPost: (canceled) => {\n      dispatch(actions.toggleEditPost(canceled));\n    },\n    onEditPostInput: (value) => {\n      dispatch(actions.editPostInput(value));\n    },\n    onEditPost: (text, post_id) => {\n      dispatch(actions.editPost(text, post_id));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport \"./Topics.css\";\n\nconst Topics = (props) => {\n  useEffect(() => {\n    // Get list of topics\n    props.onGetTopics();\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    window.scrollTo(0, 0);\n\n    // eslint-disable-next-line\n  }, []);\n\n  const topicsDisplay = props.topics.map((topic) => {\n    return (\n      <li key={topic.topic_id}>\n        <Link to={`/topics/${topic.name}`}>{topic.name}</Link>\n        <p>{topic.description}</p>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <h1 className=\"page-title\">Topics</h1>\n      <ul className=\"topics-list\">{topicsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  topics: state.topics.topics,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopics: () => {\n      dispatch(actions.getTopics());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthHide = (props) => {\n  // Only show to user that are not logged in\n  if (!props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthHide);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthShow from \"./AuthShow\";\nimport AuthHide from \"./AuthHide\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = (props) => {\n  const [search, setSearch] = useState(\"\");\n\n  // Handle input in search bar\n  const searchInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  let history = useHistory();\n\n  // Handle search bar submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n\n    history.push(`/search?q=${search}`);\n\n    setSearch(\"\");\n  };\n\n  return (\n    <aside\n      className={`sidebar ${props.show ? \"open\" : \"\"}`}\n      onClick={props.onToggleSidebar}\n    >\n      <form onSubmit={handleSearchSubmit}>\n        <div className=\"search-bar\">\n          <label htmlFor=\"search\"></label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            placeholder=\"search\"\n            value={search}\n            onChange={searchInput}\n            required\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          />\n          <button type=\"submit\" aria-label=\"search\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div className=\"sidebar-links\">\n        <Link to=\"/topics\">Topics</Link>\n        <AuthShow>\n          <Link\n            to={{ pathname: \"/newpost\", state: { topic: props.sidebar.name } }}\n          >\n            New Post\n          </Link>\n          <Link\n            to={{\n              pathname: \"/newlinkpost\",\n              state: { topic: props.sidebar.name },\n            }}\n          >\n            New Link Post\n          </Link>\n          {props.sidebar.isHome ? <Link to=\"/newtopic\">New Topic</Link> : null}\n        </AuthShow>\n      </div>\n      <ul className=\"auth-links\">\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleRegisterModal}\n              aria-label=\"register\"\n            >\n              Register\n            </button>\n          </li>\n        </AuthHide>\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleLoginModal}\n              aria-label=\"login\"\n            >\n              Login\n            </button>\n          </li>\n        </AuthHide>\n        <AuthShow>\n          <li>\n            <button\n              disabled={props.loading ? \"disabled\" : false}\n              className=\"basic-button\"\n              onClick={props.onUserLogout}\n              aria-label=\"logout\"\n            >\n              Logout\n            </button>\n          </li>\n        </AuthShow>\n      </ul>\n      <div className=\"sidebar-topic\">\n        {props.sidebar.name !== \"\" ? (\n          <Link to={`/topics/${props.sidebar.name}`}>{props.sidebar.name}</Link>\n        ) : null}\n        <p>{props.sidebar.description}</p>\n      </div>\n    </aside>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sidebar: state.sidebar.sidebar,\n  show: state.sidebar.show,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n    onUserLogout: () => {\n      dispatch(actions.userLogout());\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst SearchPosts = (props) => {\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search);\n  const query = params.get(\"q\");\n\n  const [loaded, setLoaded] = useState(false);\n\n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetSearchPosts(query, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetSearchPosts(query, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if search changes\n    if (props.history !== \"SEARCH: \" + query) {\n      props.onGetSearchPosts(query, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [query]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {props.history === \"SEARCH: \" + query ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">Search: {query}</h1>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetSearchPosts(query, props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSearchPosts: (query, order, filter, page) => {\n      dispatch(actions.getSearchPosts(query, order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPosts);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Flash.css\";\n\nconst FlashError = (props) => {\n  let errorDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetError(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.error !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.error]);\n\n  if (props.error !== \"\") {\n    errorDisplay = (\n      <div className=\"Flash error\">\n        <h1>{props.error}</h1>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.flash.error,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetError: (error) => {\n      dispatch(actions.setError(error));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashError);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst FlashSuccess = (props) => {\n  let successDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetSuccess(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.success !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.success]);\n\n  if (props.success !== \"\") {\n    successDisplay = (\n      <div className=\"Flash success\">\n        <h1>{props.success}</h1>\n      </div>\n    );\n  }\n  return successDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    success: state.flash.success,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSuccess: (success) => {\n      dispatch(actions.setSuccess(success));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashSuccess);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Flash.css\";\n\nconst FlashLoading = (props) => {\n  let errorDisplay = null;\n  if (props.loading) {\n    errorDisplay = (\n      <div className=\"Flash loading\">\n        <div className=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashLoading);\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\"\n\nconst UserPosts = (props) => {\n  const { username } = useParams();\n\n  const [loaded, setLoaded] = useState(false);\n  \n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetUserPosts(username, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetUserPosts(username, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if username changes\n    if (\n      props.history !== \"USERNAME: \" + username\n    ) {\n      props.onGetUserPosts(username, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [username]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <span className=\"post-username\">{post.username}</span> in{\" \"}\n            <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history === \"USERNAME: \" + username ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">{username}</h1>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  loading: state.flash.loading,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetUserPosts: (username, order, filter, page) => {\n      dispatch(actions.getUserPosts(username, order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\n\nconst NewLinkPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postForm.text = \"<<<Link>>>\" + postForm.text;\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Link Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Link* (page, image or youtube)</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewLinkPost);\n","import React from \"react\";\nimport \"./PageNotFound.css\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found\">\n      <h1>Page Not Found</h1>\n      <Link to=\"/\">Return Home</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport * as actions from \"./store/actions/index\";\nimport Nav from \"./components/helpers/Nav\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NewPost from \"./components/NewPost\";\nimport NewTopic from \"./components/NewTopic\";\nimport TopicPosts from \"./components/TopicPosts\";\nimport Post from \"./components/Post\";\nimport Topics from \"./components/Topics\";\nimport Sidebar from \"./components/helpers/Sidebar\";\nimport SearchPosts from \"./components/SearchPosts\";\nimport FlashError from \"./components/helpers/FlashError\";\nimport FlashSuccess from \"./components/helpers/FlashSuccess\";\nimport FlashLoading from \"./components/helpers/FlashLoading\";\nimport UserPosts from \"./components/UserPosts\";\nimport NewLinkPost from \"./components/NewLinkPost\";\nimport PageNotFound from \"./components/PageNotFound\";\n\nconst App = (props) => {\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"expires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      const decoded = jwt_decode(localStorage.getItem(\"token\"));\n      props.onAuthorize(decoded.sub);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <FlashError />\n      <FlashSuccess />\n      <FlashLoading />\n      <div className=\"main-grid\">\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/newpost\">\n              <NewPost />\n            </Route>\n            <Route path=\"/newlinkpost\">\n              <NewLinkPost />\n            </Route>\n            <Route path=\"/newtopic\">\n              <NewTopic />\n            </Route>\n            <Route path=\"/search\">\n              <SearchPosts />\n            </Route>\n            <Route path=\"/users/:username\">\n              <UserPosts />\n            </Route>\n            <Route path=\"/topics\" exact>\n              <Topics />\n            </Route>\n            <Route path=\"/topics/:topic\" exact>\n              <TopicPosts />\n            </Route>\n            <Route path=\"/topics/:topic/:post_id\" exact>\n              <Post />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </main>\n        {props.registerModal ? <Register /> : null}\n        {props.loginModal ? <Login /> : null}\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    registerModal: state.auth.registerModal,\n    loginModal: state.auth.loginModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: (user_id) => {\n      dispatch(actions.authorize(user_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  user_id: null,\n  registerModal: false,\n  loginModal: false,\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n    user_id: action.user_id,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n    user_id: null,\n  };\n};\n\nconst toggleRegisterModal = (state, action) => {\n  return {\n    ...state,\n    registerModal: !state.registerModal\n  }\n}\n\nconst toggleLoginModal = (state, action) => {\n  return {\n    ...state,\n    loginModal: !state.loginModal\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.TOGGLE_REGISTER_MODAL:\n      return toggleRegisterModal(state, action);\n    case actionTypes.TOGGLE_LOGIN_MODAL:\n      return toggleLoginModal(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  post: {},\n  history: null,\n  order: \"most\",\n  filter: \"all\",\n  page: 1,\n};\n\nconst resetHistory = (state, action) => {\n  return {\n    ...state,\n    history: null,\n  };\n};\n\nconst loadPosts = (state, action) => {\n  return {\n    ...state,\n    posts: action.posts,\n    history: action.pageName,\n    page: 1,\n  };\n};\n\nconst loadMorePosts = (state, action) => {\n  let page = state.page;\n\n  // Reset page if no more posts after current fetch\n  if (action.posts.length !== 25) {\n    page = \"allLoaded\";\n  } else {\n    page += 1;\n  }\n\n  return {\n    ...state,\n    posts: [...state.posts, ...action.posts],\n    history: action.pageName,\n    page,\n  };\n};\n\nconst setSinglePost = (state, action) => {\n  return {\n    ...state,\n    post: { ...action.post, editing: false },\n  };\n};\n\nconst toggleEditPost = (state, action) => {\n  const post = { ...state.post };\n\n  // Set post to editing\n  post.editing = !post.editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    post.text = post.original;\n  }\n\n  // Set original value so can be used if canceled\n  post.original = post.text;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst editPostInput = (state, action) => {\n  const post = { ...state.post };\n\n  post.text = action.value;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst setPostVote = (state, action) => {\n  const posts = [];\n  for (let post of state.posts) {\n    posts.push({ ...post });\n  }\n\n  const index = posts.findIndex((post) => post.post_id === action.post_id);\n\n  // Set new user vote\n  posts[index].user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.posts[index].user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    posts[index].votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    posts[index].votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    posts[index].votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    posts[index].votes += 1;\n  }\n\n  return {\n    ...state,\n    posts,\n  };\n};\n\nconst setSinglePostVote = (state, action) => {\n  const post = { ...state.post };\n\n  // Set new user vote\n  post.user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.post.user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    post.votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    post.votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    post.votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    post.votes += 1;\n  }\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst changeOrder = (state, action) => {\n  return {\n    ...state,\n    order: action.order,\n  };\n};\n\nconst changeFilter = (state, action) => {\n  return {\n    ...state,\n    filter: action.filter,\n  };\n};\n\nconst sortPosts = (state, action) => {\n  let posts = [...state.posts];\n\n  // Order posts based upon chosen value\n  switch (action.order) {\n    case \"most\":\n      posts = posts.sort((a, b) => {\n        return b.votes - a.votes;\n      });\n      break;\n    case \"least\":\n      posts = posts.sort((a, b) => {\n        return a.votes - b.votes;\n      });\n      break;\n    case \"newest\":\n      posts = posts.sort((a, b) => {\n        return new Date(b.time) < new Date(a.time) ? -1 : 1;\n      });\n      break;\n    case \"oldest\":\n      posts = posts.sort((a, b) => {\n        return new Date(b.time) > new Date(a.time) ? -1 : 1;\n      });\n      break;\n    default:\n      break;\n  }\n\n  return {\n    ...state,\n    posts: posts,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RESET_HISTORY:\n      return resetHistory(state, action);\n    case actionTypes.LOAD_POSTS:\n      return loadPosts(state, action);\n    case actionTypes.LOAD_MORE_POSTS:\n      return loadMorePosts(state, action);\n    case actionTypes.SET_SINGLE_POST:\n      return setSinglePost(state, action);\n    case actionTypes.TOGGLE_EDIT_POST:\n      return toggleEditPost(state, action);\n    case actionTypes.EDIT_POST_INPUT:\n      return editPostInput(state, action);\n    case actionTypes.SET_POST_VOTE:\n      return setPostVote(state, action);\n    case actionTypes.SET_SINGLE_POST_VOTE:\n      return setSinglePostVote(state, action);\n    case actionTypes.CHANGE_ORDER:\n      return changeOrder(state, action);\n    case actionTypes.CHANGE_FILTER:\n      return changeFilter(state, action);\n    case actionTypes.SORT_POSTS:\n      return sortPosts(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  topics: [],\n};\n\nconst setTopics = (state, action) => {\n  return {\n    ...state,\n    topics: action.topics,\n  };\n};\n\nconst setAddedTopic = (state, action) => {\n  const topics = [];\n  for (let topic of state.topics) {\n    topics.push({ ...topic });\n  }\n\n  return {\n    ...state,\n    topics: [...topics, action.topic],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TOPICS:\n      return setTopics(state, action);\n    case actionTypes.SET_ADDED_TOPIC:\n      return setAddedTopic(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  sidebar: {\n    isHome: true,\n    name: \"\",\n    description: \"\",\n  },\n  show: false,\n};\n\nconst setSidebar = (state, action) => {\n  return {\n    ...state,\n    sidebar: {\n      isHome: action.isHome,\n      name: action.name,\n      description: action.description,\n    },\n  };\n};\n\nconst toggleSidebar = (state, action) => {\n  return {\n    ...state,\n    show: !state.show,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SIDEBAR:\n      return setSidebar(state, action);\n    case actionTypes.TOGGLE_SIDEBAR:\n      return toggleSidebar(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  comments: [],\n};\n\n// Helper function to duplicate comments array\nconst duplicateComments = (comments) => {\n  const duplicate = [];\n  for (let comment of comments) {\n    duplicate.push({ ...comment });\n  }\n  return duplicate;\n};\n\nconst setSinglePostComments = (state, action) => {\n  const comments = action.comments;\n  for (let comment of comments) {\n    comment.reply = \"\";\n    comment.showReply = false;\n    comment.editing = false;\n    comment.show = true;\n  }\n  return {\n    ...state,\n    comments: action.comments,\n  };\n};\n\nconst addComment = (state, action) => {\n  return {\n    ...state,\n    comments: [\n      ...state.comments,\n      {\n        ...action.comment,\n        reply: \"\",\n        showReply: false,\n        editing: false,\n        show: true,\n      },\n    ],\n  };\n};\n\nconst toggleReplyForm = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].showReply = !comments[index].showReply;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst replyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst resetReplyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = \"\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst setDeletedComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set displayed comment text to deleted values\n  comments[index].text = \"[deleted]\";\n  comments[index].user_id = 11;\n  comments[index].username = \"[deleted]\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleEditComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set chosen comment to editing mode\n  comments[index].editing = !comments[index].editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    comments[index].text = comments[index].original;\n  }\n\n  // Set original value so can be used if canceled\n  comments[index].original = comments[index].text;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst editCommentInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].text = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleShowComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].show = !comments[index].show;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SINGLE_POST_COMMENTS:\n      return setSinglePostComments(state, action);\n    case actionTypes.ADD_COMMENT:\n      return addComment(state, action);\n    case actionTypes.TOGGLE_REPLY_FORM:\n      return toggleReplyForm(state, action);\n    case actionTypes.REPLY_INPUT:\n      return replyInput(state, action);\n    case actionTypes.RESET_REPLY_INPUT:\n      return resetReplyInput(state, action);\n    case actionTypes.SET_DELETED_COMMENT:\n      return setDeletedComment(state, action);\n    case actionTypes.TOGGLE_EDIT_COMMENT:\n      return toggleEditComment(state, action);\n    case actionTypes.EDIT_COMMENT_INPUT:\n      return editCommentInput(state, action);\n    case actionTypes.TOGGLE_SHOW_COMMENT:\n      return toggleShowComment(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  success: \"\",\n  error: \"\",\n  loading: false,\n  timeout: null,\n};\n\nconst setError = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    success: \"\",\n  };\n};\n\nconst setSuccess = (state, action) => {\n  return {\n    ...state,\n    success: action.success,\n    error: \"\",\n  };\n};\n\nconst setLoading = (state, action) => {\n  // Clear message if loading\n  const messages = {};\n  if (action.loading) {\n    messages.error = \"\";\n    messages.success = \"\";\n  }\n\n  return {\n    ...state,\n    ...messages,\n    loading: action.loading,\n  };\n};\n\nconst setTimeout = (state, action) => {\n  return {\n    ...state,\n    timeout: action.timeout,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ERROR:\n      return setError(state, action);\n    case actionTypes.SET_SUCCESS:\n      return setSuccess(state, action);\n    case actionTypes.SET_LOADING:\n      return setLoading(state, action);\n    case actionTypes.SET_TIMEOUT:\n      return setTimeout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport auth from \"./store/reducers/auth\";\nimport posts from \"./store/reducers/posts\"\nimport topics from \"./store/reducers/topics\"\nimport sidebar from \"./store/reducers/sidebar\"\nimport comments from \"./store/reducers/comments\"\nimport flash from \"./store/reducers/flash\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  posts: posts,\n  comments: comments,\n  topics: topics,\n  sidebar: sidebar,\n  flash: flash,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}