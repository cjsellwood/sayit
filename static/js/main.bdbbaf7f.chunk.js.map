{"version":3,"sources":["store/actions/actionTypes.js","store/actions/flash.js","base.js","store/actions/auth.js","store/actions/comments.js","store/actions/posts.js","store/actions/topics.js","store/actions/sidebar.js","components/ScrollToTop.js","components/helpers/Nav.js","components/functions/dateSince.js","components/helpers/Votes.js","components/helpers/PostsOptions.js","components/Home.js","components/Register.js","components/Login.js","components/NewPost.js","components/NewTopic.js","components/TopicPosts.js","components/helpers/AuthCreator.js","components/helpers/AuthShow.js","components/helpers/Comment.js","components/Post.js","components/Topics.js","components/helpers/AuthHide.js","components/helpers/Sidebar.js","components/SearchPosts.js","components/helpers/FlashError.js","components/helpers/FlashSuccess.js","components/helpers/FlashLoading.js","components/UserPosts.js","components/NewLinkPost.js","components/PageNotFound.js","App.js","store/reducers/auth.js","store/reducers/posts.js","store/reducers/topics.js","store/reducers/sidebar.js","store/reducers/comments.js","store/reducers/flash.js","index.js"],"names":["AUTHORIZE","DEAUTHORIZE","TOGGLE_REGISTER_MODAL","TOGGLE_LOGIN_MODAL","RESET_HISTORY","LOAD_POSTS","LOAD_MORE_POSTS","SET_SINGLE_POST","TOGGLE_EDIT_POST","EDIT_POST_INPUT","SET_POST_VOTE","SET_SINGLE_POST_VOTE","CHANGE_ORDER","CHANGE_FILTER","SORT_POSTS","ADD_COMMENT","TOGGLE_REPLY_FORM","REPLY_INPUT","RESET_REPLY_INPUT","SET_DELETED_COMMENT","TOGGLE_EDIT_COMMENT","EDIT_COMMENT_INPUT","TOGGLE_SHOW_COMMENT","SET_SINGLE_POST_COMMENTS","SET_TOPICS","SET_ADDED_TOPIC","SET_SIDEBAR","TOGGLE_SIDEBAR","SET_ERROR","SET_SUCCESS","SET_LOADING","SET_TIMEOUT","setError","error","type","actionTypes","setSuccess","success","setLoading","loading","setTimeout","timeout","base","authorize","user_id","userLogout","dispatch","localStorage","removeItem","toggleRegisterModal","toggleLoginModal","addComment","comment","toggleReplyForm","comment_id","commentReply","text","post_id","parent","token","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","response","json","data","console","log","Error","message","catch","deleteComment","setDeletedComment","toggleEditComment","canceled","newPost","postForm","history","topic","split","join","toLowerCase","push","loadPosts","posts","pageName","loadMorePosts","setSinglePost","post","getSinglePost","query","jwt_decode","sub","comments","toggleEditPost","postVote","vote","single_post","setSinglePostVote","setPostVote","sortPosts","order","getTopics","topics","addTopic","setAddedTopic","setSidebar","isHome","name","description","toggleSidebar","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","connect","state","isAuth","auth","sidebar","sidebarShow","show","onToggleSidebar","actions","props","className","to","onClick","aria-label","xmlns","viewBox","d","fillRule","dateSince","date","duration","Date","now","toFixed","onSetError","onPostVote","user_vote","votes","filter","onChangeOrder","onChangeFilter","htmlFor","id","value","onChange","e","target","flash","page","onGetPosts","onSetSidebar","onSortPosts","useState","loaded","setLoaded","length","postsDisplay","map","index","title","time","username","Fragment","onUserRegister","registerForm","setItem","expires","Number","expiresIn","decoded","goBack","onToggleRegisterModal","password","confirmPassword","setRegisterForm","useHistory","handleInput","currentTarget","onSubmit","preventDefault","required","minLength","disabled","onUserLogin","loginForm","onToggleLoginModal","setLoginForm","onNewPost","setPostForm","location","onNewTopic","topicForm","setTopicForm","maxLength","onGetTopicPosts","onAddTopic","useParams","topicIndex","findIndex","topicState","creator_id","children","onToggleReplyForm","onCommentReply","onReplyInput","onDeleteComment","onToggleEditComment","onEditCommentInput","onEditComment","onToggleShowComment","Comment","replies","allComments","commentContent","editing","data-index","AuthCreator","showReply","reply","placeholder","onSetSinglePost","onGetSinglePost","onNewComment","commentForm","onDeletePost","onToggleEditPost","onEditPostInput","onEditPost","replace","postDisplay","postContentDisplay","imgPattern","includes","link","test","match","start","src","frameBorder","allow","allowFullScreen","alt","href","toString","setCommentForm","commentsDisplay","onGetTopics","topicsDisplay","topic_id","onUserLogout","search","setSearch","stopPropagation","onGetSearchPosts","q","URLSearchParams","get","onSetTimeout","errorDisplay","clearTimeout","onSetSuccess","successDisplay","onGetUserPosts","PageNotFound","registerModal","loginModal","onAuthorize","expiration","isLoggedIn","path","exact","initialState","action","deauthorize","reducer","resetHistory","original","editPostInput","previousVote","changeOrder","changeFilter","sort","a","b","setTopics","duplicateComments","duplicate","setSinglePostComments","replyInput","resetReplyInput","editCommentInput","toggleShowComment","messages","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2aAAaA,EAAY,YACZC,EAAc,cACdC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAgB,gBAChBC,EAAa,aACbC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAuB,uBACvBC,EAAe,eACfC,EAAgB,gBAChBC,EAAa,aAEbC,EAAc,cACdC,EAAoB,oBAEpBC,EAAc,cACdC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAA2B,2BAE3BC,EAAa,aACbC,EAAkB,kBAElBC,EAAc,cACdC,EAAiB,iBAEjBC,EAAY,YACZC,EAAc,cACdC,EAAc,cACdC,EAAc,cCnCdC,EAAW,SAACC,GACvB,MAAO,CACLC,KAAMC,EACNF,UAISG,EAAa,SAACC,GACzB,MAAO,CACLH,KAAMC,EACNE,YAISC,EAAa,SAACC,GACzB,MAAO,CACLL,KAAMC,EACNI,YAISC,EAAa,SAACC,GACzB,MAAO,CACLP,KAAMC,EACNM,YCvBWC,EAHF,uBCMAC,EAAY,SAACC,GACxB,MAAO,CACLV,KAAMC,EACNS,YAeSC,EAAa,WACxB,OAAO,SAACC,GACNA,GAXFC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,WAEjB,CACLd,KAAMC,KAQNW,EAASV,EAAW,iBAKXa,EAAsB,WACjC,MAAO,CACLf,KAAMC,IAKGe,EAAmB,WAC9B,MAAO,CACLhB,KAAMC,I,OCpCGgB,EAAa,SAACC,GACzB,MAAO,CACLlB,KAAMC,EACNiB,YAiDSC,EAAkB,SAACC,GAC9B,MAAO,CACLpB,KAAMC,EACNmB,eAaSC,GAAe,SAACC,EAAMC,EAASC,GAC1C,OAAO,SAACZ,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,iBAAyB,CAC5BoB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAET,OAAMC,UAASC,WACtCQ,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EAASK,EAAWoB,EAAKnB,UAGzBN,EAhCC,CACLZ,KAAMC,EACNmB,WA8B6BI,IAGzBZ,EAASO,EAAgBK,IAEzBZ,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,eAuBnBE,GAAgB,SAACvB,GAC5B,OAAO,SAACR,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,qBAAqBY,EAArB,WAA0C,CAC7CQ,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAEX,eACvBY,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EA9ByB,SAACQ,GAChC,MAAO,CACLpB,KAAMC,EACNmB,cA2BawB,CAAkBxB,IAE3BR,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,eAMnBI,GAAoB,SAACzB,EAAY0B,GAC5C,MAAO,CACL9C,KAAMC,EACNmB,aACA0B,aC7JSC,GAAU,SAACC,EAAUC,GAChC,OAAO,SAACrC,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCsB,EAASE,MAAQF,EAASE,MAAMC,MAAM,KAAKC,KAAK,IAAIC,cACpDf,QAAQC,IAAIS,GACZrB,MAAM,GAAD,OAAInB,EAAJ,cAAsB,CACzBoB,OAAQ,OACRC,KAAMC,KAAKC,UAAUiB,GACrBhB,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EA9BC,CACLZ,KAAMC,IAgCFgD,EAAQK,KAAR,kBAAwBN,EAASE,MAAjC,YAA0Cb,EAAKd,UAE/CX,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SAMfmD,GAAY,SAACC,EAAOC,GAC/B,MAAO,CACLzD,KAAMC,EACNuD,QACAC,aAISC,GAAgB,SAACF,EAAOC,GACnC,MAAO,CACLzD,KAAMC,EACNuD,QACAC,aAyGSE,GAAgB,SAACC,GAC5B,MAAO,CACL5D,KAAMC,EACN2D,SAKSC,GAAgB,SAACtC,GAC5B,OAAO,SAACX,GACNA,EAASR,GAAW,IAGpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SAC/BoC,EAAQ,GACZ,GAAIrC,EAAO,CACT,IAAMf,EAAUqD,YAAWtC,GAAOuC,IAClCF,GAAK,mBAAgBpD,GAGvBiB,MAAM,GAAD,OAAInB,EAAJ,kBAAkBe,GAAlB,OAA4BuC,IAC9B5B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,ODlJM,IAACkE,ECsJ9BrD,EAAS+C,GAActB,EAAKuB,OAG5BhD,GDzJ8BqD,ECyJC5B,EAAK4B,SDxJnC,CACLjE,KAAMC,EACNgE,cCwJIrD,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACNa,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SAuCf8D,GAAiB,SAACpB,GAC7B,MAAO,CACL9C,KAAMC,EACN6C,aAiKSqB,GAAW,SAACC,EAAM7C,EAAS8C,GACtC,OAAO,SAACzD,GACN,IAAMa,EAAQZ,aAAaa,QAAQ,SAEnCC,MAAM,GAAD,OAAInB,EAAJ,kBAAkBe,EAAlB,SAAkC,CACrCK,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAER,UAAS6C,SAChCpC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAKrBa,EADEyD,EA7BqB,SAACD,EAAM7C,GACtC,MAAO,CACLvB,KAAMC,EACNmE,OACA7C,WA0Be+C,CAAkBF,EAAM7C,GAtChB,SAAC6C,EAAM7C,GAChC,MAAO,CACLvB,KAAMC,EACNmE,OACA7C,WAoCegD,CAAYH,EAAM7C,OAG9BmB,OAAM,SAAC3C,GACNa,EAASd,EAASC,EAAM0C,eAsBnB+B,GAAY,SAACC,GACxB,MAAO,CACLzE,KAAMC,EACNwE,UCvZSC,GAAY,WACvB,OAAO,SAAC9D,GACNA,EAASR,GAAW,IAGpBuB,MAAM,GAAD,OAAInB,EAAJ,kBACF0B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OApBN,IAAC4E,EAwBlB/D,GAxBkB+D,EAwBCtC,EAAKsC,OAvBvB,CACL3E,KAAMC,EACN0E,YAwBI/D,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,eAcnBmC,GAAW,SAAC1B,GACvB,OAAO,SAACtC,GACNA,EAASR,GAAW,IAEpBuB,MAAM,GAAD,OAAInB,EAAJ,sBAA8B,CACjCoB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEmB,UACvBlB,QAAS,CACP,eAAgB,sBAGjBE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAEvBa,EAzBqB,SAACsC,GAC5B,MAAO,CACLlD,KAAMC,EACNiD,SAsBa2B,CAAcxC,EAAKa,QAE5BtC,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,eCjHnBqC,GAAa,SAACC,EAAQC,EAAMC,GACvC,MAAO,CACLjF,KAAMC,EACN8E,SACAC,OACAC,gBAKSC,GAAgB,WAC3B,MAAO,CACLlF,KAAMC,ICZK,SAASkF,KACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,4BCiDMK,gBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,OACnBE,QAASH,EAAMG,QAAQA,QACvBC,YAAaJ,EAAMG,QAAQE,SAIJ,SAACnF,GAC1B,MAAO,CACLoF,gBAAiB,WACfpF,EAASqF,UAKAR,EApDH,SAACS,GACX,OACE,sBAAKC,UAAU,MAAf,SACE,gCACE,8BACE,eAAC,KAAD,CACEC,GAAG,IACHD,UAAU,WACVE,QAASH,EAAMJ,YAAcI,EAAMF,gBAAkB,KAHvD,qBAQF,yBACEG,UAAU,cACVE,QAASH,EAAMF,gBACfM,aAAW,iBAHb,SAKGJ,EAAMJ,YACL,sBAAKS,MAAM,6BAA6BC,QAAQ,YAAhD,SACE,uBAAMC,EAAE,sMAGV,sBAAKF,MAAM,6BAA6BC,QAAQ,YAAhD,SACE,uBACEE,SAAS,UACTD,EAAE,qM,QClBHE,GAfG,SAACC,GACjB,IAAMC,GAAYC,KAAKC,MAAQ,IAAID,KAAKF,IAAS,IACjD,OAAIC,EAAW,GACP,GAAN,OAAUA,EAASG,QAAQ,GAA3B,gBACSH,EAAW,KACd,GAAN,QAAWA,EAAW,IAAIG,QAAQ,GAAlC,gBACSH,EAAW,MACd,GAAN,QAAWA,EAAQ,MAAcG,QAAQ,GAAzC,cACSH,EAAW,QACd,GAAN,QAAWA,EAAQ,OAAmBG,QAAQ,GAA9C,aAEM,GAAN,QAAWH,EAAQ,SAAyBG,QAAQ,GAApD,eC2DWvB,gBAdS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnBjF,QAASgF,EAAME,KAAKlF,YAGK,SAACE,GAAD,MAAe,CACxCqG,WAAY,SAAClH,GACXa,EAASqF,EAAiBlG,KAE5BmH,WAAY,SAAC9C,EAAM7C,EAAS8C,GAC1BzD,EAASqF,GAAiB7B,EAAM7C,EAAS8C,QAI9BoB,EAlED,SAACS,GA6Bb,OACE,uBAAKC,UAAU,aAAf,UACE,sBACEE,QA/BS,WAEb,OAAKH,EAAMP,OAKa,IAApBO,EAAMiB,UACDjB,EAAMgB,WAAW,EAAGhB,EAAM3E,QAAS2E,EAAM7B,kBAGlD6B,EAAMgB,WAAW,EAAGhB,EAAM3E,QAAS2E,EAAM7B,aARhC6B,EAAMe,WAAW,kBA6BtBd,UAAWD,EAAMxF,SAA+B,IAApBwF,EAAMiB,UAAkB,UAAY,KAChEZ,MAAM,6BACNC,QAAQ,YAJV,SAME,uBAAMC,EAAE,uHAEV,6BAAIP,EAAMkB,QACV,sBACEf,QA1BW,WAEf,OAAKH,EAAMP,QAKc,IAArBO,EAAMiB,UACDjB,EAAMgB,WAAW,EAAGhB,EAAM3E,QAAS2E,EAAM7B,kBAGlD6B,EAAMgB,YAAY,EAAGhB,EAAM3E,QAAS2E,EAAM7B,aARjC6B,EAAMe,WAAW,kBAwBtBd,UAAWD,EAAMxF,UAAgC,IAArBwF,EAAMiB,UAAmB,YAAc,KACnEZ,MAAM,6BACNC,QAAQ,YAJV,SAME,uBAAMC,EAAE,2HCQDhB,I,MAAAA,aAjBS,SAACC,GACvB,MAAO,CACLjB,MAAOiB,EAAMlC,MAAMiB,MACnB4C,OAAQ3B,EAAMlC,MAAM6D,WAGG,SAACzG,GAC1B,MAAO,CACL0G,cAAe,SAAC7C,GACd7D,EP0YqB,SAAC6D,GAC1B,MAAO,CACLzE,KAAMC,EACNwE,SO7YWwB,CAAoBxB,KAE/B8C,eAAgB,SAACF,GACfzG,EP+YsB,SAACyG,GAC3B,MAAO,CACLrH,KAAMC,EACNoH,UOlZWpB,CAAqBoB,QAKrB5B,EArDM,SAACS,GACpB,OACE,+BACE,wBAAMC,UAAU,qBAAhB,UACE,iCACE,wBAAOqB,QAAQ,iBACf,0BACEC,GAAG,eACHC,MAAOxB,EAAMzB,MACbkD,SAAU,SAACC,GAAD,OAAO1B,EAAMoB,cAAcM,EAAEC,OAAOH,QAHhD,UAKE,yBAAQA,MAAM,OAAd,wBACA,yBAAQA,MAAM,QAAd,yBACA,yBAAQA,MAAM,SAAd,oBACA,yBAAQA,MAAM,SAAd,0BAGJ,iCACE,wBAAOF,QAAQ,kBACf,0BACEC,GAAG,gBACHC,MAAOxB,EAAMmB,OACbM,SAAU,SAACC,GAAD,OAAO1B,EAAMqB,eAAeK,EAAEC,OAAOH,QAHjD,UAKE,yBAAQA,MAAM,MAAd,iBACA,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,QAAd,mBACA,yBAAQA,MAAM,OAAd,kBACA,yBAAQA,MAAM,MAAd,gCC2FGjC,gBAvBS,SAACC,GAAD,MAAY,CAClClC,MAAOkC,EAAMlC,MAAMA,MACnBnD,QAASqF,EAAMoC,MAAMzH,QACrB4C,QAASyC,EAAMlC,MAAMP,QACrBwB,MAAOiB,EAAMlC,MAAMiB,MACnB4C,OAAQ3B,EAAMlC,MAAM6D,OACpBU,KAAMrC,EAAMlC,MAAMuE,SAGO,SAACnH,GAC1B,MAAO,CACLoH,WAAY,SAACvD,EAAO4C,EAAQU,GAC1BnH,ER3CkB,SAAC6D,EAAO4C,EAAQU,GACtC,OAAO,SAACnH,GACN,GAAa,cAATmH,EAAJ,CAIAnH,EAASR,GAAW,IAEf2H,GACHnH,EAAS2C,GAAU,KAIrB,IAAM9B,EAAQZ,aAAaa,QAAQ,SAC/BoC,EAAK,iBAAaW,EAAb,mBAA6B4C,EAA7B,mBACNU,EAAkB,GAAPA,EAAJ,GAEV,GAAItG,EAAO,CACT,IAAMf,EAAUqD,YAAWtC,GAAOuC,IAClCF,GAAK,mBAAgBpD,GAGvBiB,MAAM,GAAD,OAAInB,EAAJ,iBAAiBsD,IACnB5B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAOrBa,EAHGmH,EAGMrE,GAAcrB,EAAKmB,MAAO,QAF1BD,GAAUlB,EAAKmB,MAAO,SAKjC5C,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACgB,mBAAlBA,EAAM0C,SACR7B,EAAS2C,GAAU,GAAI,SAEzB3C,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SQDb6F,CAAiBxB,EAAO4C,EAAQU,KAE3CE,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,KAE5CiD,YAAa,SAACzD,GACZ7D,EAASqF,GAAkBxB,QAKlBgB,EApHF,SAACS,GACZ,MAA4BiC,oBAAS,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KAGA/C,qBAAU,WACJ8C,IAAWlC,EAAM1C,MAAM8E,OAAS,IAAqB,cAAfpC,EAAM6B,MAE9C7B,EAAMgC,YAAYhC,EAAMzB,OACf2D,GAETlC,EAAM8B,WAAW9B,EAAMzB,MAAOyB,EAAMmB,UAGrC,CAACnB,EAAMzB,QAEVa,qBAAU,WAEJ8C,GACFlC,EAAM8B,WAAW9B,EAAMzB,MAAOyB,EAAMmB,UAIrC,CAACnB,EAAMmB,SAEV/B,qBAAU,WAEc,SAAlBY,EAAMjD,SACRiD,EAAM8B,WAAW9B,EAAMzB,MAAOyB,EAAMmB,QAEtCgB,GAAU,GAGVnC,EAAM+B,cAAa,EAAM,GAAI,MAG5B,IAEH,IAAMM,EAAerC,EAAM1C,MAAMgF,KAAI,SAAC5E,EAAM6E,GAC1C,OACE,gCACE,sBAAKtC,UAAU,cAAf,SACE,6BAAIsC,EAAQ,MAEd,eAAC,GAAD,CACElH,QAASqC,EAAKrC,QACd6F,MAAOxD,EAAKwD,MACZD,UAAWvD,EAAKuD,YAElB,iCACE,sBAAKhB,UAAU,aAAf,SACE,eAAC,KAAD,CAAMC,GAAE,kBAAaxC,EAAKV,MAAlB,YAA2BU,EAAKrC,SAAxC,SACGqC,EAAK8E,UAGV,qBAAGvC,UAAU,gBAAb,uBACaQ,GAAU/C,EAAK+E,MAD5B,MACsC,IACpC,eAAC,KAAD,CAAMxC,UAAU,gBAAgBC,GAAE,iBAAYxC,EAAKgF,UAAnD,SACGhF,EAAKgF,WACA,IAJV,KAKK,IACH,eAAC,KAAD,CAAMzC,UAAU,aAAaC,GAAE,kBAAaxC,EAAKV,OAAjD,SACGU,EAAKV,gBAtBLU,EAAKrC,YA8BlB,OACE,2BAAS4E,UAAU,OAAnB,UACqB,SAAlBD,EAAMjD,QACL,gBAAC,IAAM4F,SAAP,WACE,eAAC,GAAD,IACA,qBAAI1C,UAAU,aAAd,SAA4BoC,OAE5B,KACY,cAAfrC,EAAM6B,MAAwB7B,EAAM1C,MAAM8E,QAAU,GACnD,sBACEnC,UAAU,YACVE,QAAS,kBACPH,EAAM8B,WAAW9B,EAAMzB,MAAOyB,EAAMmB,OAAQnB,EAAM6B,OAHtD,SAME,yBAAQ5B,UAAU,eAAeG,aAAW,kBAA5C,0BAIA,W,QCmBKb,I,MAAAA,aAjBS,SAACC,GACvB,MAAO,CACLrF,QAASqF,EAAMoC,MAAMzH,YAIE,SAACO,GAC1B,MAAO,CACLkI,eAAgB,SAACC,EAAc9F,GAC7BrC,EX7DsB,SAACmI,EAAc9F,GACzC,OAAO,SAACrC,GACNA,EAASR,GAAW,IAEpBuB,MAAM,GAAD,OAAInB,EAAJ,aAAqB,CACxBoB,OAAQ,OACRC,KAAMC,KAAKC,UAAUgH,GACrB/G,QAAS,CACP,eAAgB,sBAGjBE,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBc,aAAamI,QAAQ,QAAS3G,EAAKZ,OACnC,IAAMwH,EAAUnC,KAAKC,MAAQmC,OAAO7G,EAAK8G,WACzCtI,aAAamI,QAAQ,UAAWC,GAGhC,IAAMG,EAAUrF,YAAWlD,aAAaa,QAAQ,UAChDd,EAASH,EAAU2I,EAAQpF,MAG3BpD,EAASG,KAGTH,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,UAGzBQ,EAAQK,KAAK,YACbL,EAAQoG,YAET3G,OAAM,SAAC3C,GAENa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,cWkBjBwD,CAAqB8C,EAAc9F,KAE9CqG,sBAAuB,WACrB1I,EAASqF,SAKAR,EA7GE,SAACS,GAChB,MAAwCiC,mBAAS,CAC/CS,SAAU,GACVW,SAAU,GACVC,gBAAiB,KAHnB,oBAAOT,EAAP,KAAqBU,EAArB,KAMIxG,EAAUyG,cAGRC,EAAc,SAAC/B,GACnB6B,EAAgB,2BACXV,GADU,mBAEZnB,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UAmB9B,OACE,0BAASvB,UAAU,gBAAgBE,QAPlB,SAACuB,GACdA,EAAEgC,gBAAkBhC,EAAEC,QACxB3B,EAAMoD,yBAKR,SACE,iCACE,2CACA,yBACEnD,UAAU,qBACVE,QAASH,EAAMoD,sBACfhD,aAAW,aAHb,SAKE,sBAAKC,MAAM,6BAA6BC,QAAQ,YAAhD,SACE,uBAAMC,EAAE,wMAGZ,wBAAMN,UAAU,YAAY0D,SA3Bb,SAACjC,GACpBA,EAAEkC,iBAGF5D,EAAM4C,eAAeC,EAAc9F,IAuB/B,UACE,iCACE,wBAAOuE,QAAQ,WAAf,sBACA,wBACExH,KAAK,OACLgF,KAAK,WACL0C,MAAOqB,EAAaH,SACpBjB,SAAUgC,EACVI,UAAQ,OAGZ,iCACE,wBAAOvC,QAAQ,WAAf,sBACA,wBACExH,KAAK,WACLgF,KAAK,WACL0C,MAAOqB,EAAaQ,SACpB5B,SAAUgC,EACVI,UAAQ,EACRC,UAAU,SAGd,iCACE,wBAAOxC,QAAQ,kBAAf,8BACA,wBACExH,KAAK,WACLgF,KAAK,kBACL0C,MAAOqB,EAAaS,gBACpB7B,SAAUgC,EACVI,UAAQ,EACRC,UAAU,SAGd,yBACE7D,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,SAAU/D,EAAM7F,QAAU,WAAa,KAJzC,kCCaKoF,gBAjBS,SAACC,GACvB,MAAO,CACLrF,QAASqF,EAAMoC,MAAMzH,YAIE,SAACO,GAC1B,MAAO,CACLsJ,YAAa,SAACC,EAAWlH,GACvBrC,EZMmB,SAACuJ,EAAWlH,GACnC,OAAO,SAACrC,GACNA,EAASR,GAAW,IACpBuB,MAAM,GAAD,OAAInB,EAAJ,UAAkB,CACrBoB,OAAQ,OACRC,KAAMC,KAAKC,UAAUoI,GACrBnI,QAAS,CACP,eAAgB,sBAGjBE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBc,aAAamI,QAAQ,QAAS3G,EAAKZ,OACnC,IAAMwH,EAAUnC,KAAKC,MAAQmC,OAAO7G,EAAK8G,WACzCtI,aAAamI,QAAQ,UAAWC,GAGhC,IAAMG,EAAUrF,YAAWlD,aAAaa,QAAQ,UAChDd,EAASH,EAAU2I,EAAQpF,MAE3BpD,EAASI,KAGTJ,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,UAGzBQ,EAAQK,KAAK,YACbL,EAAQoG,YAET3G,OAAM,SAAC3C,GAENa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,cY7CjBwD,CAAkBkE,EAAWlH,KAExCmH,mBAAoB,WAClBxJ,EAASqF,SAKAR,EA5FD,SAACS,GACb,MAAkCiC,mBAAS,CACzCS,SAAU,GACVW,SAAU,KAFZ,oBAAOY,EAAP,KAAkBE,EAAlB,KAKIpH,EAAUyG,cAGRC,EAAc,SAAC/B,GACnByC,EAAa,2BACRF,GADO,mBAETvC,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UAmB9B,OACE,0BAASvB,UAAU,gBAAgBE,QAPlB,SAACuB,GACdA,EAAEgC,gBAAkBhC,EAAEC,QACxB3B,EAAMkE,sBAKR,SACE,iCACE,wCACA,yBACEjE,UAAU,qBACVE,QAASH,EAAMkE,mBACf9D,aAAW,aAHb,SAKE,sBAAKC,MAAM,6BAA6BC,QAAQ,YAAhD,SACE,uBAAMC,EAAE,wMAGZ,wBAAMN,UAAU,YAAY0D,SA3Bb,SAACjC,GACpBA,EAAEkC,iBAGF5D,EAAMgE,YAAYC,EAAWlH,IAuBzB,UACE,iCACE,wBAAOuE,QAAQ,WAAf,sBACA,wBACExH,KAAK,OACLgF,KAAK,WACL0C,MAAOyC,EAAUvB,SACjBjB,SAAUgC,EACVI,UAAQ,OAGZ,iCACE,wBAAOvC,QAAQ,WAAf,sBACA,wBACExH,KAAK,WACLgF,KAAK,WACL0C,MAAOyC,EAAUZ,SACjB5B,SAAUgC,EACVI,UAAQ,EACRC,UAAU,SAGd,yBAAQ7D,UAAU,eAAenG,KAAK,SAASsG,aAAW,SAAS2D,SAAU/D,EAAM7F,QAAU,WAAa,KAA1G,8BCoBKoF,I,MAAAA,aAVS,SAACC,GAAD,MAAY,MAET,SAAC9E,GAC1B,MAAO,CACL0J,UAAW,SAACtH,EAAUC,GACpBrC,EAASqF,GAAgBjD,EAAUC,QAK1BwC,EArFC,SAACS,GACf,IAAIjD,EAAUyG,cAEd,EAAgCvB,mBAAS,CACvCO,MAAO,GACPpH,KAAM,GACN4B,MAAO,KAHT,oBAAOF,EAAP,KAAiBuH,EAAjB,KAMAjF,qBAAU,WAEJrC,EAAQuH,SAAS9E,OACnB6E,EAAY,2BACPvH,GADM,IAETE,MAAOD,EAAQuH,SAAS9E,MAAMxC,WAIjC,IAGH,IAAMyG,EAAc,SAAC/B,GACnB2C,EAAY,2BACPvH,GADM,mBAER4E,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UAU9B,OACE,qCACE,qBAAIvB,UAAU,aAAd,sBACA,wBAAMA,UAAU,0BAA0B0D,SARzB,SAACjC,GACpBA,EAAEkC,iBACF5D,EAAMoE,UAAUtH,EAAUC,IAMxB,UACE,iCACE,wBAAOuE,QAAQ,QAAf,oBACA,wBACExH,KAAK,OACLgF,KAAK,QACL0C,MAAO1E,EAAS0F,MAChBf,SAAUgC,EACVI,UAAQ,OAGZ,iCACE,wBAAOvC,QAAQ,OAAf,kBACA,2BACExH,KAAK,OACLgF,KAAK,OACL0C,MAAO1E,EAAS1B,KAChBqG,SAAUgC,OAGd,iCACE,wBAAOnC,QAAQ,QAAf,oBACA,wBACExH,KAAK,OACLgF,KAAK,QACL0C,MAAO1E,EAASE,MAChByE,SAAUgC,EACVI,UAAQ,OAGZ,yBAAQ5D,UAAU,eAAenG,KAAK,SAASsG,aAAW,SAA1D,8BCgBOb,I,MAAAA,aAfS,SAACC,GAAD,MAAY,CAClCrF,QAASqF,EAAMoC,MAAMzH,YAGI,SAACO,GAC1B,MAAO,CACL6J,WAAY,SAACC,EAAWzH,GACtBrC,EX5EkB,SAAC8J,EAAWzH,GAClC,OAAO,SAACrC,GACNA,EAASR,GAAW,IAEpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SAGnCgJ,EAAU1F,KAAO0F,EAAU1F,KAAK7B,MAAM,KAAKC,KAAK,IAAIC,cAEpD1B,MAAM,GAAD,OAAInB,EAAJ,aAAqB,CACxBoB,OAAQ,OACRC,KAAMC,KAAKC,UAAU2I,GACrB1I,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAMvBkD,EAAQK,KAAR,kBAAwBoH,EAAU1F,OAGlCpE,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,cWuCjBwD,CAAiByE,EAAWzH,KAEvCgF,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,QAKjCQ,EAnFE,SAACS,GAChB,IAAIjD,EAAUyG,cAEdpE,qBAAU,WAERY,EAAM+B,cAAa,EAAM,GAAI,MAG5B,IAEH,MAAkCE,mBAAS,CACzCnD,KAAM,GACNC,YAAa,KAFf,oBAAOyF,EAAP,KAAkBC,EAAlB,KAMMhB,EAAc,SAAC/B,GACnB+C,EAAa,2BACRD,GADO,mBAET9C,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UAU9B,OACE,qCACE,qBAAIvB,UAAU,aAAd,uBACA,wBAAMA,UAAU,2BAA2B0D,SAR1B,SAACjC,GACpBA,EAAEkC,iBACF5D,EAAMuE,WAAWC,EAAWzH,IAM1B,UACE,iCACE,wBAAOuE,QAAQ,OAAf,mBACA,wBACExH,KAAK,OACLgF,KAAK,OACL0C,MAAOgD,EAAU1F,KACjB2C,SAAUgC,EACVI,UAAQ,EACRa,UAAU,WAGd,iCACE,wBAAOpD,QAAQ,OAAf,0BACA,wBACExH,KAAK,OACLgF,KAAK,cACL0C,MAAOgD,EAAUzF,YACjB0C,SAAUgC,EACVI,UAAQ,EACRa,UAAU,WAGd,yBACEzE,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAJ5B,8BC8FOoF,gBA9BS,SAACC,GACvB,MAAO,CACLlC,MAAOkC,EAAMlC,MAAMA,MACnBmB,OAAQe,EAAMf,OAAOA,OACrB5E,MAAO2F,EAAMoC,MAAM/H,MACnBM,QAASqF,EAAMoC,MAAMzH,QACrB4C,QAASyC,EAAMlC,MAAMP,QACrBwB,MAAOiB,EAAMlC,MAAMiB,MACnB4C,OAAQ3B,EAAMlC,MAAM6D,OACpBU,KAAMrC,EAAMlC,MAAMuE,SAIK,SAACnH,GAC1B,MAAO,CACLiK,gBAAiB,SAAC3H,EAAOuB,EAAO4C,EAAQU,GACtCnH,EbrBuB,SAACsC,EAAOuB,EAAO4C,EAAQU,GAClD,OAAO,SAACnH,GACN,GAAa,cAATmH,EAAJ,CAIAnH,EAASR,GAAW,IAEf2H,GACHnH,EAAS2C,GAAU,KAIrB,IAAM9B,EAAQZ,aAAaa,QAAQ,SAC/BoC,EAAK,iBAAaW,EAAb,mBAA6B4C,EAA7B,mBACNU,EAAkB,GAAPA,EAAJ,GAEV,GAAItG,EAAO,CACT,IAAMf,EAAUqD,YAAWtC,GAAOuC,IAClCF,GAAK,mBAAgBpD,GAGvBiB,MAAM,GAAD,OAAInB,EAAJ,yBAAyB0C,GAAzB,OAAiCY,IACnC5B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAOrBa,EAHGmH,EAGMrE,GAAcrB,EAAKmB,MAAO,UAAYN,GAFtCK,GAAUlB,EAAKmB,MAAO,UAAYN,IAK7CtC,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACgB,mBAAlBA,EAAM0C,SACR7B,EAAS2C,GAAU,GAAI,UAAYL,IAErCtC,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SavBb6F,CAAsB/C,EAAOuB,EAAO4C,EAAQU,KAEvD+C,WAAY,SAAC5H,GACXtC,EAASqF,GAAiB/C,KAE5B+E,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,KAE5CiD,YAAa,SAACzD,GACZ7D,EAASqF,GAAkBxB,QAKlBgB,EAnJI,SAACS,GAClB,MAA4BiC,oBAAS,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KAEA/C,qBAAU,WACJ8C,IAAWlC,EAAM1C,MAAM8E,OAAS,IAAqB,cAAfpC,EAAM6B,MAE9C7B,EAAMgC,YAAYhC,EAAMzB,OACf2D,GAETlC,EAAM2E,gBAAgB3H,EAAOgD,EAAMzB,MAAOyB,EAAMmB,UAGjD,CAACnB,EAAMzB,QAEVa,qBAAU,WAEJ8C,GACFlC,EAAM2E,gBAAgB3H,EAAOgD,EAAMzB,MAAOyB,EAAMmB,UAIjD,CAACnB,EAAMmB,SAEV,IAAMnE,EAAU6H,cAAV7H,MACNA,EAAQA,EAAMG,cAGdiC,qBAAU,WACJY,EAAMjD,UAAY,UAAYC,GAChCgD,EAAM2E,gBAAgB3H,EAAOgD,EAAMzB,MAAOyB,EAAMmB,QAElDgB,GAAU,KAGT,CAACnF,IAEJoC,qBAAU,WAER,IAAI0F,GAAc,EACd9E,EAAMvB,OAAO2D,SACf0C,EAAa9E,EAAMvB,OAAOsG,WACxB,SAACC,GAAD,OAAgBA,GAAcA,EAAWlG,OAAS9B,OAKlC,IAAhB8H,GACF9E,EAAM4E,WAAW5H,IAIC,IAAhB8H,GACF9E,EAAM+B,cACJ,EACA/B,EAAMvB,OAAOqG,GAAYhG,KACzBkB,EAAMvB,OAAOqG,GAAY/F,eAK5B,CAAC/B,EAAOgD,EAAMvB,SAEjB,IAAM4D,EAAerC,EAAM1C,MAAMgF,KAAI,SAAC5E,EAAM6E,GAC1C,OACE,gCACE,sBAAKtC,UAAU,cAAf,SACE,6BAAIsC,EAAQ,MAEd,sBAAKtC,UAAU,aAAf,SACE,eAAC,GAAD,CACE5E,QAASqC,EAAKrC,QACd6F,MAAOxD,EAAKwD,MACZD,UAAWvD,EAAKuD,cAGpB,iCACE,sBAAKhB,UAAU,aAAf,SACE,eAAC,KAAD,CAAMC,GAAE,kBAAaxC,EAAKV,MAAlB,YAA2BU,EAAKrC,SAAxC,SACGqC,EAAK8E,UAGV,qBAAGvC,UAAU,gBAAb,uBACaQ,GAAU/C,EAAK+E,MAD5B,MACsC,IACpC,eAAC,KAAD,CAAMxC,UAAU,gBAAgBC,GAAE,iBAAYxC,EAAKgF,UAAnD,SACGhF,EAAKgF,mBApBLhF,EAAKrC,YA4BlB,OACE,qCACG2E,EAAMjD,UAAY,UAAYC,EAC7B,gBAAC,IAAM2F,SAAP,WACE,qBAAI1C,UAAU,aAAd,SAA4BjD,IAC5B,eAAC,GAAD,IACA,qBAAIiD,UAAU,aAAd,SAA4BoC,OAE5B,KACY,cAAfrC,EAAM6B,MAAwB7B,EAAM1C,MAAM8E,QAAU,GACnD,sBACEnC,UAAU,YACVE,QAAS,kBACPH,EAAM2E,gBAAgB3H,EAAOgD,EAAMzB,MAAOyB,EAAMmB,OAAQnB,EAAM6B,OAHlE,SAME,yBAAQ5B,UAAU,eAAeG,aAAW,kBAA5C,0BAIA,WCxGKb,gBAJS,SAACC,GAAD,MAAY,CAClChF,QAASgF,EAAME,KAAKlF,WAGP+E,EAbE,SAACS,GAEhB,OAAIA,EAAMxF,UAAYwF,EAAMiF,WACnB,eAAC,IAAMtC,SAAP,UAAiB3C,EAAMkF,WAEvB,QCQI3F,gBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGNF,EAbE,SAACS,GAEhB,OAAIA,EAAMP,OACD,eAAC,IAAMkD,SAAP,UAAiB3C,EAAMkF,WAEvB,QC8MI3F,gBAjCS,SAACC,GAAD,MAAY,CAClCrF,QAASqF,EAAMoC,MAAMzH,YAGI,SAACO,GAC1B,MAAO,CACLyK,kBAAmB,SAAC5C,GAClB7H,EAASqF,EAAwBwC,KAEnC6C,eAAgB,SAAChK,EAAMC,EAASC,GAC9BZ,EAASqF,GAAqB3E,EAAMC,EAASC,KAE/C+J,aAAc,SAAC7D,EAAOtG,GACpBR,EjBhFoB,SAAC8G,EAAOtG,GAChC,MAAO,CACLpB,KAAMC,EACNyH,QACAtG,ciB4EW6E,CAAmByB,EAAOtG,KAErCoK,gBAAiB,SAACpK,GAChBR,EAASqF,GAAsB7E,KAEjCqK,oBAAqB,SAACrK,EAAY0B,GAChClC,EAASqF,GAA0B7E,EAAY0B,KAEjD4I,mBAAoB,SAAChE,EAAOtG,GAC1BR,EjB5B0B,SAAC8G,EAAOtG,GACtC,MAAO,CACLpB,KAAMC,EACNyH,QACAtG,ciBwBW6E,CAAyByB,EAAOtG,KAE3CuK,cAAe,SAACrK,EAAMF,GACpBR,EjBtBqB,SAACU,EAAMF,GAChC,OAAO,SAACR,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,qBAAqBY,EAArB,SAAwC,CAC3CQ,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CAAET,OAAMF,eAC7BY,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EAASiC,GAAkBzB,IAE3BR,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,ciBNjBwD,CAAoB3E,EAAMF,KAErCwK,oBAAqB,SAACxK,GACpBR,EjBS2B,SAACQ,GAChC,MAAO,CACLpB,KAAMC,EACNmB,ciBZW6E,CAA0B7E,QAK1BqE,EA9MC,SAAVoG,EAAW3F,GAEf,IAgBM4F,EAAU5F,EAAM6F,YAAY1E,QAChC,SAACnG,GAAD,OAAaA,EAAQM,SAAW0E,EAAMhF,QAAQE,cAI5C4K,EAAiB,KAoIrB,OAnII9F,EAAMhF,QAAQ6E,OAChBiG,EACE,gBAAC,IAAMnD,SAAP,WACG3C,EAAMhF,QAAQ+K,QACb,wBAAM9F,UAAU,oBAAoB0D,SAhBlB,SAACjC,GACzBA,EAAEkC,iBACF5D,EAAMyF,cAAczF,EAAMhF,QAAQI,KAAM4E,EAAMhF,QAAQE,aAchD,UACE,iCACE,wBAAOoG,QAAQ,gBACf,2BACExC,KAAK,OACLyC,GAAG,cACHC,MAAOxB,EAAMhF,QAAQI,KACrBqG,SAAU,SAACC,GAAD,OACR1B,EAAMwF,mBACJ9D,EAAEC,OAAOH,MACTxB,EAAMhF,QAAQE,aAGlB2I,UAAQ,OAGZ,yBAAQ5D,UAAU,eAAenG,KAAK,SAAtC,oBAGA,yBACEmG,UAAU,eACVnG,KAAK,SACLiK,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBACPH,EAAMuF,oBAAoBvF,EAAMhF,QAAQE,YAAY,IALxD,uBAYF,sBAAK+E,UAAU,eAAf,SACE,6BAAID,EAAMhF,QAAQI,SAGtB,gBAAC,GAAD,WACE,uBAAK6E,UAAU,kBAAf,UACE,yBACE+F,aAAYhG,EAAMuC,MAClBwB,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBAAMH,EAAMmF,kBAAkBnF,EAAMhF,QAAQE,aAHvD,mBAOA,gBAAC+K,GAAD,CAAahB,WAAYjF,EAAMhF,QAAQR,QAAvC,UACE,yBACEV,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBAAMH,EAAMsF,gBAAgBtF,EAAMhF,QAAQE,aAJrD,oBAQA,yBACEpB,KAAK,OACLsG,aAAW,OACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBACPH,EAAMuF,oBAAoBvF,EAAMhF,QAAQE,aAL5C,wBAYH8E,EAAMhF,QAAQkL,UACb,wBAAMjG,UAAU,aAAa0D,SA5FZ,SAACjC,GAC1BA,EAAEkC,iBACF5D,EAAMoF,eACJpF,EAAMhF,QAAQmL,MACdnG,EAAM3E,QACN2E,EAAMhF,QAAQE,aAuFR,UACE,iCACE,wBAAOoG,QAAQ,iBACf,2BACExC,KAAK,UACLyC,GAAG,eACH6E,YAAY,QACZ5E,MAAOxB,EAAMhF,QAAQmL,MACrB1E,SAAU,SAACC,GAAD,OACR1B,EAAMqF,aAAa3D,EAAEC,OAAOH,MAAOxB,EAAMhF,QAAQE,aAEnD2I,UAAQ,OAGZ,yBACE5D,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAJ5B,oBAQA,yBACE8F,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBACPH,EAAMmF,kBAAkBnF,EAAMhF,QAAQE,aAN1C,uBAYA,QAEN,8BACG0K,EAAQtD,KAAI,SAACtH,GACZ,OACE,eAAC2K,EAAD,CACEE,YAAa7F,EAAM6F,YACnB7K,QAASA,EACTK,QAAS2E,EAAM3E,QAEflB,QAAS6F,EAAM7F,QACfgL,kBAAmBnF,EAAMmF,kBACzBE,aAAcrF,EAAMqF,aACpBD,eAAgBpF,EAAMoF,eACtBE,gBAAiBtF,EAAMsF,gBACvBC,oBAAqBvF,EAAMuF,oBAC3BC,mBAAoBxF,EAAMwF,mBAC1BC,cAAezF,EAAMyF,cACrBC,oBAAqB1F,EAAM0F,qBATtB1K,EAAQE,qBAmBzB,sBAAI+E,UAAU,QAAd,UACE,qBAAGA,UAAU,mBAAb,UACE,yBACEE,QAAS,kBAAMH,EAAM0F,oBAAoB1F,EAAMhF,QAAQE,aADzD,SAGG8E,EAAMhF,QAAQ6E,KAAO,WAAQ,QAEhC,eAAC,KAAD,CAAMI,UAAU,iCAAiCC,GAAE,iBAAYF,EAAMhF,QAAQ0H,UAA7E,SACO1C,EAAMhF,QAAQ0H,WAEpBjC,GAAUT,EAAMhF,QAAQyH,SAE1BzC,EAAMhF,QAAQ6E,KAAOiG,EAAiB,OAZd9F,EAAMhF,QAAQE,eCyJ9BqE,I,MAAAA,aAxCS,SAACC,GAAD,MAAY,CAClClC,MAAOkC,EAAMlC,MAAMA,MACnBI,KAAM8B,EAAMlC,MAAMI,KAClBK,SAAUyB,EAAMzB,SAASA,SACzBU,OAAQe,EAAMf,OAAOA,OACrBtE,QAASqF,EAAMoC,MAAMzH,YAGI,SAACO,GAC1B,MAAO,CACL2L,gBAAiB,SAAC3I,GAChBhD,EAASqF,GAAsBrC,KAEjC4I,gBAAiB,SAACjL,GAChBX,EAASqF,GAAsB1E,KAEjCkL,aAAc,SAACC,EAAanL,GAC1BX,ElBzRoB,SAAC8L,EAAanL,GACtC,OAAO,SAACX,GACNA,EAASR,GAAW,IAEpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,iBAAyB,CAC5BoB,OAAQ,OACRC,KAAMC,KAAKC,UAAL,2BAAoB2K,GAApB,IAAiCnL,aACvCS,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAIL,GAHAC,QAAQC,IAAIF,GAGRA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EAASK,EAAWoB,EAAKnB,UAEzBN,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASR,GAAW,IACpBQ,EAASd,EAASC,EAAM0C,ckB2PjBwD,CAAmByG,EAAanL,KAE3CoL,aAAc,SAACpL,EAAS0B,EAASC,GAC/BtC,EjBnFoB,SAACW,EAAS0B,EAASC,GAC3C,OAAO,SAACtC,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,kBAAkBe,EAAlB,WAAoC,CACvCK,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAER,YACvBS,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBkD,EAAQK,KAAR,kBAAwBJ,IAExBtC,EAASR,GAAW,IACpBQ,EAASV,EAAWmC,EAAKI,aAE1BC,OAAM,SAAC3C,GACNa,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,QiBwDb6F,CAAmB1E,EAAS0B,EAASC,KAEhD0J,iBAAkB,SAAC9J,GACjBlC,EAASqF,GAAuBnD,KAElC+J,gBAAiB,SAACnF,GAChB9G,EjBhDuB,SAAC8G,EAAOnG,GACnC,MAAO,CACLvB,KAAMC,EACNyH,QACAnG,WiB4CW0E,CAAsByB,KAEjCoF,WAAY,SAACxL,EAAMC,GACjBX,EjB1CkB,SAACU,EAAMC,GAC7B,OAAO,SAACX,GACNA,EAASR,GAAW,IACpB,IAAMqB,EAAQZ,aAAaa,QAAQ,SACnCC,MAAM,GAAD,OAAInB,EAAJ,kBAAkBe,EAAlB,SAAkC,CACrCK,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CAAET,OAAMC,YAC7BS,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAIvBa,EAASsD,MAETtD,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACNa,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,QiBgBb6F,CAAiB3E,EAAMC,KAElC0G,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,KAE5C6F,WAAY,SAAC5H,GACXtC,EAASqF,GAAiB/C,QAKjBuC,EAlTF,SAACS,GACZ,MAA2B6E,cAAnBxJ,EAAR,EAAQA,QAAS2B,EAAjB,EAAiBA,MAEbD,EAAUyG,cAEdpE,qBAAU,WAEHY,EAAMtC,KAAKrC,SAAW2E,EAAMtC,KAAKrC,UAAY2H,OAAO3H,IACvD2E,EAAMsG,gBAAgBjL,EAAS2B,EAAOD,GAKtCiD,EAAMtC,KAAKrC,SACX2E,EAAMtC,KAAKrC,UAAY2H,OAAO3H,IAC9B2E,EAAMtC,KAAKV,QAAUA,GAErBD,EAAQ8J,QAAR,kBAA2B7G,EAAMtC,KAAKV,MAAtC,YAA+C3B,IAIjD,IAAMyJ,EAAa9E,EAAMvB,OAAOsG,WAC9B,SAAC/H,GAAD,OAAWA,EAAM8B,OAASkB,EAAMtC,KAAKV,SAInCgD,EAAMtC,KAAKV,QAAyB,IAAhB8H,GACtB9E,EAAM4E,WAAW5E,EAAMtC,KAAKV,OAI1BgD,EAAMtC,KAAKV,QAAyB,IAAhB8H,GACtB9E,EAAM+B,cACJ,EACA/B,EAAMvB,OAAOqG,GAAYhG,KACzBkB,EAAMvB,OAAOqG,GAAY/F,eAK5B,CAAC1D,EAAS2E,EAAMtC,KAAKV,MAAOgD,EAAMvB,SAErCW,qBAAU,cAEP,CAAC/D,IAGJ,IAKIyL,EAAc,GAGlB,GAAI9G,EAAMtC,KAAKrC,SAAW2H,OAAOhD,EAAMtC,KAAKrC,WAAa2H,OAAO3H,GAAU,CACxE,IAAI0L,EAAqB,KACnBC,EAAa,iCAInB,GAHA5K,QAAQC,MAGJ2D,EAAMtC,KAAKtC,KAAK6L,SAAS,cAAe,CAC1C,IAAMC,EAAOlH,EAAMtC,KAAKtC,KAAKyL,QAAQ,aAAc,IAInD,GAHAzK,QAAQC,IAAI2K,EAAWG,KAAKD,IAGxBA,EAAKD,SAAS,gBAAkBC,EAAKD,SAAS,YAAa,CAC7D,IACM1F,EAAK2F,EAAKE,MADE,mBAIZ3E,EAAOyE,EAAKE,MADE,uBAEhBC,EAAQ,GAKZ,GAJI5E,IACF4E,EAAQ5E,EAAK,GAAGxF,MAAM,KAAK,IAGzBsE,EAAI,CACN,IAAM+F,EAAG,wCAAoC/F,EAAG,GAAvC,kBAAmD8F,GAE5DN,EACE,yBACEO,IAAKA,EACL9E,MAAOxC,EAAMtC,KAAK8E,MAClB+E,YAAY,IACZC,MAAM,2FACNC,iBAAe,UAMrBV,EAFSC,EAAWG,KAAKD,GAGvB,sBACEI,IAAKtH,EAAMtC,KAAKtC,KAAKyL,QAAQ,aAAc,IAC3Ca,IAAK1H,EAAMtC,KAAK8E,QAMlB,oBAAGmF,KAAM3H,EAAMtC,KAAKtC,KAAKyL,QAAQ,aAAc,IAA/C,SACG7G,EAAMtC,KAAKtC,KAAKyL,QAAQ,aAAc,WAK7CE,EAAqB,6BAAI/G,EAAMtC,KAAKtC,OAItC0L,EACE,uBAAK7G,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,SACE,eAAC,GAAD,CACE5E,QAAS2E,EAAMtC,KAAKrC,QACpB6F,MAAOlB,EAAMtC,KAAKwD,MAClBD,UAAWjB,EAAMtC,KAAKuD,UACtB9C,aAAa,MAGjB,uBAAK8B,UAAU,eAAf,UACE,sBAAKA,UAAU,aAAf,SACE,eAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMtC,KAAKV,MAAxB,YAAiCgD,EAAMtC,KAAKrC,SAApD,SACG2E,EAAMtC,KAAK8E,UAGhB,qBAAGvC,UAAU,gBAAb,uBACaQ,GAAUT,EAAMtC,KAAK+E,MADlC,MAC4C,IAC1C,eAAC,KAAD,CACExC,UAAU,sBACVC,GAAE,iBAAYF,EAAMtC,KAAKgF,UAF3B,SAIG1C,EAAMtC,KAAKgF,cAGf1C,EAAMtC,KAAKqI,QACV,wBAAM9F,UAAU,iBAAiB0D,SA1FpB,SAACjC,GACtBA,EAAEkC,iBACF5D,EAAM4G,WAAW5G,EAAMtC,KAAKtC,KAAM4E,EAAMtC,KAAKrC,UAwFrC,UACE,wBAAOiG,QAAQ,WAAWlB,aAAW,cACrC,2BACEmB,GAAG,WACHzC,KAAK,OACL0C,MAAOxB,EAAMtC,KAAKtC,KAAKwM,WACvBnG,SAAU,SAACC,GAAD,OAAO1B,EAAM2G,gBAAgBjF,EAAEC,OAAOH,UAElD,iCACE,yBACEvB,UAAU,eACVnG,KAAK,SACLiK,WAAU/D,EAAM7F,SAAU,WAH5B,oBAOA,yBACE8F,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBAAMH,EAAM0G,kBAAiB,IALxC,0BAYJ,sBAAKzG,UAAU,YAAf,SAA4B8G,IAE9B,eAACd,GAAD,CAAahB,WAAYjF,EAAMtC,KAAKlD,QAApC,SACE,uBAAKyF,UAAU,kBAAf,UACE,yBACEnG,KAAK,SACLsG,aAAW,cACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBAAMH,EAAMyG,aAAapL,EAAS0B,EAASC,IAJtD,oBAQA,yBACElD,KAAK,SACLsG,aAAW,YACX2D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAAS,kBAAMH,EAAM0G,oBAJvB,6BAeZ,MAAsCzE,mBAAS,CAC7C7G,KAAM,KADR,oBAAOoL,EAAP,KAAoBqB,EAApB,KAQMC,EAHmB9H,EAAMjC,SAASoD,QAAO,SAACnG,GAAD,OAAcA,EAAQM,UAG5BgH,KAAI,SAACtH,GAC5C,OACE,eAAC,GAAD,CACE6K,YAAa7F,EAAMjC,SACnB/C,QAASA,EAETK,QAASA,GADJL,EAAQE,eAyBnB,OACE,qCACG4L,EACC9G,EAAMtC,KAAKrC,SAAW2E,EAAMtC,KAAKrC,UAAY2H,OAAO3H,GACpD,uBAAK4E,UAAU,mBAAf,UACE,2CACA,eAAC,GAAD,UACE,wBAAMA,UAAU,mBAAmB0D,SAjBxB,SAACjC,GACpBA,EAAEkC,iBACF5D,EAAMuG,aAAaC,EAAanL,GAGhCwM,EAAe,CACbzM,KAAM,MAWA,UACE,iCACE,wBAAOkG,QAAQ,aAAalB,aAAW,gBACvC,2BACEtB,KAAK,OACLyC,GAAG,aACH6E,YAAY,cACZ5E,MAAOgF,EAAYpL,KACnBqG,SAjCI,SAACC,GACnBmG,EAAe,2BACVrB,GADS,mBAEX9E,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UA+BdqC,UAAQ,OAGZ,yBACE5D,UAAU,eACVnG,KAAK,SACLsG,aAAW,SACX2D,WAAU/D,EAAM7F,SAAU,WAJ5B,yBAUJ,8BAAK2N,OA1BwD,YCnMxDvI,I,MAAAA,aAfS,SAACC,GAAD,MAAY,CAClCf,OAAQe,EAAMf,OAAOA,WAGI,SAAC/D,GAC1B,MAAO,CACLqN,YAAa,WACXrN,EAASqF,OAEXgC,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,QAKjCQ,EA3CA,SAACS,GACdZ,qBAAU,WAERY,EAAM+H,cAGN/H,EAAM+B,cAAa,EAAM,GAAI,MAG5B,IAEH,IAAMiG,EAAgBhI,EAAMvB,OAAO6D,KAAI,SAACtF,GACtC,OACE,gCACE,eAAC,KAAD,CAAMkD,GAAE,kBAAalD,EAAM8B,MAA3B,SAAoC9B,EAAM8B,OAC1C,6BAAI9B,EAAM+B,gBAFH/B,EAAMiL,aAOnB,OACE,qCACE,qBAAIhI,UAAU,aAAd,oBACA,qBAAIA,UAAU,cAAd,SAA6B+H,WCbpBzI,gBAJS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAGNF,EAbE,SAACS,GAEhB,OAAKA,EAAMP,OAGF,KAFA,eAAC,IAAMkD,SAAP,UAAiB3C,EAAMkF,cC0InB3F,I,MAAAA,aAvBS,SAACC,GAAD,MAAY,CAClCG,QAASH,EAAMG,QAAQA,QACvBE,KAAML,EAAMG,QAAQE,KACpB1F,QAASqF,EAAMoC,MAAMzH,YAGI,SAACO,GAC1B,MAAO,CACLoF,gBAAiB,WACfpF,EAASqF,OAEXmI,aAAc,WACZxN,EAASqF,MAEXmE,mBAAoB,WAClBxJ,EAASqF,MAEXqD,sBAAuB,WACrB1I,EAASqF,SAKAR,EAxIC,SAACS,GACf,MAA4BiC,mBAAS,IAArC,oBAAOkG,EAAP,KAAeC,EAAf,KAOIrL,EAAUyG,cAWd,OACE,yBACEvD,UAAS,kBAAaD,EAAMH,KAAO,OAAS,IAC5CM,QAASH,EAAMF,gBAFjB,UAIE,uBAAM6D,SAbiB,SAACjC,GAC1BA,EAAEkC,iBAEF7G,EAAQK,KAAR,oBAA0B+K,IAE1BC,EAAU,KAQR,SACE,uBAAKnI,UAAU,aAAf,UACE,wBAAOqB,QAAQ,WACf,wBACExH,KAAK,OACLgF,KAAK,SACLyC,GAAG,SACH6E,YAAY,SACZ5E,MAAO2G,EACP1G,SA7BU,SAACC,GACnB0G,EAAU1G,EAAEC,OAAOH,QA6BXqC,UAAQ,EACR1D,QAAS,SAACuB,GACRA,EAAE2G,qBAGN,yBAAQvO,KAAK,SAASsG,aAAW,SAAjC,SACE,sBAAKC,MAAM,6BAA6BC,QAAQ,YAAhD,SACE,uBAAMC,EAAE,uMAKhB,uBAAKN,UAAU,gBAAf,UACE,eAAC,KAAD,CAAMC,GAAG,UAAT,oBACA,gBAAC,GAAD,WACE,eAAC,KAAD,CACEA,GAAI,CAAEhB,SAAU,WAAYM,MAAO,CAAExC,MAAOgD,EAAML,QAAQb,OAD5D,sBAKA,eAAC,KAAD,CACEoB,GAAI,CACFhB,SAAU,eACVM,MAAO,CAAExC,MAAOgD,EAAML,QAAQb,OAHlC,2BAQCkB,EAAML,QAAQd,OAAS,eAAC,KAAD,CAAMqB,GAAG,YAAT,uBAAwC,WAGpE,sBAAID,UAAU,aAAd,UACE,eAAC,GAAD,UACE,8BACE,yBACEA,UAAU,eACV8D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAASH,EAAMoD,sBACfhD,aAAW,WAJb,0BAUJ,eAAC,GAAD,UACE,8BACE,yBACEH,UAAU,eACV8D,WAAU/D,EAAM7F,SAAU,WAC1BgG,QAASH,EAAMkE,mBACf9D,aAAW,QAJb,uBAUJ,eAAC,GAAD,UACE,8BACE,yBACE2D,WAAU/D,EAAM7F,SAAU,WAC1B8F,UAAU,eACVE,QAASH,EAAMkI,aACf9H,aAAW,SAJb,2BAWN,uBAAKH,UAAU,gBAAf,UAC0B,KAAvBD,EAAML,QAAQb,KACb,eAAC,KAAD,CAAMoB,GAAE,kBAAaF,EAAML,QAAQb,MAAnC,SAA4CkB,EAAML,QAAQb,OACxD,KACJ,6BAAIkB,EAAML,QAAQZ,wBCaXQ,gBAtBS,SAACC,GAAD,MAAY,CAClClC,MAAOkC,EAAMlC,MAAMA,MACnBP,QAASyC,EAAMlC,MAAMP,QACrBwB,MAAOiB,EAAMlC,MAAMiB,MACnB4C,OAAQ3B,EAAMlC,MAAM6D,OACpBU,KAAMrC,EAAMlC,MAAMuE,SAGO,SAACnH,GAC1B,MAAO,CACL4N,iBAAkB,SAAC1K,EAAOW,EAAO4C,EAAQU,GACvCnH,ErBmLwB,SAACkD,EAAOW,EAAO4C,EAAQU,GACnD,OAAO,SAACnH,GACN,GAAa,cAATmH,EAAJ,CAIAnH,EAASR,GAAW,IAEf2H,GACHnH,EAAS2C,GAAU,KAGrB,IAAMkL,EAAI3K,EAGJrC,EAAQZ,aAAaa,QAAQ,SAEnC,GADAoC,GAAK,iBAAcW,EAAd,mBAA8B4C,EAA9B,mBAAgDU,EAAkB,GAAPA,EAAJ,GACxDtG,EAAO,CACT,IAAMf,EAAUqD,YAAWtC,GAAOuC,IAClCF,GAAK,mBAAgBpD,GAGvBiB,MAAM,GAAD,OAAInB,EAAJ,2BAA2BsD,IAC7B5B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAOrBa,EAHGmH,EAGMrE,GAAcrB,EAAKmB,MAAO,WAAaiL,GAFvClL,GAAUlB,EAAKmB,MAAO,WAAaiL,IAI9C7N,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACgB,mBAAlBA,EAAM0C,SACR7B,EAAS2C,GAAU,GAAI,WAAakL,IAEtC7N,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SqB9Nb6F,CAAuBnC,EAAOW,EAAO4C,EAAQU,KAExDE,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,KAE5CiD,YAAa,SAACzD,GACZ7D,EAASqF,GAAkBxB,QAKlBgB,EAxHK,SAACS,GACnB,IAAMsE,EAAWnF,cAGXvB,EADS,IAAI4K,gBAAgBlE,EAAS6D,QACvBM,IAAI,KAEzB,EAA4BxG,oBAAS,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KAGA/C,qBAAU,WACJ8C,IAAWlC,EAAM1C,MAAM8E,OAAS,IAAqB,cAAfpC,EAAM6B,MAE9C7B,EAAMgC,YAAYhC,EAAMzB,OACf2D,GAETlC,EAAMsI,iBAAiB1K,EAAOoC,EAAMzB,MAAOyB,EAAMmB,UAGlD,CAACnB,EAAMzB,QAEVa,qBAAU,WAEJ8C,GACFlC,EAAMsI,iBAAiB1K,EAAOoC,EAAMzB,MAAOyB,EAAMmB,UAIlD,CAACnB,EAAMmB,SAEV/B,qBAAU,WAEJY,EAAMjD,UAAY,WAAaa,GACjCoC,EAAMsI,iBAAiB1K,EAAOoC,EAAMzB,MAAOyB,EAAMmB,QAEnDgB,GAAU,GAGVnC,EAAM+B,cAAa,EAAM,GAAI,MAG5B,CAACnE,IAEJ,IAAMyE,EAAerC,EAAM1C,MAAMgF,KAAI,SAAC5E,EAAM6E,GAC1C,OACE,gCACE,sBAAKtC,UAAU,cAAf,SACE,6BAAIsC,EAAQ,MAEd,sBAAKtC,UAAU,aAAf,SACE,eAAC,GAAD,CACE5E,QAASqC,EAAKrC,QACd6F,MAAOxD,EAAKwD,MACZD,UAAWvD,EAAKuD,cAGpB,iCACE,sBAAKhB,UAAU,aAAf,SACE,eAAC,KAAD,CAAMC,GAAE,kBAAaxC,EAAKV,MAAlB,YAA2BU,EAAKrC,SAAxC,SACGqC,EAAK8E,UAGV,qBAAGvC,UAAU,gBAAb,uBACaQ,GAAU/C,EAAK+E,MAD5B,MACsC,IACpC,eAAC,KAAD,CAAMxC,UAAU,gBAAgBC,GAAE,iBAAYxC,EAAKgF,UAAnD,SACGhF,EAAKgF,WACA,IAJV,MAKK,eAAC,KAAD,CAAMxC,GAAE,kBAAaxC,EAAKV,OAA1B,SAAoCU,EAAKV,gBAtBzCU,EAAKrC,YA6BlB,OACE,qCACG2E,EAAMjD,UAAY,WAAaa,EAC9B,gBAAC,IAAM+E,SAAP,WACE,sBAAI1C,UAAU,aAAd,qBAAoCrC,KACpC,eAAC,GAAD,IACA,qBAAIqC,UAAU,aAAd,SAA4BoC,OAE5B,KACY,cAAfrC,EAAM6B,MAAwB7B,EAAM1C,MAAM8E,QAAU,GACnD,sBACEnC,UAAU,YACVE,QAAS,kBACPH,EAAMsI,iBAAiB1K,EAAOoC,EAAMzB,MAAOyB,EAAMmB,OAAQnB,EAAM6B,OAHnE,SAME,yBAAQ5B,UAAU,eAAeG,aAAW,kBAA5C,0BAIA,WC5CKb,I,MAAAA,aAlBS,SAACC,GACvB,MAAO,CACL3F,MAAO2F,EAAMoC,MAAM/H,MACnBQ,QAASmF,EAAMoC,MAAMvH,YAIE,SAACK,GAC1B,MAAO,CACLqG,WAAY,SAAClH,GACXa,EAASqF,EAAiBlG,KAE5B6O,aAAc,SAACrO,GACbK,EAASqF,EAAmB1F,QAKnBkF,EApDI,SAACS,GAClB,IAAI2I,EAAe,KA8BnB,OA5BAvJ,qBAAU,WAERwJ,aAAa5I,EAAM3F,SAWC,KAAhB2F,EAAMnG,OAPRmG,EAAM0I,aACJtO,YAAW,WACT4F,EAAMe,WAAW,MAChB,QASN,CAACf,EAAMnG,QAEU,KAAhBmG,EAAMnG,QACR8O,EACE,sBAAK1I,UAAU,cAAcE,QAAS,kBAAMH,EAAMe,WAAW,KAA7D,SACE,8BAAKf,EAAMnG,WAKV8O,MCmBMpJ,gBAlBS,SAACC,GACvB,MAAO,CACLvF,QAASuF,EAAMoC,MAAM3H,QACrBI,QAASmF,EAAMoC,MAAMvH,YAIE,SAACK,GAC1B,MAAO,CACLmO,aAAc,SAAC5O,GACbS,EAASqF,EAAmB9F,KAE9ByO,aAAc,SAACrO,GACbK,EAASqF,EAAmB1F,QAKnBkF,EAnDM,SAACS,GACpB,IAAI8I,EAAiB,KA6BrB,OA3BA1J,qBAAU,WAERwJ,aAAa5I,EAAM3F,SAWG,KAAlB2F,EAAM/F,SAPR+F,EAAM0I,aACJtO,YAAW,WACT4F,EAAM6I,aAAa,MAClB,QASN,CAAC7I,EAAM/F,UAEY,KAAlB+F,EAAM/F,UACR6O,EACE,sBAAK7I,UAAU,gBAAgBE,QAAS,kBAAMH,EAAM6I,aAAa,KAAjE,SACE,8BAAK7I,EAAM/F,aAIV6O,KCFMvJ,gBAVS,SAACC,GACvB,MAAO,CACLrF,QAASqF,EAAMoC,MAAMzH,YAIE,SAACO,GAC1B,MAAO,KAGM6E,EA5BM,SAACS,GACpB,IAAI2I,EAAe,KAcnB,OAbI3I,EAAM7F,UACRwO,EACE,sBAAK1I,UAAU,gBAAf,SACE,uBAAKA,UAAU,eAAf,UACE,yBACA,yBACA,yBACA,+BAMD0I,KC+FMpJ,gBAvBS,SAACC,GAAD,MAAY,CAClClC,MAAOkC,EAAMlC,MAAMA,MACnBnD,QAASqF,EAAMoC,MAAMzH,QACrB4C,QAASyC,EAAMlC,MAAMP,QACrBwB,MAAOiB,EAAMlC,MAAMiB,MACnB4C,OAAQ3B,EAAMlC,MAAM6D,OACpBU,KAAMrC,EAAMlC,MAAMuE,SAGO,SAACnH,GAC1B,MAAO,CACLqO,eAAgB,SAACrG,EAAUnE,EAAO4C,EAAQU,GACxCnH,EzBkPsB,SAACgI,EAAUnE,EAAO4C,EAAQU,GACpD,OAAO,SAACnH,GACN,GAAa,cAATmH,EAAJ,CAIAnH,EAASR,GAAW,IAEf2H,GACHnH,EAAS2C,GAAU,KAIrB,IAAM9B,EAAQZ,aAAaa,QAAQ,SAC/BoC,EAAK,iBAAaW,EAAb,mBAA6B4C,EAA7B,mBACNU,EAAkB,GAAPA,EAAJ,GAEV,GAAItG,EAAO,CACT,IAAMf,EAAUqD,YAAWtC,GAAOuC,IAClCF,GAAK,mBAAgBpD,GAGvBiB,MAAM,GAAD,OAAInB,EAAJ,uBAAuBoI,GAAvB,OAAkC9E,IACpC5B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEL,GAAIA,EAAKtC,MACP,MAAM,IAAIyC,MAAMH,EAAKtC,OAOrBa,EAHGmH,EAGMrE,GAAcrB,EAAKmB,MAAO,aAAeoF,GAFzCrF,GAAUlB,EAAKmB,MAAO,aAAeoF,IAKhDhI,EAASR,GAAW,OAErBsC,OAAM,SAAC3C,GACgB,mBAAlBA,EAAM0C,SACR7B,EAAS2C,GAAU,GAAI,aAAeqF,IAExChI,EAASd,EAASC,EAAM0C,UACxB7B,EAASR,GAAW,SyB9Rb6F,CAAqB2C,EAAUnE,EAAO4C,EAAQU,KAEzDE,aAAc,SAAClD,EAAQC,EAAMC,GAC3BrE,EAASqF,GAAmBlB,EAAQC,EAAMC,KAE5CiD,YAAa,SAACzD,GACZ7D,EAASqF,GAAkBxB,QAKlBgB,EA1GG,SAACS,GACjB,IAAQ0C,EAAamC,cAAbnC,SAER,EAA4BT,oBAAS,GAArC,oBAAOC,EAAP,KAAeC,EAAf,KAGA/C,qBAAU,WACJ8C,IAAWlC,EAAM1C,MAAM8E,OAAS,IAAqB,cAAfpC,EAAM6B,MAE9C7B,EAAMgC,YAAYhC,EAAMzB,OACf2D,GAETlC,EAAM+I,eAAerG,EAAU1C,EAAMzB,MAAOyB,EAAMmB,UAGnD,CAACnB,EAAMzB,QAEVa,qBAAU,WAEJ8C,GACFlC,EAAM+I,eAAerG,EAAU1C,EAAMzB,MAAOyB,EAAMmB,UAInD,CAACnB,EAAMmB,SAEV/B,qBAAU,WAGNY,EAAMjD,UAAY,aAAe2F,GAEjC1C,EAAM+I,eAAerG,EAAU1C,EAAMzB,MAAOyB,EAAMmB,QAEpDgB,GAAU,GAGVnC,EAAM+B,cAAa,EAAM,GAAI,MAG5B,CAACW,IAEJ,IAAML,EAAerC,EAAM1C,MAAMgF,KAAI,SAAC5E,EAAM6E,GAC1C,OACE,gCACE,sBAAKtC,UAAU,cAAf,SACE,6BAAIsC,EAAQ,MAEd,sBAAKtC,UAAU,aAAf,SACE,eAAC,GAAD,CACE5E,QAASqC,EAAKrC,QACd6F,MAAOxD,EAAKwD,MACZD,UAAWvD,EAAKuD,cAGpB,iCACE,sBAAKhB,UAAU,aAAf,SACE,eAAC,KAAD,CAAMC,GAAE,kBAAaxC,EAAKV,MAAlB,YAA2BU,EAAKrC,SAAxC,SACGqC,EAAK8E,UAGV,qBAAGvC,UAAU,gBAAb,uBACaQ,GAAU/C,EAAK+E,MAD5B,MACsC,IACpC,uBAAMxC,UAAU,gBAAhB,SAAiCvC,EAAKgF,WAFxC,MAE4D,IAC1D,eAAC,KAAD,CAAMxC,GAAE,kBAAaxC,EAAKV,OAA1B,SAAoCU,EAAKV,gBApBtCU,EAAKrC,YA2BlB,OACE,0BAAS4E,UAAU,OAAnB,SACGD,EAAMjD,UAAY,aAAe2F,EAChC,gBAAC,IAAMC,SAAP,WACE,qBAAI1C,UAAU,aAAd,SAA4ByC,IAC5B,eAAC,GAAD,IACA,qBAAIzC,UAAU,aAAd,SAA4BoC,OAE5B,UCMK9C,gBAVS,SAACC,GAAD,MAAY,MAET,SAAC9E,GAC1B,MAAO,CACL0J,UAAW,SAACtH,EAAUC,GACpBrC,EAASqF,GAAgBjD,EAAUC,QAK1BwC,EAvFK,SAACS,GACnB,IAAIjD,EAAUyG,cAEd,EAAgCvB,mBAAS,CACvCO,MAAO,GACPpH,KAAM,GACN4B,MAAO,KAHT,oBAAOF,EAAP,KAAiBuH,EAAjB,KAMAjF,qBAAU,WAEJrC,EAAQuH,SAAS9E,OACnB6E,EAAY,2BACPvH,GADM,IAETE,MAAOD,EAAQuH,SAAS9E,MAAMxC,WAIjC,IAGH,IAAMyG,EAAc,SAAC/B,GACnB2C,EAAY,2BACPvH,GADM,mBAER4E,EAAEC,OAAO7C,KAAO4C,EAAEC,OAAOH,UAW9B,OACE,qCACE,qBAAIvB,UAAU,aAAd,2BACA,wBAAMA,UAAU,0BAA0B0D,SATzB,SAACjC,GACpBA,EAAEkC,iBACF9G,EAAS1B,KAAO,aAAe0B,EAAS1B,KACxC4E,EAAMoE,UAAUtH,EAAUC,IAMxB,UACE,iCACE,wBAAOuE,QAAQ,QAAf,oBACA,wBACExH,KAAK,OACLgF,KAAK,QACL0C,MAAO1E,EAAS0F,MAChBf,SAAUgC,EACVI,UAAQ,OAGZ,iCACE,wBAAOvC,QAAQ,OAAf,4CACA,wBACExH,KAAK,OACLgF,KAAK,OACL0C,MAAO1E,EAAS1B,KAChBqG,SAAUgC,EACVI,UAAQ,OAGZ,iCACE,wBAAOvC,QAAQ,QAAf,oBACA,wBACExH,KAAK,OACLgF,KAAK,QACL0C,MAAO1E,EAASE,MAChByE,SAAUgC,EACVI,UAAQ,OAGZ,yBAAQ5D,UAAU,eAAenG,KAAK,SAASsG,aAAW,SAA1D,6BC7DO4I,I,MATM,WACnB,OACE,uBAAK/I,UAAU,iBAAf,UACE,iDACA,eAAC,KAAD,CAAMC,GAAG,IAAT,8BCkGSX,gBAfS,SAACC,GACvB,MAAO,CACLyJ,cAAezJ,EAAME,KAAKuJ,cAC1BC,WAAY1J,EAAME,KAAKwJ,eAIA,SAACxO,GAC1B,MAAO,CACLyO,YAAa,SAAC3O,GACZE,EAASqF,EAAkBvF,QAKlB+E,EAjFH,SAACS,GAgBX,OARAZ,qBAAU,WACR,GAPiB,WACjB,IAAMgK,EAAazO,aAAaa,QAAQ,WACxC,OAAO4N,GAAcpG,OAAOoG,GAAcxI,KAAKC,MAK3CwI,GAAc,CAChB,IAAMnG,EAAUrF,YAAWlD,aAAaa,QAAQ,UAChDwE,EAAMmJ,YAAYjG,EAAQpF,QAG3B,IAGD,uBAAKmC,UAAU,MAAf,UACE,eAAChB,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,uBAAKgB,UAAU,YAAf,UACE,gCACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOqJ,KAAK,IAAIC,OAAK,EAArB,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOA,KAAK,UAAUC,OAAK,EAA3B,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,iBAAiBC,OAAK,EAAlC,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,0BAA0BC,OAAK,EAA3C,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,eAAC,GAAD,WAILtJ,EAAMiJ,cAAgB,eAAC,GAAD,IAAe,KACrCjJ,EAAMkJ,WAAa,eAAC,GAAD,IAAY,KAChC,eAAC,GAAD,a,kBCnFFM,GAAe,CACnB/J,QAAQ,EACRjF,QAAS,KACTyO,eAAe,EACfC,YAAY,GAGR3O,GAAY,SAACiF,EAAOiK,GACxB,OAAO,2BACFjK,GADL,IAEEC,QAAQ,EACRjF,QAASiP,EAAOjP,WAIdkP,GAAc,SAAClK,EAAOiK,GAC1B,OAAO,2BACFjK,GADL,IAEEC,QAAQ,EACRjF,QAAS,QAIPK,GAAsB,SAAC2E,EAAOiK,GAClC,OAAO,2BACFjK,GADL,IAEEyJ,eAAgBzJ,EAAMyJ,iBAIpBnO,GAAmB,SAAC0E,EAAOiK,GAC/B,OAAO,2BACFjK,GADL,IAEE0J,YAAa1J,EAAM0J,cAmBRS,GAfC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAOQ,GAAUiF,EAAOiK,GAC1B,KAAK1P,EACH,OAAO2P,GAAYlK,GACrB,KAAKzF,EACH,OAAOc,GAAoB2E,GAC7B,KAAKzF,EACH,OAAOe,GAAiB0E,GAC1B,QACE,OAAOA,I,kBChDPgK,GAAe,CACnBlM,MAAO,GACPI,KAAM,GACNX,QAAS,KACTwB,MAAO,OACP4C,OAAQ,MACRU,KAAM,GAGF+H,GAAe,SAACpK,EAAOiK,GAC3B,OAAO,2BACFjK,GADL,IAEEzC,QAAS,QAIPM,GAAY,SAACmC,EAAOiK,GACxB,OAAO,2BACFjK,GADL,IAEElC,MAAOmM,EAAOnM,MACdP,QAAS0M,EAAOlM,SAChBsE,KAAM,KAIJrE,GAAgB,SAACgC,EAAOiK,GAC5B,IAAI5H,EAAOrC,EAAMqC,KASjB,OAN4B,KAAxB4H,EAAOnM,MAAM8E,OACfP,EAAO,YAEPA,GAAQ,EAGH,2BACFrC,GADL,IAEElC,MAAM,GAAD,oBAAMkC,EAAMlC,OAAZ,aAAsBmM,EAAOnM,QAClCP,QAAS0M,EAAOlM,SAChBsE,UAIEpE,GAAgB,SAAC+B,EAAOiK,GAC5B,OAAO,2BACFjK,GADL,IAEE9B,KAAK,2BAAM+L,EAAO/L,MAAd,IAAoBqI,SAAS,OAI/B/H,GAAiB,SAACwB,EAAOiK,GAC7B,IAAM/L,EAAI,eAAQ8B,EAAM9B,MAaxB,OAVAA,EAAKqI,SAAWrI,EAAKqI,QAGjB0D,EAAO7M,WACTc,EAAKtC,KAAOsC,EAAKmM,UAInBnM,EAAKmM,SAAWnM,EAAKtC,KAEd,2BACFoE,GADL,IAEE9B,UAIEoM,GAAgB,SAACtK,EAAOiK,GAC5B,IAAM/L,EAAI,eAAQ8B,EAAM9B,MAIxB,OAFAA,EAAKtC,KAAOqO,EAAOjI,MAEZ,2BACFhC,GADL,IAEE9B,UAIEW,GAAc,SAACmB,EAAOiK,GAC1B,IADqC,EAC/BnM,EAAQ,GADuB,eAEpBkC,EAAMlC,OAFc,IAErC,2BAA8B,CAAC,IAAtBI,EAAqB,QAC5BJ,EAAMF,KAAN,eAAgBM,KAHmB,8BAMrC,IAAM6E,EAAQjF,EAAMyH,WAAU,SAACrH,GAAD,OAAUA,EAAKrC,UAAYoO,EAAOpO,WAGhEiC,EAAMiF,GAAOtB,UAAYwI,EAAOvL,KAGhC,IAAM6L,EAAevK,EAAMlC,MAAMiF,GAAOtB,UAYxC,OAVqB,IAAjB8I,IAAuC,IAAjBN,EAAOvL,KAC/BZ,EAAMiF,GAAOrB,OAAS,GACK,IAAlB6I,GAAuC,IAAhBN,EAAOvL,KACvCZ,EAAMiF,GAAOrB,OAAS,EACI,IAAjB6I,IAAuC,IAAjBN,EAAOvL,KACtCZ,EAAMiF,GAAOrB,OAAS,GACK,IAAlB6I,GAAuC,IAAhBN,EAAOvL,OACvCZ,EAAMiF,GAAOrB,OAAS,GAGjB,2BACF1B,GADL,IAEElC,WAIEc,GAAoB,SAACoB,EAAOiK,GAChC,IAAM/L,EAAI,eAAQ8B,EAAM9B,MAGxBA,EAAKuD,UAAYwI,EAAOvL,KAGxB,IAAM6L,EAAevK,EAAM9B,KAAKuD,UAYhC,OAVqB,IAAjB8I,IAAuC,IAAjBN,EAAOvL,KAC/BR,EAAKwD,OAAS,GACa,IAAlB6I,GAAuC,IAAhBN,EAAOvL,KACvCR,EAAKwD,OAAS,EACY,IAAjB6I,IAAuC,IAAjBN,EAAOvL,KACtCR,EAAKwD,OAAS,GACa,IAAlB6I,GAAuC,IAAhBN,EAAOvL,OACvCR,EAAKwD,OAAS,GAGT,2BACF1B,GADL,IAEE9B,UAIEsM,GAAc,SAACxK,EAAOiK,GAC1B,OAAO,2BACFjK,GADL,IAEEjB,MAAOkL,EAAOlL,SAIZ0L,GAAe,SAACzK,EAAOiK,GAC3B,OAAO,2BACFjK,GADL,IAEE2B,OAAQsI,EAAOtI,UAIb7C,GAAY,SAACkB,EAAOiK,GACxB,IAAInM,EAAK,aAAOkC,EAAMlC,OAGtB,OAAQmM,EAAOlL,OACb,IAAK,OACHjB,EAAQA,EAAM4M,MAAK,SAACC,EAAGC,GACrB,OAAOA,EAAElJ,MAAQiJ,EAAEjJ,SAErB,MACF,IAAK,QACH5D,EAAQA,EAAM4M,MAAK,SAACC,EAAGC,GACrB,OAAOD,EAAEjJ,MAAQkJ,EAAElJ,SAErB,MACF,IAAK,SACH5D,EAAQA,EAAM4M,MAAK,SAACC,EAAGC,GACrB,OAAO,IAAIxJ,KAAKwJ,EAAE3H,MAAQ,IAAI7B,KAAKuJ,EAAE1H,OAAS,EAAI,KAEpD,MACF,IAAK,SACHnF,EAAQA,EAAM4M,MAAK,SAACC,EAAGC,GACrB,OAAO,IAAIxJ,KAAKwJ,EAAE3H,MAAQ,IAAI7B,KAAKuJ,EAAE1H,OAAS,EAAI,KAOxD,OAAO,2BACFjD,GADL,IAEElC,MAAOA,KAiCIqM,GA7BC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAO6P,GAAapK,GACtB,KAAKzF,EACH,OAAOsD,GAAUmC,EAAOiK,GAC1B,KAAK1P,EACH,OAAOyD,GAAcgC,EAAOiK,GAC9B,KAAK1P,EACH,OAAO0D,GAAc+B,EAAOiK,GAC9B,KAAK1P,EACH,OAAOiE,GAAewB,EAAOiK,GAC/B,KAAK1P,EACH,OAAO+P,GAActK,EAAOiK,GAC9B,KAAK1P,EACH,OAAOsE,GAAYmB,EAAOiK,GAC5B,KAAK1P,EACH,OAAOqE,GAAkBoB,EAAOiK,GAClC,KAAK1P,EACH,OAAOiQ,GAAYxK,EAAOiK,GAC5B,KAAK1P,EACH,OAAOkQ,GAAazK,EAAOiK,GAC7B,KAAK1P,EACH,OAAOuE,GAAUkB,EAAOiK,GAC1B,QACE,OAAOjK,IClNPgK,GAAe,CACnB/K,OAAQ,IAGJ4L,GAAY,SAAC7K,EAAOiK,GACxB,OAAO,2BACFjK,GADL,IAEEf,OAAQgL,EAAOhL,UAIbE,GAAgB,SAACa,EAAOiK,GAC5B,IADuC,EACjChL,EAAS,GADwB,eAErBe,EAAMf,QAFe,IAEvC,2BAAgC,CAAC,IAAxBzB,EAAuB,QAC9ByB,EAAOrB,KAAP,eAAiBJ,KAHoB,8BAMvC,OAAO,2BACFwC,GADL,IAEEf,OAAO,GAAD,OAAMA,EAAN,CAAcgL,EAAOzM,WAehB2M,GAXC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAOsQ,GAAU7K,EAAOiK,GAC1B,KAAK1P,EACH,OAAO4E,GAAca,EAAOiK,GAC9B,QACE,OAAOjK,IC9BPgK,GAAe,CACnB7J,QAAS,CACPd,QAAQ,EACRC,KAAM,GACNC,YAAa,IAEfc,MAAM,GAGFjB,GAAa,SAACY,EAAOiK,GACzB,OAAO,2BACFjK,GADL,IAEEG,QAAS,CACPd,OAAQ4K,EAAO5K,OACfC,KAAM2K,EAAO3K,KACbC,YAAa0K,EAAO1K,gBAKpBC,GAAgB,SAACQ,EAAOiK,GAC5B,OAAO,2BACFjK,GADL,IAEEK,MAAOL,EAAMK,QAeF8J,GAXC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAO6E,GAAWY,EAAOiK,GAC3B,KAAK1P,EACH,OAAOiF,GAAcQ,GACvB,QACE,OAAOA,IClCPgK,GAAe,CACnBzL,SAAU,IAINuM,GAAoB,SAACvM,GACzB,IADsC,EAChCwM,EAAY,GADoB,eAElBxM,GAFkB,IAEtC,2BAA8B,CAAC,IAAtB/C,EAAqB,QAC5BuP,EAAUnN,KAAV,eAAoBpC,KAHgB,8BAKtC,OAAOuP,GAGHC,GAAwB,SAAChL,EAAOiK,GACpC,IAD+C,EACzC1L,EAAW0L,EAAO1L,SADuB,eAE3BA,GAF2B,IAE/C,2BAA8B,CAAC,IAAtB/C,EAAqB,QAC5BA,EAAQmL,MAAQ,GAChBnL,EAAQkL,WAAY,EACpBlL,EAAQ+K,SAAU,EAClB/K,EAAQ6E,MAAO,GAN8B,8BAQ/C,OAAO,2BACFL,GADL,IAEEzB,SAAU0L,EAAO1L,YAIfhD,GAAa,SAACyE,EAAOiK,GACzB,OAAO,2BACFjK,GADL,IAEEzB,SAAS,GAAD,oBACHyB,EAAMzB,UADH,4BAGD0L,EAAOzO,SAHN,IAIJmL,MAAO,GACPD,WAAW,EACXH,SAAS,EACTlG,MAAM,SAMR5E,GAAkB,SAACuE,EAAOiK,GAC9B,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAKpD,OAFA6C,EAASwE,GAAO2D,WAAanI,EAASwE,GAAO2D,UAEtC,2BACF1G,GADL,IAEEzB,cAIE0M,GAAa,SAACjL,EAAOiK,GACzB,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAKpD,OAFA6C,EAASwE,GAAO4D,MAAQsD,EAAOjI,MAExB,2BACFhC,GADL,IAEEzB,cAIE2M,GAAkB,SAAClL,EAAOiK,GAC9B,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAKpD,OAFA6C,EAASwE,GAAO4D,MAAQ,GAEjB,2BACF3G,GADL,IAEEzB,cAIErB,GAAoB,SAAC8C,EAAOiK,GAChC,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAQpD,OAJA6C,EAASwE,GAAOnH,KAAO,YACvB2C,EAASwE,GAAO/H,QAAU,GAC1BuD,EAASwE,GAAOG,SAAW,YAEpB,2BACFlD,GADL,IAEEzB,cAIEpB,GAAoB,SAAC6C,EAAOiK,GAChC,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAcpD,OAVA6C,EAASwE,GAAOwD,SAAWhI,EAASwE,GAAOwD,QAGvC0D,EAAO7M,WACTmB,EAASwE,GAAOnH,KAAO2C,EAASwE,GAAOsH,UAIzC9L,EAASwE,GAAOsH,SAAW9L,EAASwE,GAAOnH,KAEpC,2BACFoE,GADL,IAEEzB,cAIE4M,GAAmB,SAACnL,EAAOiK,GAC/B,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAKpD,OAFA6C,EAASwE,GAAOnH,KAAOqO,EAAOjI,MAEvB,2BACFhC,GADL,IAEEzB,cAIE6M,GAAoB,SAACpL,EAAOiK,GAChC,IAAM1L,EAAWuM,GAAkB9K,EAAMzB,UAEnCwE,EAAQxE,EAASgH,WACrB,SAAC/J,GAAD,OAAaA,EAAQE,aAAe8H,OAAOyG,EAAOvO,eAKpD,OAFA6C,EAASwE,GAAO1C,MAAQ9B,EAASwE,GAAO1C,KAEjC,2BACFL,GADL,IAEEzB,cA6BW4L,GAzBC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAOyQ,GAAsBhL,EAAOiK,GACtC,KAAK1P,EACH,OAAOgB,GAAWyE,EAAOiK,GAC3B,KAAK1P,EACH,OAAOkB,GAAgBuE,EAAOiK,GAChC,KAAK1P,EACH,OAAO0Q,GAAWjL,EAAOiK,GAC3B,KAAK1P,EACH,OAAO2Q,GAAgBlL,EAAOiK,GAChC,KAAK1P,EACH,OAAO2C,GAAkB8C,EAAOiK,GAClC,KAAK1P,EACH,OAAO4C,GAAkB6C,EAAOiK,GAClC,KAAK1P,EACH,OAAO4Q,GAAiBnL,EAAOiK,GACjC,KAAK1P,EACH,OAAO6Q,GAAkBpL,EAAOiK,GAClC,QACE,OAAOjK,ICrLPgK,GAAe,CACnBvP,QAAS,GACTJ,MAAO,GACPM,SAAS,EACTE,QAAS,MAGLT,GAAW,SAAC4F,EAAOiK,GACvB,OAAO,2BACFjK,GADL,IAEE3F,MAAO4P,EAAO5P,MACdI,QAAS,MAIPD,GAAa,SAACwF,EAAOiK,GACzB,OAAO,2BACFjK,GADL,IAEEvF,QAASwP,EAAOxP,QAChBJ,MAAO,MAILK,GAAa,SAACsF,EAAOiK,GAEzB,IAAMoB,EAAW,GAMjB,OALIpB,EAAOtP,UACT0Q,EAAShR,MAAQ,GACjBgR,EAAS5Q,QAAU,IAGd,uCACFuF,GACAqL,GAFL,IAGE1Q,QAASsP,EAAOtP,WAIdC,GAAa,SAACoF,EAAOiK,GACzB,OAAO,2BACFjK,GADL,IAEEnF,QAASoP,EAAOpP,WAmBLsP,GAfC,WAAmC,IAAlCnK,EAAiC,uDAAzBgK,GAAcC,EAAW,uCAChD,OAAQA,EAAO3P,MACb,KAAKC,EACH,OAAOH,GAAS4F,EAAOiK,GACzB,KAAK1P,EACH,OAAOC,GAAWwF,EAAOiK,GAC3B,KAAK1P,EACH,OAAOG,GAAWsF,EAAOiK,GAC3B,KAAK1P,EACH,OAAOK,GAAWoF,EAAOiK,GAC3B,QACE,OAAOjK,IC3CPsL,GAAmBzL,OAAO0L,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClCxL,KAAMA,GACNpC,MAAOA,GACPS,SAAUA,GACVU,OAAQA,GACRkB,QAASA,GACTiC,MAAOA,KAGHuJ,GAAQC,aACZH,GACAH,GAAiBO,aAAgBC,QAGnCC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,eAAC,KAAD,UACE,eAAC,GAAD,UAINO,SAASC,eAAe,W","file":"static/js/main.bdbbaf7f.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const TOGGLE_REGISTER_MODAL = \"TOGGLE_REGISTER_MODAL\";\nexport const TOGGLE_LOGIN_MODAL = \"TOGGLE_LOGIN_MODAL\";\n\nexport const RESET_HISTORY = \"RESET_HISTORY\";\nexport const LOAD_POSTS = \"LOAD_POSTS\";\nexport const LOAD_MORE_POSTS = \"LOAD_MORE_POSTS\";\nexport const SET_SINGLE_POST = \"SET_SINGLE_POST\";\nexport const TOGGLE_EDIT_POST = \"TOGGLE_EDIT_POST\";\nexport const EDIT_POST_INPUT = \"EDIT_POST_INPUT\";\nexport const SET_POST_VOTE = \"SET_POST_VOTE\";\nexport const SET_SINGLE_POST_VOTE = \"SET_SINGLE_POST_VOTE\";\nexport const CHANGE_ORDER = \"CHANGE_ORDER\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\nexport const SORT_POSTS = \"SORT_POSTS\";\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const TOGGLE_REPLY_FORM = \"TOGGLE_REPLY_FORM\";\nexport const COMMENT_REPLY = \"COMMENT_REPLY\";\nexport const REPLY_INPUT = \"REPLY_INPUT\";\nexport const RESET_REPLY_INPUT = \"RESET_REPLY_INPUT\";\nexport const SET_DELETED_COMMENT = \"SET_DELETED_COMMENT\";\nexport const TOGGLE_EDIT_COMMENT = \"TOGGLE_EDIT_COMMENT\";\nexport const EDIT_COMMENT_INPUT = \"EDIT_COMMENT_INPUT\";\nexport const TOGGLE_SHOW_COMMENT = \"TOGGLE_SHOW_COMMENT\";\nexport const SET_SINGLE_POST_COMMENTS = \"SET_SINGLE_POST_COMMENTS\";\n\nexport const SET_TOPICS = \"SET_TOPICS\";\nexport const SET_ADDED_TOPIC = \"SET_ADDED_TOPIC\";\n\nexport const SET_SIDEBAR = \"SET_SIDEBAR\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\n\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_SUCCESS = \"SET_SUCCESS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const setError = (error) => {\n  return {\n    type: actionTypes.SET_ERROR,\n    error,\n  };\n};\n\nexport const setSuccess = (success) => {\n  return {\n    type: actionTypes.SET_SUCCESS,\n    success,\n  };\n};\n\nexport const setLoading = (loading) => {\n  return {\n    type: actionTypes.SET_LOADING,\n    loading,\n  }\n}\n\nexport const setTimeout = (timeout) => {\n  return {\n    type: actionTypes.SET_TIMEOUT,\n    timeout\n  }\n}","const base = \"http://10.0.0.6:3000\";\n// const base = \"https://sheltered-lake-91716.herokuapp.com\";\n\nexport default base;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport { setError, setLoading, setSuccess } from \"./flash\";\nimport base from \"../../base\";\n\n// Authorize user\nexport const authorize = (user_id) => {\n  return {\n    type: actionTypes.AUTHORIZE,\n    user_id,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expires\");\n\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Logout user\nexport const userLogout = () => {\n  return (dispatch) => {\n    dispatch(deauthorize());\n    dispatch(setSuccess(\"Logged out\"));\n  };\n};\n\n// Toggle register modal\nexport const toggleRegisterModal = () => {\n  return {\n    type: actionTypes.TOGGLE_REGISTER_MODAL,\n  };\n};\n\n// Toggle register modal\nexport const toggleLoginModal = () => {\n  return {\n    type: actionTypes.TOGGLE_LOGIN_MODAL,\n  };\n};\n\n// Handle register user submission to backend\nexport const userRegister = (registerForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/register`, {\n      method: \"POST\",\n      body: JSON.stringify(registerForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        // Close modal on success\n        dispatch(toggleRegisterModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Handle login submission to backend\nexport const userLogin = (loginForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    fetch(`${base}/login`, {\n      method: \"POST\",\n      body: JSON.stringify(loginForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        dispatch(toggleLoginModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n\n        // Reload page to get posts for logged in users\n        history.push(\"/refresh\");\n        history.goBack();\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport {setError, setSuccess, setLoading} from \"./flash\";\n\n// Add comment to post\nexport const addComment = (comment) => {\n  return {\n    type: actionTypes.ADD_COMMENT,\n    comment,\n  };\n};\n\n// Submit new comment\nexport const newComment = (commentForm, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ ...commentForm, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Set comments of one post\nexport const setSinglePostComments = (comments) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_COMMENTS,\n    comments,\n  };\n};\n\n// Toggle display of comment reply form\nexport const toggleReplyForm = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_REPLY_FORM,\n    comment_id,\n  };\n};\n\n// Reset submitted comment reply's input and close input form\nexport const resetReplyInput = (comment_id) => {\n  return {\n    type: actionTypes.RESET_REPLY_INPUT,\n    comment_id,\n  };\n};\n\n// Submit comment to backend\nexport const commentReply = (text, post_id, parent) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ text, post_id, parent }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        // Reset input\n        dispatch(resetReplyInput(parent));\n\n        // Close input form\n        dispatch(toggleReplyForm(parent));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Handle input of comment reply\nexport const replyInput = (value, comment_id) => {\n  return {\n    type: actionTypes.REPLY_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Set comment to deleted in state\nexport const setDeletedComment = (comment_id) => {\n  return {\n    type: actionTypes.SET_DELETED_COMMENT,\n    comment_id,\n  };\n};\n\n// Delete comment from database\nexport const deleteComment = (comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Remove from state\n        dispatch(setDeletedComment(comment_id));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditComment = (comment_id, canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_COMMENT,\n    comment_id,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editCommentInput = (value, comment_id) => {\n  return {\n    type: actionTypes.EDIT_COMMENT_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Submit edited comment to backend\nexport const editComment = (text, comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditComment(comment_id));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle showing of comment and its' children\nexport const toggleShowComment = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_COMMENT,\n    comment_id,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setSinglePostComments } from \"./comments\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const resetHistory = () => {\n  return {\n    type: actionTypes.RESET_HISTORY,\n  };\n};\n\n// Submit new post\nexport const newPost = (postForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    postForm.topic = postForm.topic.split(\" \").join(\"\").toLowerCase();\n    console.log(postForm);\n    fetch(`${base}/posts/new`, {\n      method: \"POST\",\n      body: JSON.stringify(postForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Ensure that post will be included on posts reload\n        dispatch(resetHistory());\n\n        // Redirect\n        history.push(`/topics/${postForm.topic}/${data.post_id}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Load posts\nexport const loadPosts = (posts, pageName) => {\n  return {\n    type: actionTypes.LOAD_POSTS,\n    posts,\n    pageName,\n  };\n};\n\nexport const loadMorePosts = (posts, pageName) => {\n  return {\n    type: actionTypes.LOAD_MORE_POSTS,\n    posts,\n    pageName,\n  };\n};\n\n// Get posts\nexport const getPosts = (order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"home\"));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"home\"));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"home\"));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts for a single topic\nexport const getTopicPosts = (topic, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/topics/${topic}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"TOPIC: \" + topic));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"TOPIC: \" + topic));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"TOPIC: \" + topic));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Set single post\nexport const setSinglePost = (post) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST,\n    post,\n  };\n};\n\n// Get single post\nexport const getSinglePost = (post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = \"\";\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `?user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/${post_id}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add posts to state\n        dispatch(setSinglePost(data.post));\n\n        // Add comments to state\n        dispatch(setSinglePostComments(data.comments));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Delete a post\nexport const deletePost = (post_id, history, topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${topic}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditPost = (canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_POST,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editPostInput = (value, post_id) => {\n  return {\n    type: actionTypes.EDIT_POST_INPUT,\n    value,\n    post_id,\n  };\n};\n\n// Submit edited post to backend\nexport const editPost = (text, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditPost());\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getSearchPosts = (query, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    const q = query;\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    query += `&order=${order}&filter=${filter}&offset=${!page ? 0 : page * 25}`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/search?q=${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"SEARCH: \" + q));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"SEARCH: \" + q));\n        }\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"SEARCH: \" + q));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getUserPosts = (username, order, filter, page) => {\n  return (dispatch) => {\n    if (page === \"allLoaded\") {\n      return;\n    }\n\n    dispatch(setLoading(true));\n\n    if (!page) {\n      dispatch(loadPosts([]));\n    }\n\n    // Get user id if logged in\n    const token = localStorage.getItem(\"token\");\n    let query = `?order=${order}&filter=${filter}&offset=${\n      !page ? 0 : page * 25\n    }`;\n    if (token) {\n      const user_id = jwt_decode(token).sub;\n      query += `&user_id=${user_id}`;\n    }\n\n    fetch(`${base}/posts/user/${username}${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        if (!page) {\n          dispatch(loadPosts(data.posts, \"USERNAME: \" + username));\n        } else {\n          dispatch(loadMorePosts(data.posts, \"USERNAME: \" + username));\n        }\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        if (error.message === \"No posts found\") {\n          dispatch(loadPosts([], \"USERNAME: \" + username));\n        }\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\nexport const setPostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\nexport const setSinglePostVote = (vote, post_id) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_VOTE,\n    vote,\n    post_id,\n  };\n};\n\n// Vote on a post\nexport const postVote = (vote, post_id, single_post) => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n\n    fetch(`${base}/posts/${post_id}/vote`, {\n      method: \"POST\",\n      body: JSON.stringify({ post_id, vote }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set single post vote if on single post page\n        if (single_post) {\n          dispatch(setSinglePostVote(vote, post_id));\n        } else {\n          dispatch(setPostVote(vote, post_id));\n        }\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Change posts display order\nexport const changeOrder = (order) => {\n  return {\n    type: actionTypes.CHANGE_ORDER,\n    order,\n  };\n};\n\n// Change posts time filter\nexport const changeFilter = (filter) => {\n  return {\n    type: actionTypes.CHANGE_FILTER,\n    filter,\n  };\n};\n\n// Sort posts in state\nexport const sortPosts = (order) => {\n  return {\n    type: actionTypes.SORT_POSTS,\n    order,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\n\n// Submit new topic\nexport const newTopic = (topicForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    const token = localStorage.getItem(\"token\");\n\n    // Remove spaces from topic name and make lowercase\n    topicForm.name = topicForm.name.split(\" \").join(\"\").toLowerCase();\n\n    fetch(`${base}/newtopic`, {\n      method: \"POST\",\n      body: JSON.stringify(topicForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n\n        // Redirect\n        history.push(`/topics/${topicForm.name}`);\n\n        // Set loading and success message\n        dispatch(setLoading(true));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set topics in state\nexport const setTopics = (topics) => {\n  return {\n    type: actionTypes.SET_TOPICS,\n    topics,\n  };\n};\n\n// Get list of topics\nexport const getTopics = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    // dispatch(setTopics([]));\n\n    fetch(`${base}/posts/topics`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(setTopics(data.topics));\n\n        // Stop loading\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set added topic in state\nexport const setAddedTopic = (topic) => {\n  return {\n    type: actionTypes.SET_ADDED_TOPIC,\n    topic,\n  };\n};\n\n// Fetch topic information\nexport const addTopic = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/posts/singletopic`, {\n      method: \"POST\",\n      body: JSON.stringify({ topic }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        dispatch(setAddedTopic(data.topic));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Set sidebar content\nexport const setSidebar = (isHome, name, description) => {\n  return {\n    type: actionTypes.SET_SIDEBAR,\n    isHome,\n    name,\n    description,\n  };\n};\n\n// Toggle sidebar showing\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR\n  }\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\n\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <Link\n            to=\"/\"\n            className=\"nav-logo\"\n            onClick={props.sidebarShow ? props.onToggleSidebar : null}\n          >\n            Sayit\n          </Link>\n        </li>\n        <button\n          className=\"menu-button\"\n          onClick={props.onToggleSidebar}\n          aria-label=\"toggle-sidebar\"\n        >\n          {props.sidebarShow ? (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n            </svg>\n          ) : (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          )}\n        </button>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    sidebar: state.sidebar.sidebar,\n    sidebarShow: state.sidebar.show,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","const dateSince = (date) => {\n  const duration = (Date.now() - new Date(date)) / 1000;\n  if (duration < 60) {\n    return `${duration.toFixed(0)} seconds ago`;\n  } else if (duration < 60 * 60) {\n    return `${(duration / 60).toFixed(0)} minutes ago`;\n  } else if (duration < 60 * 60 * 24) {\n    return `${(duration / (60 * 60)).toFixed(0)} hours ago`;\n  } else if (duration < 60 * 60 * 24 * 365) {\n    return `${(duration / (60 * 60 * 24)).toFixed(0)} days ago`;\n  } else {\n    return `${(duration / (60 * 60 * 24 * 365)).toFixed(0)} years ago`;\n  }\n}\n\nexport default dateSince;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst Votes = (props) => {\n  const voteUp = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === 1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(1, props.post_id, props.single_post);\n  };\n\n  const voteDown = () => {\n    // Display error if not logged in\n    if (!props.isAuth) {\n      return props.onSetError(\"Login to vote\");\n    }\n\n    // If already voted set to not voted again\n    if (props.user_vote === -1) {\n      return props.onPostVote(0, props.post_id, props.single_post);\n    }\n\n    props.onPostVote(-1, props.post_id, props.single_post);\n  };\n\n  return (\n    <div className=\"post-votes\">\n      <svg\n        onClick={voteUp}\n        className={props.user_id && props.user_vote === 1 ? \"vote-up\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n      </svg>\n      <p>{props.votes}</p>\n      <svg\n        onClick={voteDown}\n        className={props.user_id && props.user_vote === -1 ? \"vote-down\" : null}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n      </svg>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  user_id: state.auth.user_id,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSetError: (error) => {\n    dispatch(actions.setError(error));\n  },\n  onPostVote: (vote, post_id, single_post) => {\n    dispatch(actions.postVote(vote, post_id, single_post));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Votes);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./PostsOptions.css\";\nimport * as actions from \"../../store/actions/index\";\n\nconst PostsOptions = (props) => {\n  return (\n    <div>\n      <form className=\"posts-options-form\">\n        <div>\n          <label htmlFor=\"order-select\"></label>\n          <select\n            id=\"order-select\"\n            value={props.order}\n            onChange={(e) => props.onChangeOrder(e.target.value)}\n          >\n            <option value=\"most\">Most Votes</option>\n            <option value=\"least\">Least Votes</option>\n            <option value=\"newest\">Newest</option>\n            <option value=\"oldest\">Oldest</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"filter-select\"></label>\n          <select\n            id=\"filter-select\"\n            value={props.filter}\n            onChange={(e) => props.onChangeFilter(e.target.value)}\n          >\n            <option value=\"day\">Day</option>\n            <option value=\"week\">Week</option>\n            <option value=\"month\">Month</option>\n            <option value=\"year\">Year</option>\n            <option value=\"all\">All</option>\n          </select>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    order: state.posts.order,\n    filter: state.posts.filter,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChangeOrder: (order) => {\n      dispatch(actions.changeOrder(order));\n    },\n    onChangeFilter: (filter) => {\n      dispatch(actions.changeFilter(filter));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsOptions);\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst Home = (props) => {\n  const [loaded, setLoaded] = useState(false);\n\n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetPosts(props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetPosts(props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if from a different set of posts\n    if (props.history !== \"home\") {\n      props.onGetPosts(props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <Votes\n          post_id={post.post_id}\n          votes={post.votes}\n          user_vote={post.user_vote}\n        />\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in{\" \"}\n            <Link className=\"post-topic\" to={`/topics/${post.topic}`}>\n              {post.topic}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history === \"home\" ? (\n        <React.Fragment>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetPosts(props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  loading: state.flash.loading,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetPosts: (order, filter, page) => {\n      dispatch(actions.getPosts(order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\n\nconst Register = (props) => {\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserRegister(registerForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleRegisterModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Register</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleRegisterModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={registerForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={registerForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={registerForm.confirmPassword}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button\n            className=\"basic-button\"\n            type=\"submit\"\n            aria-label=\"submit\"\n            disabled={props.loading ? \"disabled\" : null}\n          >\n            Register\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserRegister: (registerForm, history) => {\n      dispatch(actions.userRegister(registerForm, history));\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setLoginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserLogin(loginForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleLoginModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Login</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleLoginModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={loginForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={loginForm.password}\n              onChange={handleInput}\n              required\n              minLength=\"8\"\n            />\n          </div>\n          <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\" disabled={props.loading ? \"disabled\" : null}>\n            Login\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserLogin: (loginForm, history) => {\n      dispatch(actions.userLogin(loginForm, history));\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n          ></textarea>\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewTopic.css\";\n\nconst NewTopic = (props) => {\n  let history = useHistory();\n\n  useEffect(() => {\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [topicForm, setTopicForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setTopicForm({\n      ...topicForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewTopic(topicForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Topic</h1>\n      <form className=\"auth-form new-topic-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name*</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={topicForm.name}\n            onChange={handleInput}\n            required\n            maxLength=\"100\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Description*</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={topicForm.description}\n            onChange={handleInput}\n            required\n            maxLength=\"255\"\n          />\n        </div>\n        <button\n          className=\"basic-button\"\n          type=\"submit\"\n          aria-label=\"submit\"\n          disabled={props.loading ? \"disabled\" : false}\n        >\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewTopic: (topicForm, history) => {\n      dispatch(actions.newTopic(topicForm, history));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTopic);\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst TopicPosts = (props) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetTopicPosts(topic, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetTopicPosts(topic, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  let { topic } = useParams();\n  topic = topic.toLowerCase();\n\n  // Get posts on first run or if topic changes\n  useEffect(() => {\n    if (props.history !== \"TOPIC: \" + topic) {\n      props.onGetTopicPosts(topic, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // eslint-disable-next-line\n  }, [topic]);\n\n  useEffect(() => {\n    // Find index of topic in state\n    let topicIndex = -1;\n    if (props.topics.length) {\n      topicIndex = props.topics.findIndex(\n        (topicState) => topicState && topicState.name === topic\n      );\n    }\n\n    // If topic not in state, fetch and add it\n    if (topicIndex === -1) {\n      props.onAddTopic(topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [topic, props.topics]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {props.history === \"TOPIC: \" + topic ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">{topic}</h1>\n          <PostsOptions/>\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetTopicPosts(topic, props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.posts,\n    topics: state.topics.topics,\n    error: state.flash.error,\n    loading: state.flash.loading,\n    history: state.posts.history,\n    order: state.posts.order,\n    filter: state.posts.filter,\n    page: state.posts.page,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopicPosts: (topic, order, filter, page) => {\n      dispatch(actions.getTopicPosts(topic, order, filter, page));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPosts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show if the user was the creator of post or comment\n  if (props.user_id === props.creator_id) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  user_id: state.auth.user_id\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show to logged in users\n  if (props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Link} from \"react-router-dom\"\nimport * as actions from \"../../store/actions/index\";\nimport AuthCreator from \"./AuthCreator\";\nimport AuthShow from \"./AuthShow\";\nimport dateSince from \"../functions/dateSince\"\n\nconst Comment = (props) => {\n  // Submit reply to a comment\n  const submitCommentReply = (e) => {\n    e.preventDefault();\n    props.onCommentReply(\n      props.comment.reply,\n      props.post_id,\n      props.comment.comment_id\n    );\n  };\n\n  // Submit comment after editing\n  const submitCommentEdit = (e) => {\n    e.preventDefault();\n    props.onEditComment(props.comment.text, props.comment.comment_id);\n  };\n\n  // Filter comments that have this comment as it's parent\n  const replies = props.allComments.filter(\n    (comment) => comment.parent === props.comment.comment_id\n  );\n\n  // Change content when hiding comment\n  let commentContent = null;\n  if (props.comment.show) {\n    commentContent = (\n      <React.Fragment>\n        {props.comment.editing ? (\n          <form className=\"edit-comment-form\" onSubmit={submitCommentEdit}>\n            <div>\n              <label htmlFor=\"editComment\" />\n              <textarea\n                name=\"text\"\n                id=\"editComment\"\n                value={props.comment.text}\n                onChange={(e) =>\n                  props.onEditCommentInput(\n                    e.target.value,\n                    props.comment.comment_id\n                  )\n                }\n                required\n              ></textarea>\n            </div>\n            <button className=\"basic-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"basic-button\"\n              type=\"button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() =>\n                props.onToggleEditComment(props.comment.comment_id, true)\n              }\n            >\n              Cancel\n            </button>\n          </form>\n        ) : (\n          <div className=\"comment-text\">\n            <p>{props.comment.text}</p>\n          </div>\n        )}\n        <AuthShow>\n          <div className=\"comment-buttons\">\n            <button\n              data-index={props.index}\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() => props.onToggleReplyForm(props.comment.comment_id)}\n            >\n              Reply\n            </button>\n            <AuthCreator creator_id={props.comment.user_id}>\n              <button\n                type=\"button\"\n                aria-label=\"delete\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeleteComment(props.comment.comment_id)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"edit\"\n                aria-label=\"edit\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleEditComment(props.comment.comment_id)\n                }\n              >\n                Edit\n              </button>\n            </AuthCreator>\n          </div>\n          {props.comment.showReply ? (\n            <form className=\"reply-form\" onSubmit={submitCommentReply}>\n              <div>\n                <label htmlFor=\"commentReply\"></label>\n                <textarea\n                  name=\"comment\"\n                  id=\"commentReply\"\n                  placeholder=\"Reply\"\n                  value={props.comment.reply}\n                  onChange={(e) =>\n                    props.onReplyInput(e.target.value, props.comment.comment_id)\n                  }\n                  required\n                ></textarea>\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n              <button\n                className=\"basic-button\"\n                type=\"button\"\n                aria-label=\"cancel\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleReplyForm(props.comment.comment_id)\n                }\n              >\n                Cancel\n              </button>\n            </form>\n          ) : null}\n        </AuthShow>\n        <ul>\n          {replies.map((comment) => {\n            return (\n              <Comment\n                allComments={props.allComments}\n                comment={comment}\n                post_id={props.post_id}\n                key={comment.comment_id}\n                loading={props.loading}\n                onToggleReplyForm={props.onToggleReplyForm}\n                onReplyInput={props.onReplyInput}\n                onCommentReply={props.onCommentReply}\n                onDeleteComment={props.onDeleteComment}\n                onToggleEditComment={props.onToggleEditComment}\n                onEditCommentInput={props.onEditCommentInput}\n                onEditComment={props.onEditComment}\n                onToggleShowComment={props.onToggleShowComment}\n              />\n            );\n          })}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <li className=\"child\" key={props.comment.comment_id}>\n      <p className=\"comment-subtitle\">\n        <button\n          onClick={() => props.onToggleShowComment(props.comment.comment_id)}\n        >\n          {props.comment.show ? \"[–]\" : \"[+]\"}\n        </button>\n        <Link className=\"post-username comment-username\" to={`/users/${props.comment.username}`}>\n              {props.comment.username}\n            </Link>\n        {dateSince(props.comment.time)}\n      </p>\n      {props.comment.show ? commentContent : null}\n    </li>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleReplyForm: (index) => {\n      dispatch(actions.toggleReplyForm(index));\n    },\n    onCommentReply: (text, post_id, parent) => {\n      dispatch(actions.commentReply(text, post_id, parent));\n    },\n    onReplyInput: (value, comment_id) => {\n      dispatch(actions.replyInput(value, comment_id));\n    },\n    onDeleteComment: (comment_id) => {\n      dispatch(actions.deleteComment(comment_id));\n    },\n    onToggleEditComment: (comment_id, canceled) => {\n      dispatch(actions.toggleEditComment(comment_id, canceled));\n    },\n    onEditCommentInput: (value, comment_id) => {\n      dispatch(actions.editCommentInput(value, comment_id));\n    },\n    onEditComment: (text, comment_id) => {\n      dispatch(actions.editComment(text, comment_id));\n    },\n    onToggleShowComment: (comment_id) => {\n      dispatch(actions.toggleShowComment(comment_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport Comment from \"./helpers/Comment\";\nimport AuthShow from \"./helpers/AuthShow\";\nimport AuthCreator from \"./helpers/AuthCreator\";\nimport dateSince from \"./functions/dateSince\";\nimport \"./Post.css\";\nimport Votes from \"./helpers/Votes\";\n\nconst Post = (props) => {\n  const { post_id, topic } = useParams();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    // Fetch only if post undefined or wrong post\n    if (!props.post.post_id || props.post.post_id !== Number(post_id)) {\n      props.onGetSinglePost(post_id, topic, history);\n    }\n\n    // If topic in url wrong redirect to correct page\n    if (\n      props.post.post_id &&\n      props.post.post_id === Number(post_id) &&\n      props.post.topic !== topic\n    ) {\n      history.replace(`/topics/${props.post.topic}/${post_id}`);\n    }\n\n    // Find index of topic in state\n    const topicIndex = props.topics.findIndex(\n      (topic) => topic.name === props.post.topic\n    );\n\n    // If post defined and topic not in state, fetch and add it\n    if (props.post.topic && topicIndex === -1) {\n      props.onAddTopic(props.post.topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (props.post.topic && topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [post_id, props.post.topic, props.topics]);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n  }, [post_id]);\n\n  // Submit post after editing\n  const submitPostEdit = (e) => {\n    e.preventDefault();\n    props.onEditPost(props.post.text, props.post.post_id);\n  };\n\n  let postDisplay = [];\n\n  // If post set and the post ids' match, display post\n  if (props.post.post_id && Number(props.post.post_id) === Number(post_id)) {\n    let postContentDisplay = null;\n    const imgPattern = /.(jpg|jpeg|png|gif|gifv|webp)$/;\n    console.log();\n\n    // Change displayed post content if has a link in it\n    if (props.post.text.includes(\"<<<Link>>>\")) {\n      const link = props.post.text.replace(\"<<<Link>>>\", \"\");\n      console.log(imgPattern.test(link));\n\n      // Parse for embedded iframe if youtube link\n      if (link.includes(\"youtube.com\") || link.includes(\"youtu.be\")) {\n        const idPattern = /[A-Za-z0-9]{11}/;\n        const id = link.match(idPattern);\n\n        const timePattern = /(t=\\d+)|(start=\\d+)/;\n        const time = link.match(timePattern);\n        let start = \"\";\n        if (time) {\n          start = time[0].split(\"=\")[1];\n        }\n        // Update if valid video\n        if (id) {\n          const src = `https://www.youtube.com/embed/${id[0]}?start=${start}`;\n          // Set iframe\n          postContentDisplay = (\n            <iframe\n              src={src}\n              title={props.post.title}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            ></iframe>\n          );\n        }\n      } else if (imgPattern.test(link)) {\n        // Show img if ends with image extension\n        postContentDisplay = (\n          <img\n            src={props.post.text.replace(\"<<<Link>>>\", \"\")}\n            alt={props.post.title}\n          />\n        );\n        // Else just show link\n      } else {\n        postContentDisplay = (\n          <a href={props.post.text.replace(\"<<<Link>>>\", \"\")}>\n            {props.post.text.replace(\"<<<Link>>>\", \"\")}\n          </a>\n        );\n      }\n    } else {\n      postContentDisplay = <p>{props.post.text}</p>;\n    }\n\n    // Display of whole post\n    postDisplay = (\n      <div className=\"single-post\">\n        <div className=\"post-votes\">\n          <Votes\n            post_id={props.post.post_id}\n            votes={props.post.votes}\n            user_vote={props.post.user_vote}\n            single_post={true}\n          />\n        </div>\n        <div className=\"post-details\">\n          <div className=\"post-title\">\n            <Link to={`/topics/${props.post.topic}/${props.post.post_id}`}>\n              {props.post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(props.post.time)} by{\" \"}\n            <Link\n              className=\"props.post-username\"\n              to={`/users/${props.post.username}`}\n            >\n              {props.post.username}\n            </Link>\n          </p>\n          {props.post.editing ? (\n            <form className=\"edit-post-form\" onSubmit={submitPostEdit}>\n              <label htmlFor=\"editPost\" aria-label=\"edit post\" />\n              <textarea\n                id=\"editPost\"\n                name=\"text\"\n                value={props.post.text.toString()}\n                onChange={(e) => props.onEditPostInput(e.target.value)}\n              ></textarea>\n              <div>\n                <button\n                  className=\"basic-button\"\n                  type=\"submit\"\n                  disabled={props.loading ? \"disabled\" : false}\n                >\n                  Submit\n                </button>\n                <button\n                  className=\"basic-button\"\n                  type=\"button\"\n                  aria-label=\"cancel\"\n                  disabled={props.loading ? \"disabled\" : false}\n                  onClick={() => props.onToggleEditPost(true)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div className=\"post-text\">{postContentDisplay}</div>\n          )}\n          <AuthCreator creator_id={props.post.user_id}>\n            <div className=\"comment-buttons\">\n              <button\n                type=\"button\"\n                aria-label=\"delete post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeletePost(post_id, history, topic)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                aria-label=\"edit post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onToggleEditPost()}\n              >\n                Edit\n              </button>\n            </div>\n          </AuthCreator>\n        </div>\n      </div>\n    );\n  }\n\n  const [commentForm, setCommentForm] = useState({\n    text: \"\",\n  });\n\n  // Get comments with no parent\n  const topLevelComments = props.comments.filter((comment) => !comment.parent);\n\n  // Display comments by newest for now\n  const commentsDisplay = topLevelComments.map((comment) => {\n    return (\n      <Comment\n        allComments={props.comments}\n        comment={comment}\n        key={comment.comment_id}\n        post_id={post_id}\n      />\n    );\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setCommentForm({\n      ...commentForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewComment(commentForm, post_id);\n\n    // Reset to blank\n    setCommentForm({\n      text: \"\",\n    });\n  };\n\n  return (\n    <section>\n      {postDisplay}\n      {!props.post.post_id || props.post.post_id !== Number(post_id) ? null : (\n        <div className=\"comments-section\">\n          <h2>Comments</h2>\n          <AuthShow>\n            <form className=\"new-comment-form\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"newComment\" aria-label=\"new comment\"></label>\n                <textarea\n                  name=\"text\"\n                  id=\"newComment\"\n                  placeholder=\"New Comment\"\n                  value={commentForm.text}\n                  onChange={handleInput}\n                  required\n                />\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n            </form>\n          </AuthShow>\n          <ul>{commentsDisplay}</ul>\n        </div>\n      )}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  post: state.posts.post,\n  comments: state.comments.comments,\n  topics: state.topics.topics,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSinglePost: (post) => {\n      dispatch(actions.setSinglePost(post));\n    },\n    onGetSinglePost: (post_id) => {\n      dispatch(actions.getSinglePost(post_id));\n    },\n    onNewComment: (commentForm, post_id) => {\n      dispatch(actions.newComment(commentForm, post_id));\n    },\n    onDeletePost: (post_id, history, topic) => {\n      dispatch(actions.deletePost(post_id, history, topic));\n    },\n    onToggleEditPost: (canceled) => {\n      dispatch(actions.toggleEditPost(canceled));\n    },\n    onEditPostInput: (value) => {\n      dispatch(actions.editPostInput(value));\n    },\n    onEditPost: (text, post_id) => {\n      dispatch(actions.editPost(text, post_id));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport \"./Topics.css\";\n\nconst Topics = (props) => {\n  useEffect(() => {\n    // Get list of topics\n    props.onGetTopics();\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const topicsDisplay = props.topics.map((topic) => {\n    return (\n      <li key={topic.topic_id}>\n        <Link to={`/topics/${topic.name}`}>{topic.name}</Link>\n        <p>{topic.description}</p>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <h1 className=\"page-title\">Topics</h1>\n      <ul className=\"topics-list\">{topicsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  topics: state.topics.topics,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopics: () => {\n      dispatch(actions.getTopics());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthHide = (props) => {\n  // Only show to user that are not logged in\n  if (!props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthHide);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthShow from \"./AuthShow\";\nimport AuthHide from \"./AuthHide\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = (props) => {\n  const [search, setSearch] = useState(\"\");\n\n  // Handle input in search bar\n  const searchInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  let history = useHistory();\n\n  // Handle search bar submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n\n    history.push(`/search?q=${search}`);\n\n    setSearch(\"\");\n  };\n\n  return (\n    <aside\n      className={`sidebar ${props.show ? \"open\" : \"\"}`}\n      onClick={props.onToggleSidebar}\n    >\n      <form onSubmit={handleSearchSubmit}>\n        <div className=\"search-bar\">\n          <label htmlFor=\"search\"></label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            placeholder=\"search\"\n            value={search}\n            onChange={searchInput}\n            required\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          />\n          <button type=\"submit\" aria-label=\"search\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div className=\"sidebar-links\">\n        <Link to=\"/topics\">Topics</Link>\n        <AuthShow>\n          <Link\n            to={{ pathname: \"/newpost\", state: { topic: props.sidebar.name } }}\n          >\n            New Post\n          </Link>\n          <Link\n            to={{\n              pathname: \"/newlinkpost\",\n              state: { topic: props.sidebar.name },\n            }}\n          >\n            New Link Post\n          </Link>\n          {props.sidebar.isHome ? <Link to=\"/newtopic\">New Topic</Link> : null}\n        </AuthShow>\n      </div>\n      <ul className=\"auth-links\">\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleRegisterModal}\n              aria-label=\"register\"\n            >\n              Register\n            </button>\n          </li>\n        </AuthHide>\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={props.onToggleLoginModal}\n              aria-label=\"login\"\n            >\n              Login\n            </button>\n          </li>\n        </AuthHide>\n        <AuthShow>\n          <li>\n            <button\n              disabled={props.loading ? \"disabled\" : false}\n              className=\"basic-button\"\n              onClick={props.onUserLogout}\n              aria-label=\"logout\"\n            >\n              Logout\n            </button>\n          </li>\n        </AuthShow>\n      </ul>\n      <div className=\"sidebar-topic\">\n        {props.sidebar.name !== \"\" ? (\n          <Link to={`/topics/${props.sidebar.name}`}>{props.sidebar.name}</Link>\n        ) : null}\n        <p>{props.sidebar.description}</p>\n      </div>\n    </aside>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sidebar: state.sidebar.sidebar,\n  show: state.sidebar.show,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n    onUserLogout: () => {\n      dispatch(actions.userLogout());\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\";\n\nconst SearchPosts = (props) => {\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search);\n  const query = params.get(\"q\");\n\n  const [loaded, setLoaded] = useState(false);\n\n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetSearchPosts(query, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetSearchPosts(query, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if search changes\n    if (props.history !== \"SEARCH: \" + query) {\n      props.onGetSearchPosts(query, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [query]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <Link className=\"post-username\" to={`/users/${post.username}`}>\n              {post.username}\n            </Link>{\" \"}\n            in <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      {props.history === \"SEARCH: \" + query ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">Search: {query}</h1>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n      {props.page !== \"allLoaded\" && props.posts.length >= 25 ? (\n        <div\n          className=\"load-more\"\n          onClick={() =>\n            props.onGetSearchPosts(query, props.order, props.filter, props.page)\n          }\n        >\n          <button className=\"basic-button\" aria-label=\"load more posts\">\n            More Posts\n          </button>\n        </div>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSearchPosts: (query, order, filter, page) => {\n      dispatch(actions.getSearchPosts(query, order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPosts);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Flash.css\";\n\nconst FlashError = (props) => {\n  let errorDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetError(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.error !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.error]);\n\n  if (props.error !== \"\") {\n    errorDisplay = (\n      <div className=\"Flash error\" onClick={() => props.onSetError(\"\")}>\n        <h1>{props.error}</h1>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.flash.error,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetError: (error) => {\n      dispatch(actions.setError(error));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashError);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst FlashSuccess = (props) => {\n  let successDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetSuccess(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.success !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.success]);\n\n  if (props.success !== \"\") {\n    successDisplay = (\n      <div className=\"Flash success\" onClick={() => props.onSetSuccess(\"\")}>\n        <h1>{props.success}</h1>\n      </div>\n    );\n  }\n  return successDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    success: state.flash.success,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSuccess: (success) => {\n      dispatch(actions.setSuccess(success));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashSuccess);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Flash.css\";\n\nconst FlashLoading = (props) => {\n  let errorDisplay = null;\n  if (props.loading) {\n    errorDisplay = (\n      <div className=\"Flash loading\">\n        <div className=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashLoading);\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\";\nimport Votes from \"./helpers/Votes\";\nimport PostsOptions from \"./helpers/PostsOptions\"\n\nconst UserPosts = (props) => {\n  const { username } = useParams();\n\n  const [loaded, setLoaded] = useState(false);\n  \n  // Load posts again with the different order or filter\n  useEffect(() => {\n    if (loaded && (props.posts.length < 25 || props.page === \"allLoaded\")) {\n      // Sort posts in state if all posts loaded\n      props.onSortPosts(props.order);\n    } else if (loaded) {\n      // Return posts from server if not loaded all posts\n      props.onGetUserPosts(username, props.order, props.filter);\n    }\n    // eslint-disable-next-line\n  }, [props.order]);\n\n  useEffect(() => {\n    // Fetch if filter changes\n    if (loaded) {\n      props.onGetUserPosts(username, props.order, props.filter);\n      // window.scrollTo(0,0);\n    }\n    // eslint-disable-next-line\n  }, [props.filter]);\n\n  useEffect(() => {\n    // Fetch posts on first load or if username changes\n    if (\n      props.history !== \"USERNAME: \" + username\n    ) {\n      props.onGetUserPosts(username, props.order, props.filter);\n    }\n    setLoaded(true);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [username]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <Votes\n            post_id={post.post_id}\n            votes={post.votes}\n            user_vote={post.user_vote}\n          />\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <span className=\"post-username\">{post.username}</span> in{\" \"}\n            <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      {props.history === \"USERNAME: \" + username ? (\n        <React.Fragment>\n          <h1 className=\"page-title\">{username}</h1>\n          <PostsOptions />\n          <ul className=\"posts-list\">{postsDisplay}</ul>\n        </React.Fragment>\n      ) : null}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  loading: state.flash.loading,\n  history: state.posts.history,\n  order: state.posts.order,\n  filter: state.posts.filter,\n  page: state.posts.page,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetUserPosts: (username, order, filter, page) => {\n      dispatch(actions.getUserPosts(username, order, filter, page));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onSortPosts: (order) => {\n      dispatch(actions.sortPosts(order));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\n\nconst NewLinkPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    postForm.text = \"<<<Link>>>\" + postForm.text;\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Link Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Link* (page, image or youtube)</label>\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewLinkPost);\n","import React from \"react\";\nimport \"./PageNotFound.css\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found\">\n      <h1>Page Not Found</h1>\n      <Link to=\"/\">Return Home</Link>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport * as actions from \"./store/actions/index\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Nav from \"./components/helpers/Nav\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NewPost from \"./components/NewPost\";\nimport NewTopic from \"./components/NewTopic\";\nimport TopicPosts from \"./components/TopicPosts\";\nimport Post from \"./components/Post\";\nimport Topics from \"./components/Topics\";\nimport Sidebar from \"./components/helpers/Sidebar\";\nimport SearchPosts from \"./components/SearchPosts\";\nimport FlashError from \"./components/helpers/FlashError\";\nimport FlashSuccess from \"./components/helpers/FlashSuccess\";\nimport FlashLoading from \"./components/helpers/FlashLoading\";\nimport UserPosts from \"./components/UserPosts\";\nimport NewLinkPost from \"./components/NewLinkPost\";\nimport PageNotFound from \"./components/PageNotFound\";\n\nconst App = (props) => {\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"expires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      const decoded = jwt_decode(localStorage.getItem(\"token\"));\n      props.onAuthorize(decoded.sub);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollToTop />\n      <Nav />\n      <FlashError />\n      <FlashSuccess />\n      <FlashLoading />\n      <div className=\"main-grid\">\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/newpost\">\n              <NewPost />\n            </Route>\n            <Route path=\"/newlinkpost\">\n              <NewLinkPost />\n            </Route>\n            <Route path=\"/newtopic\">\n              <NewTopic />\n            </Route>\n            <Route path=\"/search\">\n              <SearchPosts />\n            </Route>\n            <Route path=\"/users/:username\">\n              <UserPosts />\n            </Route>\n            <Route path=\"/topics\" exact>\n              <Topics />\n            </Route>\n            <Route path=\"/topics/:topic\" exact>\n              <TopicPosts />\n            </Route>\n            <Route path=\"/topics/:topic/:post_id\" exact>\n              <Post />\n            </Route>\n            <Route path=\"*\">\n              <PageNotFound />\n            </Route>\n          </Switch>\n        </main>\n        {props.registerModal ? <Register /> : null}\n        {props.loginModal ? <Login /> : null}\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    registerModal: state.auth.registerModal,\n    loginModal: state.auth.loginModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: (user_id) => {\n      dispatch(actions.authorize(user_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  user_id: null,\n  registerModal: false,\n  loginModal: false,\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n    user_id: action.user_id,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n    user_id: null,\n  };\n};\n\nconst toggleRegisterModal = (state, action) => {\n  return {\n    ...state,\n    registerModal: !state.registerModal\n  }\n}\n\nconst toggleLoginModal = (state, action) => {\n  return {\n    ...state,\n    loginModal: !state.loginModal\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.TOGGLE_REGISTER_MODAL:\n      return toggleRegisterModal(state, action);\n    case actionTypes.TOGGLE_LOGIN_MODAL:\n      return toggleLoginModal(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  post: {},\n  history: null,\n  order: \"most\",\n  filter: \"all\",\n  page: 1,\n};\n\nconst resetHistory = (state, action) => {\n  return {\n    ...state,\n    history: null,\n  };\n};\n\nconst loadPosts = (state, action) => {\n  return {\n    ...state,\n    posts: action.posts,\n    history: action.pageName,\n    page: 1,\n  };\n};\n\nconst loadMorePosts = (state, action) => {\n  let page = state.page;\n\n  // Reset page if no more posts after current fetch\n  if (action.posts.length !== 25) {\n    page = \"allLoaded\";\n  } else {\n    page += 1;\n  }\n\n  return {\n    ...state,\n    posts: [...state.posts, ...action.posts],\n    history: action.pageName,\n    page,\n  };\n};\n\nconst setSinglePost = (state, action) => {\n  return {\n    ...state,\n    post: { ...action.post, editing: false },\n  };\n};\n\nconst toggleEditPost = (state, action) => {\n  const post = { ...state.post };\n\n  // Set post to editing\n  post.editing = !post.editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    post.text = post.original;\n  }\n\n  // Set original value so can be used if canceled\n  post.original = post.text;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst editPostInput = (state, action) => {\n  const post = { ...state.post };\n\n  post.text = action.value;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst setPostVote = (state, action) => {\n  const posts = [];\n  for (let post of state.posts) {\n    posts.push({ ...post });\n  }\n\n  const index = posts.findIndex((post) => post.post_id === action.post_id);\n\n  // Set new user vote\n  posts[index].user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.posts[index].user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    posts[index].votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    posts[index].votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    posts[index].votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    posts[index].votes += 1;\n  }\n\n  return {\n    ...state,\n    posts,\n  };\n};\n\nconst setSinglePostVote = (state, action) => {\n  const post = { ...state.post };\n\n  // Set new user vote\n  post.user_vote = action.vote;\n\n  // Change total votes based on users previous vote or new vote\n  const previousVote = state.post.user_vote;\n\n  if (previousVote === 1 && action.vote === -1) {\n    post.votes -= 2;\n  } else if (previousVote === -1 && action.vote === 1) {\n    post.votes += 2;\n  } else if (previousVote === 1 || action.vote === -1) {\n    post.votes -= 1;\n  } else if (previousVote === -1 || action.vote === 1) {\n    post.votes += 1;\n  }\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst changeOrder = (state, action) => {\n  return {\n    ...state,\n    order: action.order,\n  };\n};\n\nconst changeFilter = (state, action) => {\n  return {\n    ...state,\n    filter: action.filter,\n  };\n};\n\nconst sortPosts = (state, action) => {\n  let posts = [...state.posts];\n\n  // Order posts based upon chosen value\n  switch (action.order) {\n    case \"most\":\n      posts = posts.sort((a, b) => {\n        return b.votes - a.votes;\n      });\n      break;\n    case \"least\":\n      posts = posts.sort((a, b) => {\n        return a.votes - b.votes;\n      });\n      break;\n    case \"newest\":\n      posts = posts.sort((a, b) => {\n        return new Date(b.time) < new Date(a.time) ? -1 : 1;\n      });\n      break;\n    case \"oldest\":\n      posts = posts.sort((a, b) => {\n        return new Date(b.time) > new Date(a.time) ? -1 : 1;\n      });\n      break;\n    default:\n      break;\n  }\n\n  return {\n    ...state,\n    posts: posts,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RESET_HISTORY:\n      return resetHistory(state, action);\n    case actionTypes.LOAD_POSTS:\n      return loadPosts(state, action);\n    case actionTypes.LOAD_MORE_POSTS:\n      return loadMorePosts(state, action);\n    case actionTypes.SET_SINGLE_POST:\n      return setSinglePost(state, action);\n    case actionTypes.TOGGLE_EDIT_POST:\n      return toggleEditPost(state, action);\n    case actionTypes.EDIT_POST_INPUT:\n      return editPostInput(state, action);\n    case actionTypes.SET_POST_VOTE:\n      return setPostVote(state, action);\n    case actionTypes.SET_SINGLE_POST_VOTE:\n      return setSinglePostVote(state, action);\n    case actionTypes.CHANGE_ORDER:\n      return changeOrder(state, action);\n    case actionTypes.CHANGE_FILTER:\n      return changeFilter(state, action);\n    case actionTypes.SORT_POSTS:\n      return sortPosts(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  topics: [],\n};\n\nconst setTopics = (state, action) => {\n  return {\n    ...state,\n    topics: action.topics,\n  };\n};\n\nconst setAddedTopic = (state, action) => {\n  const topics = [];\n  for (let topic of state.topics) {\n    topics.push({ ...topic });\n  }\n\n  return {\n    ...state,\n    topics: [...topics, action.topic],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TOPICS:\n      return setTopics(state, action);\n    case actionTypes.SET_ADDED_TOPIC:\n      return setAddedTopic(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  sidebar: {\n    isHome: true,\n    name: \"\",\n    description: \"\",\n  },\n  show: false,\n};\n\nconst setSidebar = (state, action) => {\n  return {\n    ...state,\n    sidebar: {\n      isHome: action.isHome,\n      name: action.name,\n      description: action.description,\n    },\n  };\n};\n\nconst toggleSidebar = (state, action) => {\n  return {\n    ...state,\n    show: !state.show,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SIDEBAR:\n      return setSidebar(state, action);\n    case actionTypes.TOGGLE_SIDEBAR:\n      return toggleSidebar(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  comments: [],\n};\n\n// Helper function to duplicate comments array\nconst duplicateComments = (comments) => {\n  const duplicate = [];\n  for (let comment of comments) {\n    duplicate.push({ ...comment });\n  }\n  return duplicate;\n};\n\nconst setSinglePostComments = (state, action) => {\n  const comments = action.comments;\n  for (let comment of comments) {\n    comment.reply = \"\";\n    comment.showReply = false;\n    comment.editing = false;\n    comment.show = true;\n  }\n  return {\n    ...state,\n    comments: action.comments,\n  };\n};\n\nconst addComment = (state, action) => {\n  return {\n    ...state,\n    comments: [\n      ...state.comments,\n      {\n        ...action.comment,\n        reply: \"\",\n        showReply: false,\n        editing: false,\n        show: true,\n      },\n    ],\n  };\n};\n\nconst toggleReplyForm = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].showReply = !comments[index].showReply;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst replyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst resetReplyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = \"\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst setDeletedComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set displayed comment text to deleted values\n  comments[index].text = \"[deleted]\";\n  comments[index].user_id = 11;\n  comments[index].username = \"[deleted]\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleEditComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set chosen comment to editing mode\n  comments[index].editing = !comments[index].editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    comments[index].text = comments[index].original;\n  }\n\n  // Set original value so can be used if canceled\n  comments[index].original = comments[index].text;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst editCommentInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].text = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleShowComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].show = !comments[index].show;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SINGLE_POST_COMMENTS:\n      return setSinglePostComments(state, action);\n    case actionTypes.ADD_COMMENT:\n      return addComment(state, action);\n    case actionTypes.TOGGLE_REPLY_FORM:\n      return toggleReplyForm(state, action);\n    case actionTypes.REPLY_INPUT:\n      return replyInput(state, action);\n    case actionTypes.RESET_REPLY_INPUT:\n      return resetReplyInput(state, action);\n    case actionTypes.SET_DELETED_COMMENT:\n      return setDeletedComment(state, action);\n    case actionTypes.TOGGLE_EDIT_COMMENT:\n      return toggleEditComment(state, action);\n    case actionTypes.EDIT_COMMENT_INPUT:\n      return editCommentInput(state, action);\n    case actionTypes.TOGGLE_SHOW_COMMENT:\n      return toggleShowComment(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  success: \"\",\n  error: \"\",\n  loading: false,\n  timeout: null,\n};\n\nconst setError = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    success: \"\",\n  };\n};\n\nconst setSuccess = (state, action) => {\n  return {\n    ...state,\n    success: action.success,\n    error: \"\",\n  };\n};\n\nconst setLoading = (state, action) => {\n  // Clear message if loading\n  const messages = {};\n  if (action.loading) {\n    messages.error = \"\";\n    messages.success = \"\";\n  }\n\n  return {\n    ...state,\n    ...messages,\n    loading: action.loading,\n  };\n};\n\nconst setTimeout = (state, action) => {\n  return {\n    ...state,\n    timeout: action.timeout,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ERROR:\n      return setError(state, action);\n    case actionTypes.SET_SUCCESS:\n      return setSuccess(state, action);\n    case actionTypes.SET_LOADING:\n      return setLoading(state, action);\n    case actionTypes.SET_TIMEOUT:\n      return setTimeout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport auth from \"./store/reducers/auth\";\nimport posts from \"./store/reducers/posts\"\nimport topics from \"./store/reducers/topics\"\nimport sidebar from \"./store/reducers/sidebar\"\nimport comments from \"./store/reducers/comments\"\nimport flash from \"./store/reducers/flash\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  posts: posts,\n  comments: comments,\n  topics: topics,\n  sidebar: sidebar,\n  flash: flash,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}