{"version":3,"sources":["store/actions/actionTypes.js","store/actions/flash.js","store/actions/auth.js","base.js","store/actions/comments.js","store/actions/posts.js","store/actions/topics.js","store/actions/sidebar.js","components/ScrollToTop.js","components/helpers/Nav.js","components/functions/dateSince.js","components/Home.js","components/Register.js","components/Login.js","components/NewPost.js","components/NewTopic.js","components/Topic.js","components/helpers/AuthCreator.js","components/helpers/AuthShow.js","components/helpers/Comment.js","components/Post.js","components/Topics.js","components/helpers/AuthHide.js","components/helpers/Sidebar.js","components/SearchPosts.js","components/helpers/FlashError.js","components/helpers/FlashSuccess.js","components/helpers/FlashLoading.js","App.js","store/reducers/auth.js","store/reducers/posts.js","store/reducers/topics.js","store/reducers/sidebar.js","store/reducers/comments.js","store/reducers/flash.js","index.js"],"names":["AUTHORIZE","DEAUTHORIZE","TOGGLE_REGISTER_MODAL","TOGGLE_LOGIN_MODAL","LOAD_POSTS","SET_SINGLE_POST","TOGGLE_EDIT_POST","EDIT_POST_INPUT","ADD_COMMENT","TOGGLE_REPLY_FORM","REPLY_INPUT","RESET_REPLY_INPUT","SET_DELETED_COMMENT","TOGGLE_EDIT_COMMENT","EDIT_COMMENT_INPUT","TOGGLE_SHOW_COMMENT","SET_SINGLE_POST_COMMENTS","SET_TOPICS","SET_ADDED_TOPIC","SET_SIDEBAR","TOGGLE_SIDEBAR","SET_ERROR","SET_SUCCESS","SET_LOADING","SET_TIMEOUT","setError","error","type","actionTypes","setSuccess","success","setLoading","loading","setTimeout","timeout","authorize","user_id","userLogout","dispatch","localStorage","removeItem","toggleRegisterModal","toggleLoginModal","base","addComment","comment","toggleReplyForm","comment_id","commentReply","text","post_id","parent","token","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","response","json","data","console","log","Error","message","catch","deleteComment","setDeletedComment","toggleEditComment","canceled","loadPosts","posts","setSinglePost","post","comments","getSinglePost","toggleEditPost","setTopics","topics","addTopic","topic","setAddedTopic","setSidebar","isHome","name","description","toggleSidebar","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","connect","state","isAuth","auth","sidebar","sidebarShow","show","onToggleSidebar","actions","props","className","to","onClick","aria-label","xmlns","viewBox","d","fillRule","dateSince","date","duration","Date","now","toFixed","onGetPosts","onSetSidebar","postsDisplay","map","index","title","time","username","flash","onUserRegister","registerForm","history","setItem","expires","Number","expiresIn","decoded","jwt_decode","sub","onToggleRegisterModal","useState","password","confirmPassword","setRegisterForm","useHistory","handleInput","e","target","value","currentTarget","onSubmit","preventDefault","htmlFor","onChange","required","disabled","onUserLogin","loginForm","onToggleLoginModal","setLoginForm","onNewPost","postForm","push","setPostForm","location","onNewTopic","topicForm","split","join","toLowerCase","setTopicForm","onGetTopicPosts","onAddTopic","useParams","topicIndex","length","findIndex","topicState","creator_id","Fragment","children","onToggleReplyForm","onCommentReply","onReplyInput","onDeleteComment","onToggleEditComment","onEditCommentInput","onEditComment","onToggleShowComment","Comment","replies","allComments","filter","commentContent","editing","id","data-index","AuthCreator","showReply","reply","placeholder","onSetSinglePost","onGetSinglePost","onNewComment","commentForm","onDeletePost","onToggleEditPost","onEditPostInput","onEditPost","replace","postDisplay","toString","setCommentForm","commentsDisplay","onGetTopics","topicsDisplay","topic_id","onUserLogout","search","setSearch","onGetSearchPosts","query","URLSearchParams","get","onSetError","onSetTimeout","errorDisplay","clearTimeout","onSetSuccess","successDisplay","registerModal","loginModal","onAuthorize","expiration","isLoggedIn","path","exact","initialState","action","deauthorize","reducer","original","editPostInput","duplicateComments","duplicate","setSinglePostComments","replyInput","resetReplyInput","editCommentInput","toggleShowComment","messages","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6bdc4b8.chunk.js","sourcesContent":["export const AUTHORIZE = \"AUTHORIZE\";\nexport const DEAUTHORIZE = \"DEAUTHORIZE\";\nexport const TOGGLE_REGISTER_MODAL = \"TOGGLE_REGISTER_MODAL\";\nexport const TOGGLE_LOGIN_MODAL = \"TOGGLE_LOGIN_MODAL\";\n\nexport const LOAD_POSTS = \"LOAD_POSTS\";\nexport const SET_SINGLE_POST = \"SET_SINGLE_POST\";\nexport const TOGGLE_EDIT_POST = \"TOGGLE_EDIT_POST\";\nexport const EDIT_POST_INPUT = \"EDIT_POST_INPUT\";\n\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const TOGGLE_REPLY_FORM = \"TOGGLE_REPLY_FORM\";\nexport const COMMENT_REPLY = \"COMMENT_REPLY\";\nexport const REPLY_INPUT = \"REPLY_INPUT\";\nexport const RESET_REPLY_INPUT = \"RESET_REPLY_INPUT\";\nexport const SET_DELETED_COMMENT = \"SET_DELETED_COMMENT\";\nexport const TOGGLE_EDIT_COMMENT = \"TOGGLE_EDIT_COMMENT\";\nexport const EDIT_COMMENT_INPUT = \"EDIT_COMMENT_INPUT\";\nexport const TOGGLE_SHOW_COMMENT = \"TOGGLE_SHOW_COMMENT\";\nexport const SET_SINGLE_POST_COMMENTS = \"SET_SINGLE_POST_COMMENTS\";\n\nexport const SET_TOPICS = \"SET_TOPICS\";\nexport const SET_ADDED_TOPIC = \"SET_ADDED_TOPIC\";\n\nexport const SET_SIDEBAR = \"SET_SIDEBAR\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\n\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_SUCCESS = \"SET_SUCCESS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const SET_TIMEOUT = \"SET_TIMEOUT\";","import * as actionTypes from \"./actionTypes\";\n\nexport const setError = (error) => {\n  return {\n    type: actionTypes.SET_ERROR,\n    error,\n  };\n};\n\nexport const setSuccess = (success) => {\n  return {\n    type: actionTypes.SET_SUCCESS,\n    success,\n  };\n};\n\nexport const setLoading = (loading) => {\n  return {\n    type: actionTypes.SET_LOADING,\n    loading,\n  }\n}\n\nexport const setTimeout = (timeout) => {\n  return {\n    type: actionTypes.SET_TIMEOUT,\n    timeout\n  }\n}","import * as actionTypes from \"../actions/actionTypes\";\nimport jwt_decode from \"jwt-decode\";\nimport { setError, setLoading, setSuccess } from \"./flash\";\n\n// Authorize user\nexport const authorize = (user_id) => {\n  return {\n    type: actionTypes.AUTHORIZE,\n    user_id,\n  };\n};\n\n// Deauthorize user\nexport const deauthorize = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expires\");\n\n  return {\n    type: actionTypes.DEAUTHORIZE,\n  };\n};\n\n// Logout user\nexport const userLogout = () => {\n  return dispatch => {\n    dispatch(deauthorize())\n    dispatch(setSuccess(\"Logged Out\"))\n  }\n}\n\n// Toggle register modal\nexport const toggleRegisterModal = () => {\n  return {\n    type: actionTypes.TOGGLE_REGISTER_MODAL,\n  };\n};\n\n// Toggle register modal\nexport const toggleLoginModal = () => {\n  return {\n    type: actionTypes.TOGGLE_LOGIN_MODAL,\n  };\n};\n\n// Handle register user submission to backend\nexport const userRegister = (registerForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(\"http://localhost:3000/register\", {\n      method: \"POST\",\n      body: JSON.stringify(registerForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        const decoded = jwt_decode(localStorage.getItem(\"token\"));\n        dispatch(authorize(decoded.sub));\n\n        // Close modal on success\n        dispatch(toggleRegisterModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Handle login submission to backend\nexport const userLogin = (loginForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      body: JSON.stringify(loginForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Set jwt token in local storage\n        localStorage.setItem(\"token\", data.token);\n        const expires = Date.now() + Number(data.expiresIn);\n        localStorage.setItem(\"expires\", expires);\n\n        // Login user with redux state auth\n        dispatch(authorize());\n\n        dispatch(toggleLoginModal());\n\n        // Stop loading and set success message\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        // Display error to user and stop loading\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","const base = \"http://localhost:3000\";\n\nexport default base;","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport {setError, setSuccess, setLoading} from \"./flash\";\n\n// Add comment to post\nexport const addComment = (comment) => {\n  return {\n    type: actionTypes.ADD_COMMENT,\n    comment,\n  };\n};\n\n// Submit new comment\nexport const newComment = (commentForm, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ ...commentForm, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Set comments of one post\nexport const setSinglePostComments = (comments) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST_COMMENTS,\n    comments,\n  };\n};\n\n// Toggle display of comment reply form\nexport const toggleReplyForm = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_REPLY_FORM,\n    comment_id,\n  };\n};\n\n// Reset submitted comment reply's input and close input form\nexport const resetReplyInput = (comment_id) => {\n  return {\n    type: actionTypes.RESET_REPLY_INPUT,\n    comment_id,\n  };\n};\n\n// Submit comment to backend\nexport const commentReply = (text, post_id, parent) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/new`, {\n      method: \"POST\",\n      body: JSON.stringify({ text, post_id, parent }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(addComment(data.comment));\n\n        // Reset input\n        dispatch(resetReplyInput(parent));\n\n        // Close input form\n        dispatch(toggleReplyForm(parent));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Handle input of comment reply\nexport const replyInput = (value, comment_id) => {\n  return {\n    type: actionTypes.REPLY_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Set comment to deleted in state\nexport const setDeletedComment = (comment_id) => {\n  return {\n    type: actionTypes.SET_DELETED_COMMENT,\n    comment_id,\n  };\n};\n\n// Delete comment from database\nexport const deleteComment = (comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Remove from state\n        dispatch(setDeletedComment(comment_id));\n\n        dispatch(setLoading(false))\n        dispatch(setSuccess(data.message))\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditComment = (comment_id, canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_COMMENT,\n    comment_id,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editCommentInput = (value, comment_id) => {\n  return {\n    type: actionTypes.EDIT_COMMENT_INPUT,\n    value,\n    comment_id,\n  };\n};\n\n// Submit edited comment to backend\nexport const editComment = (text, comment_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true))\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/comments/${comment_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, comment_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditComment(comment_id));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false))\n        dispatch(setError(error.message))\n      });\n  };\n};\n\n// Toggle showing of comment and its' children\nexport const toggleShowComment = (comment_id) => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_COMMENT,\n    comment_id,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setSinglePostComments } from \"./comments\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\n\n// Submit new post\nexport const newPost = (postForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/new`, {\n      method: \"POST\",\n      body: JSON.stringify(postForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${postForm.topic}/${data.post_id}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Load posts\nexport const loadPosts = (posts) => {\n  return {\n    type: actionTypes.LOAD_POSTS,\n    posts,\n  };\n};\n\n// Get posts\nexport const getPosts = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]));\n    fetch(`${base}/posts`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts for a single topic\nexport const getTopicPosts = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]))\n\n    fetch(`${base}/posts/topics/${topic}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Set single post\nexport const setSinglePost = (post, comments) => {\n  return {\n    type: actionTypes.SET_SINGLE_POST,\n    post,\n  };\n};\n\n// Get single post\nexport const getSinglePost = (post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(setSinglePost({}))\n\n    fetch(`${base}/posts/${post_id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add posts to state\n        dispatch(setSinglePost(data.post));\n\n        // Add comments to state\n        dispatch(setSinglePostComments(data.comments));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Delete a post\nexport const deletePost = (post_id, history, topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/delete`, {\n      method: \"DELETE\",\n      body: JSON.stringify({ post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Redirect\n        history.push(`/topics/${topic}`);\n\n        dispatch(setLoading(false));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Toggle comment edit form\nexport const toggleEditPost = (canceled) => {\n  return {\n    type: actionTypes.TOGGLE_EDIT_POST,\n    canceled,\n  };\n};\n\n// Handle comment editing text box\nexport const editPostInput = (value, post_id) => {\n  return {\n    type: actionTypes.EDIT_POST_INPUT,\n    value,\n    post_id,\n  };\n};\n\n// Submit edited post to backend\nexport const editPost = (text, post_id) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    const token = localStorage.getItem(\"token\");\n    fetch(`${base}/posts/${post_id}/edit`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ text, post_id }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Close input form\n        dispatch(toggleEditPost());\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n\n// Get posts from submitted search\nexport const getSearchPosts = (query) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(loadPosts([]))\n\n    fetch(`${base}/posts/search?q=${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(loadPosts(data.posts));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.message));\n        dispatch(setLoading(false));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport base from \"../../base\";\nimport { setError, setSuccess, setLoading } from \"./flash\";\n\n// Submit new topic\nexport const newTopic = (topicForm, history) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    const token = localStorage.getItem(\"token\");\n\n    // Remove spaces from topic name and make lowercase\n    topicForm.name = topicForm.name.split(\" \").join(\"\").toLowerCase();\n\n    fetch(`${base}/newtopic`, {\n      method: \"POST\",\n      body: JSON.stringify(topicForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n\n        // Redirect\n        history.push(`/topics/${topicForm.name}`);\n\n        // Set loading and success message\n        dispatch(setLoading(true));\n        dispatch(setSuccess(data.message));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set topics in state\nexport const setTopics = (topics) => {\n  return {\n    type: actionTypes.SET_TOPICS,\n    topics,\n  };\n};\n\n// Get list of topics\nexport const getTopics = () => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n    dispatch(setTopics([]));\n\n    fetch(`${base}/posts/topics`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        // Add to state\n        dispatch(setTopics(data.topics));\n\n        // Stop loading\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n\n// Set added topic in state\nexport const setAddedTopic = (topic) => {\n  return {\n    type: actionTypes.SET_ADDED_TOPIC,\n    topic,\n  };\n};\n\n// Fetch topic information\nexport const addTopic = (topic) => {\n  return (dispatch) => {\n    dispatch(setLoading(true));\n\n    fetch(`${base}/posts/singletopic`, {\n      method: \"POST\",\n      body: JSON.stringify({ topic }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If error on backend throw to catch block\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        dispatch(setAddedTopic(data.topic));\n\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setLoading(false));\n        dispatch(setError(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\n\n// Set sidebar content\nexport const setSidebar = (isHome, name, description) => {\n  return {\n    type: actionTypes.SET_SIDEBAR,\n    isHome,\n    name,\n    description,\n  };\n};\n\n// Toggle sidebar showing\nexport const toggleSidebar = () => {\n  return {\n    type: actionTypes.TOGGLE_SIDEBAR\n  }\n}","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport * as actions from \"../../store/actions/index\";\n\nimport \"./Nav.css\"\n\nconst Nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        {props.sidebar.isHome ? (\n          <li>\n            <Link to=\"/\">Sayit</Link>\n          </li>\n        ) : (\n          <li>\n            <Link to={`/topics/${props.sidebar.name}`}>\n              {props.sidebar.name}\n            </Link>\n          </li>\n        )}\n\n\n        <button\n          className=\"menu-button\"\n          onClick={props.onToggleSidebar}\n          aria-label=\"toggle-sidebar\"\n        >\n          {props.sidebarShow ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n            </svg>\n          ) : (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n              />\n            </svg>\n          )}\n        </button>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    sidebar: state.sidebar.sidebar,\n    sidebarShow: state.sidebar.show,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","const dateSince = (date) => {\n  const duration = (Date.now() - new Date(date)) / 1000;\n  if (duration < 60) {\n    return `${duration.toFixed(0)} seconds ago`;\n  } else if (duration < 60 * 60) {\n    return `${(duration / 60).toFixed(0)} minutes ago`;\n  } else if (duration < 60 * 60 * 24) {\n    return `${(duration / (60 * 60)).toFixed(0)} hours ago`;\n  } else if (duration < 60 * 60 * 24 * 365) {\n    return `${(duration / (60 * 60 * 24)).toFixed(0)} days ago`;\n  } else {\n    return `${(duration / (60 * 60 * 24 * 365)).toFixed(0)} years ago`;\n  }\n}\n\nexport default dateSince;","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\"\n\nconst Home = (props) => {\n  useEffect(() => {\n    // Fetch posts on first load\n    props.onGetPosts();\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <p>Votes</p>\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <span className=\"post-username\">{post.username}</span> in{\" \"}\n            <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetPosts: () => {\n      dispatch(actions.getPosts());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Register.css\";\n\nconst Register = (props) => {\n  const [registerForm, setRegisterForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setRegisterForm({\n      ...registerForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserRegister(registerForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleRegisterModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Register</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleRegisterModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={registerForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={registerForm.password}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={registerForm.confirmPassword}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <button\n            className=\"basic-button\"\n            type=\"submit\"\n            aria-label=\"submit\"\n            disabled={props.loading ? \"disabled\" : null}\n          >\n            Register\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserRegister: (registerForm, history) => {\n      dispatch(actions.userRegister(registerForm, history));\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [loginForm, setLoginForm] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  // Change register details when inputs change\n  const handleInput = (e) => {\n    setLoginForm({\n      ...loginForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit register form handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Submit to backend\n    props.onUserLogin(loginForm, history);\n  };\n\n  // Handle clicking on modal without children being effected\n  const modalClick = (e) => {\n    if (e.currentTarget === e.target) {\n      props.onToggleLoginModal();\n    }\n  };\n\n  return (\n    <section className=\"modal-wrapper\" onClick={modalClick}>\n      <div>\n        <h1>Login</h1>\n        <button\n          className=\"modal-close-button\"\n          onClick={props.onToggleLoginModal}\n          aria-label=\"close form\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n          </svg>\n        </button>\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={loginForm.username}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={loginForm.password}\n              onChange={handleInput}\n              required\n            />\n          </div>\n          <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\" disabled={props.loading ? \"disabled\" : null}>\n            Login\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUserLogin: (loginForm, history) => {\n      dispatch(actions.userLogin(loginForm, history));\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewPost.css\";\n\nconst NewPost = (props) => {\n  let history = useHistory();\n\n  const [postForm, setPostForm] = useState({\n    title: \"\",\n    text: \"\",\n    topic: \"\",\n  });\n\n  useEffect(() => {\n    // If coming from a specific topic, pre fill in state\n    if (history.location.state) {\n      setPostForm({\n        ...postForm,\n        topic: history.location.state.topic,\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewPost(postForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Post</h1>\n      <form className=\"auth-form new-post-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title*</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={postForm.title}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Text</label>\n          <textarea\n            type=\"text\"\n            name=\"text\"\n            value={postForm.text}\n            onChange={handleInput}\n            required\n          ></textarea>\n        </div>\n        <div>\n          <label htmlFor=\"topic\">Topic*</label>\n          <input\n            type=\"text\"\n            name=\"topic\"\n            value={postForm.topic}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button className=\"basic-button\" type=\"submit\" aria-label=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewPost: (postForm, history) => {\n      dispatch(actions.newPost(postForm, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport * as actions from \"../store/actions/index\";\nimport \"./NewTopic.css\";\n\nconst NewTopic = (props) => {\n  let history = useHistory();\n\n  useEffect(() => {\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [topicForm, setTopicForm] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setTopicForm({\n      ...topicForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewTopic(topicForm, history);\n  };\n\n  return (\n    <section>\n      <h1 className=\"page-title\">New Topic</h1>\n      <form className=\"auth-form new-topic-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name*</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={topicForm.name}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"text\">Description*</label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={topicForm.description}\n            onChange={handleInput}\n            required\n          />\n        </div>\n        <button\n          className=\"basic-button\"\n          type=\"submit\"\n          aria-label=\"submit\"\n          disabled={props.loading ? \"disabled\" : false}\n        >\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onNewTopic: (topicForm, history) => {\n      dispatch(actions.newTopic(topicForm, history));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTopic);\n","import React, { useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport dateSince from \"./functions/dateSince\";\n\nconst Topic = (props) => {\n  const { topic } = useParams();\n\n  // Get posts on first run or if topic changes\n  useEffect(() => {\n    props.onGetTopicPosts(topic);\n    // eslint-disable-next-line\n  }, [topic]);\n\n  useEffect(() => {\n    // Find index of topic in state\n    let topicIndex = -1;\n    if (props.topics.length) {\n      topicIndex = props.topics.findIndex(\n        (topicState) => topicState && topicState.name === topic\n      );\n    }\n\n    // If topic not in state, fetch and add it\n    if (topicIndex === -1) {\n      props.onAddTopic(topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [topic, props.topics]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <p>Votes</p>\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by\n            <span className=\"comment-username\"> {post.username}</span>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts.posts,\n    topics: state.topics.topics,\n    error: state.flash.error,\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopicPosts: (topic) => {\n      dispatch(actions.getTopicPosts(topic));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topic);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show if the user was the creator of post or comment\n  if (props.user_id === props.creator_id) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  user_id: state.auth.user_id\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthShow = (props) => {\n  // Only show to logged in users\n  if (props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport AuthCreator from \"./AuthCreator\";\nimport AuthShow from \"./AuthShow\";\nimport dateSince from \"../functions/dateSince\"\n\nconst Comment = (props) => {\n  // Submit reply to a comment\n  const submitCommentReply = (e) => {\n    e.preventDefault();\n    props.onCommentReply(\n      props.comment.reply,\n      props.post_id,\n      props.comment.comment_id\n    );\n  };\n\n  // Submit comment after editing\n  const submitCommentEdit = (e) => {\n    e.preventDefault();\n    props.onEditComment(props.comment.text, props.comment.comment_id);\n  };\n\n  // Filter comments that have this comment as it's parent\n  const replies = props.allComments.filter(\n    (comment) => comment.parent === props.comment.comment_id\n  );\n\n  // Change content when hiding comment\n  let commentContent = null;\n  if (props.comment.show) {\n    commentContent = (\n      <React.Fragment>\n        {props.comment.editing ? (\n          <form className=\"edit-comment-form\" onSubmit={submitCommentEdit}>\n            <div>\n              <label htmlFor=\"editComment\" />\n              <textarea\n                name=\"text\"\n                id=\"editComment\"\n                value={props.comment.text}\n                onChange={(e) =>\n                  props.onEditCommentInput(\n                    e.target.value,\n                    props.comment.comment_id\n                  )\n                }\n                required\n              ></textarea>\n            </div>\n            <button className=\"basic-button\" type=\"submit\">\n              Submit\n            </button>\n            <button\n              className=\"basic-button\"\n              type=\"button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() =>\n                props.onToggleEditComment(props.comment.comment_id, true)\n              }\n            >\n              Cancel\n            </button>\n          </form>\n        ) : (\n          <div className=\"comment-text\">\n            <p>{props.comment.text}</p>\n          </div>\n        )}\n        <AuthShow>\n          <div className=\"comment-buttons\">\n            <button\n              data-index={props.index}\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={() => props.onToggleReplyForm(props.comment.comment_id)}\n            >\n              Reply\n            </button>\n            <AuthCreator creator_id={props.comment.user_id}>\n              <button\n                type=\"button\"\n                aria-label=\"delete\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeleteComment(props.comment.comment_id)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"edit\"\n                aria-label=\"edit\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleEditComment(props.comment.comment_id)\n                }\n              >\n                Edit\n              </button>\n            </AuthCreator>\n          </div>\n          {props.comment.showReply ? (\n            <form className=\"reply-form\" onSubmit={submitCommentReply}>\n              <div>\n                <label htmlFor=\"commentReply\"></label>\n                <textarea\n                  name=\"comment\"\n                  id=\"commentReply\"\n                  placeholder=\"Reply\"\n                  value={props.comment.reply}\n                  onChange={(e) =>\n                    props.onReplyInput(e.target.value, props.comment.comment_id)\n                  }\n                  required\n                ></textarea>\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n              <button\n                className=\"basic-button\"\n                type=\"button\"\n                aria-label=\"cancel\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() =>\n                  props.onToggleReplyForm(props.comment.comment_id)\n                }\n              >\n                Cancel\n              </button>\n            </form>\n          ) : null}\n        </AuthShow>\n        <ul>\n          {replies.map((comment) => {\n            return (\n              <Comment\n                allComments={props.allComments}\n                comment={comment}\n                post_id={props.post_id}\n                key={comment.comment_id}\n                loading={props.loading}\n                onToggleReplyForm={props.onToggleReplyForm}\n                onReplyInput={props.onReplyInput}\n                onCommentReply={props.onCommentReply}\n                onDeleteComment={props.onDeleteComment}\n                onToggleEditComment={props.onToggleEditComment}\n                onEditCommentInput={props.onEditCommentInput}\n                onEditComment={props.onEditComment}\n                onToggleShowComment={props.onToggleShowComment}\n              />\n            );\n          })}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <li className=\"child\" key={props.comment.comment_id}>\n      <p className=\"comment-subtitle\">\n        <button\n          onClick={() => props.onToggleShowComment(props.comment.comment_id)}\n        >\n          {props.comment.show ? \"[–]\" : \"[+]\"}\n        </button>\n        <span className=\"comment-username\">{props.comment.username}</span>\n        {dateSince(props.comment.time)}\n      </p>\n      {props.comment.show ? commentContent : null}\n    </li>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleReplyForm: (index) => {\n      dispatch(actions.toggleReplyForm(index));\n    },\n    onCommentReply: (text, post_id, parent) => {\n      dispatch(actions.commentReply(text, post_id, parent));\n    },\n    onReplyInput: (value, comment_id) => {\n      dispatch(actions.replyInput(value, comment_id));\n    },\n    onDeleteComment: (comment_id) => {\n      dispatch(actions.deleteComment(comment_id));\n    },\n    onToggleEditComment: (comment_id, canceled) => {\n      dispatch(actions.toggleEditComment(comment_id, canceled));\n    },\n    onEditCommentInput: (value, comment_id) => {\n      dispatch(actions.editCommentInput(value, comment_id));\n    },\n    onEditComment: (text, comment_id) => {\n      dispatch(actions.editComment(text, comment_id));\n    },\n    onToggleShowComment: (comment_id) => {\n      dispatch(actions.toggleShowComment(comment_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\nimport Comment from \"./helpers/Comment\";\nimport AuthShow from \"./helpers/AuthShow\";\nimport AuthCreator from \"./helpers/AuthCreator\";\nimport dateSince from \"./functions/dateSince\"\n\nconst Post = (props) => {\n  const { post_id, topic } = useParams();\n\n  let history = useHistory();\n\n  useEffect(() => {\n    // Fetch only if post undefined or wrong post\n    if (!props.post.post_id || props.post.post_id !== Number(post_id)) {\n      props.onGetSinglePost(post_id, topic, history);\n    }\n\n    // If topic in url wrong redirect to correct page\n    if (props.post.post_id && props.post.topic !== topic) {\n      history.replace(`/topics/${props.post.topic}/${post_id}`);\n    }\n\n    // Find index of topic in state\n    const topicIndex = props.topics.findIndex(\n      (topic) => topic.name === props.post.topic\n    );\n\n    // If post defined and topic not in state, fetch and add it\n    if (props.post.topic && topicIndex === -1) {\n      props.onAddTopic(props.post.topic);\n    }\n\n    // If post defined and topic in state, display topic in sidebar\n    if (props.post.topic && topicIndex !== -1) {\n      props.onSetSidebar(\n        false,\n        props.topics[topicIndex].name,\n        props.topics[topicIndex].description\n      );\n    }\n\n    // eslint-disable-next-line\n  }, [post_id, props.post.topic, props.topics]);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n  }, [post_id]);\n\n  // Submit post after editing\n  const submitPostEdit = (e) => {\n    e.preventDefault();\n    props.onEditPost(props.post.text, props.post.post_id);\n  };\n\n  let postDisplay = [];\n\n  // If post set and the post ids' match, display post\n  if (props.post.post_id && Number(props.post.post_id) === Number(post_id)) {\n    postDisplay = (\n      <div className=\"single-post\">\n        <div className=\"post-votes\">\n          <p>Votes</p>\n        </div>\n        <div className=\"post-details\">\n          <div className=\"post-title\">\n            <Link to={`/topics/${props.post.topic}/${props.post.post_id}`}>\n              {props.post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(props.post.time)} by{\" \"}\n            <span className=\"comment-username\">{props.post.username}</span>\n          </p>\n          {props.post.editing ? (\n            <form className=\"edit-post-form\" onSubmit={submitPostEdit}>\n              <label htmlFor=\"editPost\" aria-label=\"edit post\" />\n              <textarea\n                id=\"editPost\"\n                name=\"text\"\n                value={props.post.text.toString()}\n                onChange={(e) => props.onEditPostInput(e.target.value)}\n              ></textarea>\n              <div>\n                <button\n                  className=\"basic-button\"\n                  type=\"submit\"\n                  disabled={props.loading ? \"disabled\" : false}\n                >\n                  Submit\n                </button>\n                <button\n                  className=\"basic-button\"\n                  type=\"button\"\n                  aria-label=\"cancel\"\n                  disabled={props.loading ? \"disabled\" : false}\n                  onClick={() => props.onToggleEditPost(true)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div className=\"post-text\">\n              <p>{props.post.text}</p>\n            </div>\n          )}\n          <AuthCreator creator_id={props.post.user_id}>\n            <div className=\"comment-buttons\">\n              <button\n                type=\"button\"\n                aria-label=\"delete post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onDeletePost(post_id, history, topic)}\n              >\n                Delete\n              </button>\n              <button\n                type=\"button\"\n                aria-label=\"edit post\"\n                disabled={props.loading ? \"disabled\" : false}\n                onClick={() => props.onToggleEditPost()}\n              >\n                Edit\n              </button>\n            </div>\n          </AuthCreator>\n        </div>\n      </div>\n    );\n  }\n\n  const [commentForm, setCommentForm] = useState({\n    text: \"\",\n  });\n\n  // Get comments with no parent\n  const topLevelComments = props.comments.filter((comment) => !comment.parent);\n\n  // Display comments by newest for now\n  const commentsDisplay = topLevelComments.map((comment) => {\n    return (\n      <Comment\n        allComments={props.comments}\n        comment={comment}\n        key={comment.comment_id}\n        post_id={post_id}\n      />\n    );\n  });\n\n  // Handle text field changes\n  const handleInput = (e) => {\n    setCommentForm({\n      ...commentForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle Submission of form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onNewComment(commentForm, post_id);\n\n    // Reset to blank\n    setCommentForm({\n      text: \"\",\n    });\n  };\n\n  return (\n    <section>\n      {postDisplay}\n      {!props.post.post_id ? null : (\n        <div className=\"comments-section\">\n          <h2>Comments</h2>\n          <AuthShow>\n            <form className=\"new-comment-form\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"newComment\" aria-label=\"new comment\"></label>\n                <textarea\n                  name=\"text\"\n                  id=\"newComment\"\n                  placeholder=\"New Comment\"\n                  value={commentForm.text}\n                  onChange={handleInput}\n                  required\n                />\n              </div>\n              <button\n                className=\"basic-button\"\n                type=\"submit\"\n                aria-label=\"submit\"\n                disabled={props.loading ? \"disabled\" : false}\n              >\n                Submit\n              </button>\n            </form>\n          </AuthShow>\n          <ul>{commentsDisplay}</ul>\n        </div>\n      )}\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n  post: state.posts.post,\n  comments: state.comments.comments,\n  topics: state.topics.topics,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSinglePost: (post) => {\n      dispatch(actions.setSinglePost(post));\n    },\n    onGetSinglePost: (post_id) => {\n      dispatch(actions.getSinglePost(post_id));\n    },\n    onNewComment: (commentForm, post_id) => {\n      dispatch(actions.newComment(commentForm, post_id));\n    },\n    onDeletePost: (post_id, history, topic) => {\n      dispatch(actions.deletePost(post_id, history, topic));\n    },\n    onToggleEditPost: (canceled) => {\n      dispatch(actions.toggleEditPost(canceled));\n    },\n    onEditPostInput: (value) => {\n      dispatch(actions.editPostInput(value));\n    },\n    onEditPost: (text, post_id) => {\n      dispatch(actions.editPost(text, post_id));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n    onAddTopic: (topic) => {\n      dispatch(actions.addTopic(topic));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport \"./Topics.css\";\n\nconst Topics = (props) => {\n  useEffect(() => {\n    // Get list of topics\n    props.onGetTopics();\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, []);\n\n  const topicsDisplay = props.topics.map((topic) => {\n    return (\n      <li key={topic.topic_id}>\n        <Link to={`/topics/${topic.name}`}>{topic.name}</Link>\n        <p>{topic.description}</p>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <h1 className=\"page-title\">Topics</h1>\n      <ul className=\"topics-list\">{topicsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  topics: state.topics.topics,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetTopics: () => {\n      dispatch(actions.getTopics());\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topics);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst AuthHide = (props) => {\n  // Only show to user that are not logged in\n  if (!props.isAuth) {\n    return <React.Fragment>{props.children}</React.Fragment>;\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(AuthHide);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport AuthShow from \"./AuthShow\";\nimport AuthHide from \"./AuthHide\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = (props) => {\n  const [search, setSearch] = useState(\"\");\n\n  // Handle input in search bar\n  const searchInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  let history = useHistory();\n\n  // Handle search bar submission\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n\n    history.push(`/search?q=${search}`);\n\n    setSearch(\"\")\n  };\n\n  return (\n    <aside\n      className={`sidebar ${props.show ? \"open\" : \"\"}`}\n      onClick={props.onToggleSidebar}\n    >\n      <form onSubmit={handleSearchSubmit}>\n        <div className=\"search-bar\">\n          <label htmlFor=\"search\"></label>\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            placeholder=\"search\"\n            value={search}\n            onChange={searchInput}\n            required\n          />\n          <button type=\"submit\" aria-label=\"search\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n              <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div className=\"sidebar-links\">\n        <Link to=\"/topics\">Topics</Link>\n        <AuthShow>\n          <Link\n            to={{ pathname: \"/newpost\", state: { topic: props.sidebar.name } }}\n          >\n            New Post\n          </Link>\n          {props.sidebar.isHome ? <Link to=\"/newtopic\">New Topic</Link> : null}\n        </AuthShow>\n      </div>\n      <ul className=\"auth-links\">\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={(e) => {\n                // e.stopPropagation();\n                props.onToggleRegisterModal();\n              }}\n              aria-label=\"register\"\n            >\n              Register\n            </button>\n          </li>\n        </AuthHide>\n        <AuthHide>\n          <li>\n            <button\n              className=\"basic-button\"\n              disabled={props.loading ? \"disabled\" : false}\n              onClick={(e) => {\n                // e.stopPropagation();\n                props.onToggleLoginModal();\n              }}\n              aria-label=\"login\"\n            >\n              Login\n            </button>\n          </li>\n        </AuthHide>\n        <AuthShow>\n          <li>\n            <button\n              disabled={props.loading ? \"disabled\" : false}\n              className=\"basic-button\"\n              onClick={props.onUserLogout}\n              aria-label=\"logout\"\n            >\n              Logout\n            </button>\n          </li>\n        </AuthShow>\n      </ul>\n      <div className=\"sidebar-topic\">\n        <h3>{props.sidebar.name}</h3>\n        <p>{props.sidebar.description}</p>\n      </div>\n    </aside>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sidebar: state.sidebar.sidebar,\n  show: state.sidebar.show,\n  loading: state.flash.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleSidebar: () => {\n      dispatch(actions.toggleSidebar());\n    },\n    onUserLogout: () => {\n      dispatch(actions.userLogout());\n    },\n    onToggleLoginModal: () => {\n      dispatch(actions.toggleLoginModal());\n    },\n    onToggleRegisterModal: () => {\n      dispatch(actions.toggleRegisterModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React, { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport dateSince from \"./functions/dateSince\"\n\nconst SearchPosts = (props) => {\n  const location = useLocation();\n\n  const params = new URLSearchParams(location.search)\n  const query = params.get(\"q\")\n  \n  useEffect(() => {\n\n    console.log(query)\n    // Fetch posts on first load\n    props.onGetSearchPosts(query);\n\n    // Set sidebar to home content\n    props.onSetSidebar(true, \"\", \"\");\n\n    // eslint-disable-next-line\n  }, [query]);\n\n  const postsDisplay = props.posts.map((post, index) => {\n    return (\n      <li key={post.post_id}>\n        <div className=\"post-number\">\n          <p>{index + 1}</p>\n        </div>\n        <div className=\"post-votes\">\n          <p>Votes</p>\n        </div>\n        <div>\n          <div className=\"post-title\">\n            <Link to={`/topics/${post.topic}/${post.post_id}`}>\n              {post.title}\n            </Link>\n          </div>\n          <p className=\"post-subtitle\">\n            submitted {dateSince(post.time)} by{\" \"}\n            <span className=\"post-username\">{post.username}</span> in{\" \"}\n            <Link to={`/topics/${post.topic}`}>{post.topic}</Link>\n          </p>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className=\"Home\">\n      <ul className=\"posts-list\">{postsDisplay}</ul>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSearchPosts: (query) => {\n      dispatch(actions.getSearchPosts(query));\n    },\n    onSetSidebar: (isHome, name, description) => {\n      dispatch(actions.setSidebar(isHome, name, description));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPosts);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport \"./Flash.css\";\n\nconst FlashError = (props) => {\n  let errorDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetError(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.error !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.error]);\n\n  if (props.error !== \"\") {\n    errorDisplay = (\n      <div className=\"Flash error\" onClick={() => props.onSetError(\"\")}>\n        <h1>{props.error}</h1>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    error: state.flash.error,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetError: (error) => {\n      dispatch(actions.setError(error));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashError);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst FlashSuccess = (props) => {\n  let successDisplay = null;\n\n  useEffect(() => {\n    // Clear any old timeouts\n    clearTimeout(props.timeout);\n\n    // Hide message after 5 seconds\n    const startTimeout = () => {\n      props.onSetTimeout(\n        setTimeout(() => {\n          props.onSetSuccess(\"\");\n        }, 5000)\n      );\n    };\n\n    if (props.success !== \"\") {\n      startTimeout();\n    }\n\n    // eslint-disable-next-line\n  }, [props.success]);\n\n  if (props.success !== \"\") {\n    successDisplay = (\n      <div className=\"Flash success\" onClick={() => props.onSetSuccess(\"\")}>\n        <h1>{props.success}</h1>\n      </div>\n    );\n  }\n  return successDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    success: state.flash.success,\n    timeout: state.flash.timeout,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSetSuccess: (success) => {\n      dispatch(actions.setSuccess(success));\n    },\n    onSetTimeout: (timeout) => {\n      dispatch(actions.setTimeout(timeout))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashSuccess);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Flash.css\";\n\nconst FlashLoading = (props) => {\n  let errorDisplay = null;\n  if (props.loading) {\n    errorDisplay = (\n      <div className=\"Flash loading\">\n        <div className=\"lds-ellipsis\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n\n  return errorDisplay;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.flash.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashLoading);\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport * as actions from \"./store/actions/index\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Nav from \"./components/helpers/Nav\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport NewPost from \"./components/NewPost\";\nimport NewTopic from \"./components/NewTopic\";\nimport Topic from \"./components/Topic\";\nimport Post from \"./components/Post\";\nimport Topics from \"./components/Topics\";\nimport Sidebar from \"./components/helpers/Sidebar\";\nimport SearchPosts from \"./components/SearchPosts\";\nimport FlashError from \"./components/helpers/FlashError\";\nimport FlashSuccess from \"./components/helpers/FlashSuccess\";\nimport FlashLoading from \"./components/helpers/FlashLoading\";\n\nconst App = (props) => {\n  // Check if user has a valid token in local storage\n  const isLoggedIn = () => {\n    const expiration = localStorage.getItem(\"expires\");\n    return expiration && Number(expiration) > Date.now();\n  };\n\n  // Authorize user if they have a valid token\n  useEffect(() => {\n    if (isLoggedIn()) {\n      const decoded = jwt_decode(localStorage.getItem(\"token\"));\n      props.onAuthorize(decoded.sub);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <ScrollToTop />\n      <Nav />\n      <FlashError />\n      <FlashSuccess />\n      <FlashLoading />\n      <div className=\"main-grid\">\n        <main>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/newpost\">\n              <NewPost />\n            </Route>\n            <Route path=\"/newtopic\">\n              <NewTopic />\n            </Route>\n            <Route path=\"/search\">\n              <SearchPosts />\n            </Route>\n            <Route path=\"/topics\" exact>\n              <Topics />\n            </Route>\n            <Route path=\"/topics/:topic\" exact>\n              <Topic />\n            </Route>\n            <Route path=\"/topics/:topic/:post_id\" exact>\n              <Post />\n            </Route>\n          </Switch>\n        </main>\n        {props.registerModal ? <Register /> : null}\n        {props.loginModal ? <Login /> : null}\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    registerModal: state.auth.registerModal,\n    loginModal: state.auth.loginModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthorize: (user_id) => {\n      dispatch(actions.authorize(user_id));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  user_id: null,\n  registerModal: false,\n  loginModal: false,\n};\n\nconst authorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: true,\n    user_id: action.user_id,\n  };\n};\n\nconst deauthorize = (state, action) => {\n  return {\n    ...state,\n    isAuth: false,\n    user_id: null,\n  };\n};\n\nconst toggleRegisterModal = (state, action) => {\n  return {\n    ...state,\n    registerModal: !state.registerModal\n  }\n}\n\nconst toggleLoginModal = (state, action) => {\n  return {\n    ...state,\n    loginModal: !state.loginModal\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTHORIZE:\n      return authorize(state, action);\n    case actionTypes.DEAUTHORIZE:\n      return deauthorize(state, action);\n    case actionTypes.TOGGLE_REGISTER_MODAL:\n      return toggleRegisterModal(state, action);\n    case actionTypes.TOGGLE_LOGIN_MODAL:\n      return toggleLoginModal(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  posts: [],\n  post: {},\n};\n\nconst loadPosts = (state, action) => {\n  return {\n    ...state,\n    posts: action.posts,\n  };\n};\n\nconst setSinglePost = (state, action) => {\n  return {\n    ...state,\n    post: { ...action.post, editing: false },\n  };\n};\n\nconst toggleEditPost = (state, action) => {\n  const post = { ...state.post };\n\n  // Set post to editing\n  post.editing = !post.editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    post.text = post.original;\n  }\n\n  // Set original value so can be used if canceled\n  post.original = post.text;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst editPostInput = (state, action) => {\n  const post = { ...state.post };\n\n  post.text = action.value;\n\n  return {\n    ...state,\n    post,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LOAD_POSTS:\n      return loadPosts(state, action);\n    case actionTypes.SET_SINGLE_POST:\n      return setSinglePost(state, action);\n    case actionTypes.TOGGLE_EDIT_POST:\n      return toggleEditPost(state, action);\n    case actionTypes.EDIT_POST_INPUT:\n      return editPostInput(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  topics: [],\n};\n\nconst setTopics = (state, action) => {\n  return {\n    ...state,\n    topics: action.topics,\n  };\n};\n\nconst setAddedTopic = (state, action) => {\n  const topics = [];\n  for (let topic of state.topics) {\n    topics.push({ ...topic });\n  }\n\n  return {\n    ...state,\n    topics: [...topics, action.topic],\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TOPICS:\n      return setTopics(state, action);\n    case actionTypes.SET_ADDED_TOPIC:\n      return setAddedTopic(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  sidebar: {\n    isHome: true,\n    name: \"\",\n    description: \"\",\n  },\n  show: false,\n};\n\nconst setSidebar = (state, action) => {\n  return {\n    ...state,\n    sidebar: {\n      isHome: action.isHome,\n      name: action.name,\n      description: action.description,\n    },\n  };\n};\n\nconst toggleSidebar = (state, action) => {\n  return {\n    ...state,\n    show: !state.show,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SIDEBAR:\n      return setSidebar(state, action);\n    case actionTypes.TOGGLE_SIDEBAR:\n      return toggleSidebar(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  comments: [],\n};\n\n// Helper function to duplicate comments array\nconst duplicateComments = (comments) => {\n  const duplicate = [];\n  for (let comment of comments) {\n    duplicate.push({ ...comment });\n  }\n  return duplicate;\n};\n\nconst setSinglePostComments = (state, action) => {\n  const comments = action.comments;\n  for (let comment of comments) {\n    comment.reply = \"\";\n    comment.showReply = false;\n    comment.editing = false;\n    comment.show = true;\n  }\n  return {\n    ...state,\n    comments: action.comments,\n  };\n};\n\nconst addComment = (state, action) => {\n  return {\n    ...state,\n    comments: [\n      ...state.comments,\n      {\n        ...action.comment,\n        reply: \"\",\n        showReply: false,\n        editing: false,\n        show: true,\n      },\n    ],\n  };\n};\n\nconst toggleReplyForm = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].showReply = !comments[index].showReply;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst replyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst resetReplyInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].reply = \"\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst setDeletedComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set displayed comment text to deleted values\n  comments[index].text = \"[deleted]\";\n  comments[index].user_id = 11;\n  comments[index].username = \"[deleted]\";\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleEditComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  // Set chosen comment to editing mode\n  comments[index].editing = !comments[index].editing;\n\n  // If was canceled reset to original\n  if (action.canceled) {\n    comments[index].text = comments[index].original;\n  }\n\n  // Set original value so can be used if canceled\n  comments[index].original = comments[index].text;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst editCommentInput = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].text = action.value;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst toggleShowComment = (state, action) => {\n  const comments = duplicateComments(state.comments);\n\n  const index = comments.findIndex(\n    (comment) => comment.comment_id === Number(action.comment_id)\n  );\n\n  comments[index].show = !comments[index].show;\n\n  return {\n    ...state,\n    comments,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SINGLE_POST_COMMENTS:\n      return setSinglePostComments(state, action);\n    case actionTypes.ADD_COMMENT:\n      return addComment(state, action);\n    case actionTypes.TOGGLE_REPLY_FORM:\n      return toggleReplyForm(state, action);\n    case actionTypes.REPLY_INPUT:\n      return replyInput(state, action);\n    case actionTypes.RESET_REPLY_INPUT:\n      return resetReplyInput(state, action);\n    case actionTypes.SET_DELETED_COMMENT:\n      return setDeletedComment(state, action);\n    case actionTypes.TOGGLE_EDIT_COMMENT:\n      return toggleEditComment(state, action);\n    case actionTypes.EDIT_COMMENT_INPUT:\n      return editCommentInput(state, action);\n    case actionTypes.TOGGLE_SHOW_COMMENT:\n      return toggleShowComment(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  success: \"\",\n  error: \"\",\n  loading: false,\n  timeout: null,\n};\n\nconst setError = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    success: \"\",\n  };\n};\n\nconst setSuccess = (state, action) => {\n  return {\n    ...state,\n    success: action.success,\n    error: \"\",\n  };\n};\n\nconst setLoading = (state, action) => {\n  // Clear message if loading\n  const messages = {};\n  if (action.loading) {\n    messages.error = \"\";\n    messages.success = \"\";\n  }\n\n  return {\n    ...state,\n    ...messages,\n    loading: action.loading,\n  };\n};\n\nconst setTimeout = (state, action) => {\n  return {\n    ...state,\n    timeout: action.timeout,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ERROR:\n      return setError(state, action);\n    case actionTypes.SET_SUCCESS:\n      return setSuccess(state, action);\n    case actionTypes.SET_LOADING:\n      return setLoading(state, action);\n    case actionTypes.SET_TIMEOUT:\n      return setTimeout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport auth from \"./store/reducers/auth\";\nimport posts from \"./store/reducers/posts\"\nimport topics from \"./store/reducers/topics\"\nimport sidebar from \"./store/reducers/sidebar\"\nimport comments from \"./store/reducers/comments\"\nimport flash from \"./store/reducers/flash\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  posts: posts,\n  comments: comments,\n  topics: topics,\n  sidebar: sidebar,\n  flash: flash,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}